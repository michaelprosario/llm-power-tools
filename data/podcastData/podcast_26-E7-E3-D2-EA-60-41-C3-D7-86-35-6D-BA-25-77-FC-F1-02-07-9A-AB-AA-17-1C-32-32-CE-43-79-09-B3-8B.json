{
    "Id": "26-E7-E3-D2-EA-60-41-C3-D7-86-35-6D-BA-25-77-FC-F1-02-07-9A-AB-AA-17-1C-32-32-CE-43-79-09-B3-8B",
    "ContentSourceId": "425b36ab-3b93-42c9-8cbc-032e3bddb1d6",
    "Title": "Consuming APIs With Python and Building Microservices With gRPC",
    "SourceUrl": "https://realpython.com/podcasts/rpp/50/",
    "Description": "<p>Have you wanted to get your Python code to consume data from web-based APIs? Maybe you&rsquo;ve dabbled with the requests package, but you don&rsquo;t know what steps to take next. This week on the show, David Amos is back, and he&rsquo;s brought another batch of PyCoder&rsquo;s Weekly articles and projects.</p>\n<p>We discuss an article titled, &ldquo;Python&rsquo;s APIs: A Winning Combo for Reading Public Data&rdquo;. David shares another Real Python article about creating microservices using Google Remote Procedure Calls (gRPC).</p>\n<p>We also cover several other articles and projects from the Python community including, making a difficult data analysis question easy with pandas, efficiently cleaning text with pandas, the tricky bits of Python concurrency, building rich terminal dashboards, making better assertions for Python tests, and building and managing real-life data science projects with metaflow.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Course Spotlight:</strong> <a href=\"https://realpython.com/courses/python-requests/\">Making HTTP Requests With Python</a></p>\n<p>The &ldquo;requests&rdquo; library is the de facto standard for making HTTP requests in Python. It abstracts the complexities of making requests behind a beautiful, simple API so that you can focus on interacting with services and consuming data in your application. This course shows you how to work effectively with &ldquo;requests&rdquo;, from start to finish.</p>\n</div>\n<p>Topics:</p>\n<ul>\n<li>00:00:00 &ndash; Introduction</li>\n<li>00:01:46 &ndash; Python Microservices With gRPC</li>\n<li>00:07:49 &ndash; Python&rsquo;s APIs: A Winning Combo for Reading Public Data</li>\n<li>00:15:07 &ndash; Making a Difficult Data Analysis Question Easy With Pandas</li>\n<li>00:21:07 &ndash; Efficiently Cleaning Text With Pandas</li>\n<li>00:34:20 &ndash; Video Course Spotlight</li>\n<li>00:35:27 &ndash; Python Concurrency: The Tricky Bits</li>\n<li>00:41:49 &ndash; Building Rich Terminal Dashboards</li>\n<li>00:45:08 &ndash; python-precisely: Better Assertions for Python Tests</li>\n<li>00:48:45 &ndash; metaflow: Build and Manage Real-Life Data Science Projects With Ease</li>\n<li>00:52:35 &ndash; Thanks and goodbye</li>\n</ul>\n<p>Show Links:</p>\n<p><a href=\"https://realpython.com/python-microservices-grpc/\">Python Microservices With gRPC</a> &ndash; Learn how to build a robust and developer-friendly Python microservices infrastructure using gRPC and Kubernetes. You&rsquo;ll also explore advanced topics such as interceptors and integration testing.</p>\n<p><a href=\"https://realpython.com/python-api/\">Python&rsquo;s APIs: A Winning Combo for Reading Public Data</a> &ndash; Learn what APIs are and how to consume them using Python. You&rsquo;ll also learn some core concepts for working with APIs, such as status codes, HTTP methods, using the requests library, and much more.</p>\n<p><a href=\"https://drawingfromdata.com/pandas/reshaping/Making-a-difficult-data-analysis-problem-trivial.html\">Making a Difficult Data Analysis Question Easy With Pandas</a> &ndash; A great strategy to use when faced with a tricky data analysis problem is to reshape the dataset into a format that turns it into an easy problem. In this article, you&rsquo;ll look at an example involving a simple calculation and extensive reshaping in pandas.</p>\n<p><a href=\"https://pbpython.com/text-cleaning.html\">Efficiently Cleaning Text With Pandas</a> &ndash; In this article, you&rsquo;ll see some examples of cleaning text fields in a large data file and learn several strategies for efficiently cleaning unstructured text fields using Python and pandas.</p>\n<p><a href=\"https://python.hamel.dev/concurrency/\">Python Concurrency: The Tricky Bits</a> &ndash; An exploration of threads, processes, and coroutines in Python, with interesting examples that illuminate the differences between each.</p>\n<p><a href=\"https://www.willmcgugan.com/blog/tech/post/building-rich-terminal-dashboards/\">Building Rich Terminal Dashboards</a> &ndash; Learn how to use the Rich CLI library&rsquo;s new terminal dashboard feature.</p>\n<p>Projects:</p>\n<ul>\n<li><a href=\"https://github.com/mwilliamson/python-precisely\">python-precisely: Better Assertions for Python Tests</a></li>\n<li><a href=\"https://github.com/Netflix/metaflow\">metaflow: Build and Manage Real-Life Data Science Projects With Ease</a></li>\n</ul>\n<p>Additional Links:</p>\n<ul>\n<li><a href=\"https://cloud.google.com/blog/products/api-management/understanding-grpc-openapi-and-rest-and-when-to-use-them\">API design: Understanding gRPC, OpenAPI and REST and when to use them</a></li>\n<li><a href=\"https://counting.substack.com/p/data-cleaning-is-analysis-not-grunt\">Data Cleaning IS Analysis, Not Grunt Work</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/How_to_Lie_with_Statistics\">How to Lie with Statistics: Wikipedia Article</a></li>\n</ul>\n<p>Level up your Python skills with our expert-led courses:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/django-rest-framework/\">Building HTTP APIs With Django REST Framework</a></li>\n<li><a href=\"https://realpython.com/courses/web-scraping-beautiful-soup/\">Web Scraping With Beautiful Soup and Python</a></li>\n<li><a href=\"https://realpython.com/courses/python-requests/\">Making HTTP Requests With Python</a></li>\n</ul> <p><a rel=\"payment\" href=\"https://realpython.com/join\">Support the podcast &amp; join our community of Pythonistas</a></p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/files.realpython.com/podcasts/RPP_E050_DavidandChris2.5b4027502823.mp3"
}