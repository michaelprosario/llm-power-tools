{
    "Id": "A7-C4-B5-38-89-EB-83-57-9A-E0-7F-5D-E1-39-0F-09-D4-63-23-8C-F9-4E-06-F5-48-9B-EA-80-48-36-1B-85",
    "ContentSourceId": "425b36ab-3b93-42c9-8cbc-032e3bddb1d6",
    "Title": "Surveying Comprehension Constructs & Python Parallelism Infighting",
    "SourceUrl": "https://realpython.com/podcasts/rpp/139/",
    "Description": "<p>Have you embraced the use of comprehensions in your Python journey? Are you familiar with all the varieties of comprehension constructs? This week on the show, Christopher Trudeau is here, bringing another batch of PyCoder&rsquo;s Weekly articles and projects.</p>\n<p>We discuss a recent article that surveys Python&rsquo;s comprehensions and generators. This overview includes code snippets and the fundamentals of creating list, set, and dictionary comprehensions. We weigh the advantages of using a comprehension versus the more familiar <code>for</code> loops that they replace.</p>\n<p>Christopher shares an article about how there may be infighting between the parallelism in your Python code and the parallelism within the libraries that you&rsquo;re using. These complex system interactions can cause processing slowdowns and hard-to-trace bottlenecks.</p>\n<p>We share several other articles and projects from the Python community, including a news roundup, a Python linter comparison, an overview of multiprocessing race conditions in Python, a discussion covering <code>import</code> statement styles, a project for WASM-powered Jupyter tools running in the browser, and a collection of easter eggs and jokes hidden inside Python itself.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Course Spotlight:</strong> <a href=\"https://realpython.com/courses/understand-list-comprehensions/\">Understanding Python List Comprehensions</a> </p>\n<p>Python list comprehensions make it easy to create lists while performing sophisticated filtering, mapping, and conditional logic on their members. In this course, you&rsquo;ll learn when to use list comprehensions in Python and how to create them effectively.</p>\n</div>\n<p>Topics:</p>\n<ul>\n<li>00:00:00 &ndash; Introduction</li>\n<li>00:02:41 &ndash; PyPy v7.3.10 Release</li>\n<li>00:03:17 &ndash; Django Bugfix Release: 4.1.4</li>\n<li>00:03:28 &ndash; Python 3.11.1, 3.10.9, 3.9.16, 3.8.16, 3.7.16 Released</li>\n<li>00:03:56 &ndash; Python Linter Comparison 2022</li>\n<li>00:11:51 &ndash; Who Controls Parallelism? A Disagreement That Leads to Slower Code</li>\n<li>00:15:58 &ndash; Sponsor: InfluxDB</li>\n<li>00:16:47 &ndash; A Crash Course in Comprehensions and Generators</li>\n<li>00:24:23 &ndash; Multiprocessing Race Conditions in Python</li>\n<li>00:27:46 &ndash; Video Course Spotlight</li>\n<li>00:28:55 &ndash; What Style of <code>import</code> Statement Do You Use?</li>\n<li>00:36:54 &ndash; jupyterlite: WASM Powered Jupyter Running in the Browser</li>\n<li>00:40:35 &ndash; python-easter-eggs: Easter Eggs and Hidden Jokes in Python</li>\n<li>00:43:18 &ndash; PyCoder&rsquo;s Weekly: Submit a Link</li>\n<li>00:43:46 &ndash; Thanks and goodbye</li>\n</ul>\n<p>News:</p>\n<ul>\n<li><a href=\"https://www.pypy.org/posts/2022/12/pypy-v7310-release.html\">PyPy v7.3.10 Release</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2022/dec/06/bugfix-release/\">Django Bugfix Release: 4.1.4</a></li>\n<li><a href=\"https://pythoninsider.blogspot.com/2022/12/python-3111-3109-3916-3816-3716-and.html\">Python 3.11.1, 3.10.9, 3.9.16, 3.8.16, 3.7.16 Released</a></li>\n</ul>\n<p>Show Links:</p>\n<ul>\n<li><a href=\"https://inventwithpython.com/blog/2022/11/19/python-linter-comparison-2022-pylint-vs-pyflakes-vs-flake8-vs-autopep8-vs-bandit-vs-prospector-vs-pylama-vs-pyroma-vs-black-vs-mypy-vs-radon-vs-mccabe/\">Python Linter Comparison 2022</a> &ndash; There are many linter choices for Python. This article covers a lot of them: Pylint, Pyflakes, Flake8, autopep8, Bandit, Prospector, Pylama, Pyroma, Black, Mypy, Radon, and mccabe.</li>\n<li><a href=\"https://pythonspeed.com/articles/concurrency-control/\">Who Controls Parallelism? A Disagreement That Leads to Slower Code</a> &ndash; In complex systems, there may be a fight between the parallelism in your code vs the parallelism in the libraries that you&rsquo;re using. This fight can cause things to slow down. This article shows some examples and explores what you can do about the issue.</li>\n<li><a href=\"https://medium.com/@petefison/a-crash-course-in-python-comprehensions-and-generators-f069c8f8ca38\">A Crash Course in Comprehensions and Generators</a> &ndash; A great collection of code snippets that showcase the power and flexibility of list comprehensions, generators, and related constructs.</li>\n<li><a href=\"https://superfastpython.com/multiprocessing-race-condition-python/\">Multiprocessing Race Conditions in Python</a> &ndash; A race condition happens when parallel tasks attempt to execute code at the same time and the results are dependent on order of execution. Finding race conditions can be challenging. This article gives some hints as to how to find the different kinds of race conditions when coding with the <code>multiprocessing</code> module.</li>\n</ul>\n<p>Discussion:</p>\n<ul>\n<li><a href=\"https://twitter.com/bbelderbos/status/1598663617506734080\">What Style of <code>import</code> Statement Do You Use?</a></li>\n<li><a href=\"https://docs.quantifiedcode.com/python-anti-patterns/maintainability/from_module_import_all_used.html\">Using wildcard imports (from \u2026 import *) \u2014 Python Anti-Patterns documentation</a></li>\n<li><a href=\"https://realpython.com/python-import/#basic-python-import\">Python import: Advanced Techniques and Tips \u2013 Real Python</a></li>\n</ul>\n<p>Projects:</p>\n<ul>\n<li><a href=\"https://github.com/jupyterlite/jupyterlite\">jupyterlite: WASM Powered Jupyter Running in the Browser</a></li>\n<li><a href=\"https://github.com/OrkoHunter/python-easter-eggs\">python-easter-eggs: Easter Eggs and Hidden Jokes in Python</a></li>\n</ul>\n<p>Additional Links:</p>\n<ul>\n<li><a href=\"https://realpython.com/podcasts/rpp/39/\">Episode #39: Generators, Coroutines, and Learning Python Through Exercises \u2013 The Real Python Podcast</a></li>\n<li><a href=\"https://realpython.com/introduction-to-python-generators/\">How to Use Generators and yield in Python \u2013 Real Python</a></li>\n<li><a href=\"https://pycoders.com/submissions\">PyCoder&rsquo;s Weekly: Submit a Link</a></li>\n</ul>\n<p>Level up your Python skills with our expert-led courses:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/threading-python/\">Threading in Python</a></li>\n<li><a href=\"https://realpython.com/courses/understand-list-comprehensions/\">Understanding Python List Comprehensions</a></li>\n<li><a href=\"https://realpython.com/courses/python-generators/\">Python Generators 101</a></li>\n</ul> <p><a rel=\"payment\" href=\"https://realpython.com/join\">Support the podcast &amp; join our community of Pythonistas</a></p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/files.realpython.com/podcasts/RPP_E139_03_Cx2.ef73e6d1565c.mp3"
}