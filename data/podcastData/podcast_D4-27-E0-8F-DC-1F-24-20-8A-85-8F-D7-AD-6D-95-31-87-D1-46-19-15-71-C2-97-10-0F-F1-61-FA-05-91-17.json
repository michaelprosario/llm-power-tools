{
    "Id": "D4-27-E0-8F-DC-1F-24-20-8A-85-8F-D7-AD-6D-95-31-87-D1-46-19-15-71-C2-97-10-0F-F1-61-FA-05-91-17",
    "ContentSourceId": "ee3f8f9f-8c83-488e-aada-ce09bc743a17",
    "Title": "This AI-assisted bug bash is offering serious prizes for squashing nasty code",
    "SourceUrl": "https://stackoverflow.blog/podcast/",
    "Description": "<p>While every developer loves a good story about discovering and fixing a gnarly bug, not everyone enjoys the work of finding those bugs. Most folks would prefer to be writing business logic and solving new problems. But those input validation errors and resource leaks won\u2019t solve themselves.\u00a0</p><p>Or will they?</p><p>AWS Bug Bust is a global competition launched with the goal of finding and fixing one million bugs in codebases around the world. It takes the traditional bug bash and turns it into a competition that anyone can enter. Got a repo or two that you\u2019ve been meaning to clean up? Enter the Bug Bust and start squashing.\u00a0</p><p>This competition awards points to organizations, as well as individuals within an organization, for every bug that they fix in their own repos. A little friendly competition can motivate developers to fix more bugs in order to move up the leaderboards. How do you think we built Stack Overflow? Fake internet points are very important around here. With the Bug Bust competition, it\u2019s not just fake internet points and personal glory; top bug squashers\u2014overall and within top organizations\u2014can win all expense paid trips to <a href=\"https://reinvent.awsevents.com/\">re:Invent 2021</a>.\u00a0</p><p>In a traditional bug bust, someone has to find the bugs, file tickets on all of them, then collect them for squashing. In the Bug Bust, Amazon has managed to automate that part of the process. That\u2019s because the Bug Bust is built on their AI-powered code review and profiling tool, CodeGuru.\u00a0</p><p>CodeGuru uses static analysis and machine learning with some additional automated reasoning to find bugs in code; everything from best practices to concurrency issues, resource leaks, security problems, and more. AI isn\u2019t here to take your jobs, it\u2019s here to automated away the tedious stuff. Developers get to harness the power of artificial intelligence in their everyday lives.</p><p>Concurrency and resource leak issues tend to drain the soul out of the developers. You could spend all day trying to optimize and close those. CodeGuru includes a function profiler that looks for a codebase\u2019s most expensive calls. It\u2019s a lightweight agent actively running and looking for ways to reduce the cost of the running application.\u00a0</p><p>These bugs, along with security issues and AWS API calls, are the ones that earn the most points. But all bugs earn their bashers points; CodeGuru spots code inefficiencies, duplications, and general code quality detectors, and performs input validation. The model behind this is pretrained on years of Amazon bug hunting experience. The system does learn from you as to what is a good bug in your codebase, but it\u2019s not training on your code. It\u2019s your feedback that makes CodeGuru a better bug hunter.</p><p>If you have Java and Python code in a GitHub, GitHub Enterprise, Bitbucket, or AWS CodeCommit repository, you can jump into the competition. Sign up with your email and you get 30 days to run as many Bug Busts as you want for free. The top ten individual bug busters get VIP treatment at the 2021 re:Invent conference (and an all-expense-paid trip there), which is being held in person this year. Top participating organizations get\u00a0 a ticket to give to one of their developers as well. For those bashers outside of the top ten, you can still earn some sweet swag by passing some point milestones.\u00a0</p><p>The contest to win the trip to re:Invent 2021 runs through September, but you can still automate your bug bashes and get swag anytime. Want to get started? Head over to the <a href=\"https://aws.amazon.com/bugbust/\">AWS Bug Bust site now</a>.</p>\n",
    "EnclosureUrl": "https://pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/798ccdab-b4fe-447f-aa43-888bffdf4b87/audio/128/default.mp3?aid=rss_feed&awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b&awEpisodeId=798ccdab-b4fe-447f-aa43-888bffdf4b87&feed=XA_851k3"
}