{
    "Id": "3A-79-DE-8A-70-07-F8-45-AA-D0-4A-E9-24-0F-E3-C5-90-AA-68-66-B0-87-B4-72-BF-64-86-C1-56-0B-0B-CE",
    "ContentSourceId": "f8b5d0b7-9181-43a4-8fab-d3e2b2c93d0a",
    "Title": "SE Radio 671: Carson Gross on HTMX",
    "SourceUrl": "http://se-radio.net/se-radio-671-carson-gross-on-htmx",
    "Description": "<p data-prosemirror-content-type=\"node\" data-prosemirror-node-name= \"paragraph\" data-prosemirror-node-block=\"true\" data-pm-slice= \"1 1 []\">In this episode, SE Radio host <a href= \"https://se-radio.net/team/sriram-panyam/\">Sriram Panyam</a> explores HTMX with its creator, Carson Gross, who is also creator of\u00a0Hyperscript, the mind behind the Grug Brained Developer, a professor of software engineering at Montana State University, and co-author of <a style= \"font-size: revert; background-color: #ffffff;\" href= \"https://hypermedia.systems/\" data-prosemirror-content-type=\"mark\" data-prosemirror-mark-name=\"link\">Hypermedia Systems</a>.</p> <p data-prosemirror-content-type=\"node\" data-prosemirror-node-name= \"paragraph\" data-prosemirror-node-block=\"true\" data-pm-slice= \"1 1 []\">HTMX is a modern JavaScript library that allows developers to access AJAX, WebSockets, CSS Transitions, and Server-Sent Events directly in HTML using attributes. It represents a return to hypermedia-driven application architecture while supporting modern user experiences. The episode starts with a look at the current complexity in web development and how HTMX offers an alternative approach. Carson explains the core philosophy of \"HTML as the interface\" and how hypermedia principles influenced HTMX's design. From there, they dive into HTMX's technical concepts, including its attribute system, server-side integration, event handling, and state management approach.</p> <p data-prosemirror-content-type=\"node\" data-prosemirror-node-name= \"paragraph\" data-prosemirror-node-block=\"true\" data-pm-slice= \"1 1 []\">Carson shares some real-world implementation strategies, including migration paths from JavaScript frameworks, architectural patterns, and performance considerations -- as well as a few scenarios in which HTMX might not be the best fit. Finally, they look at the growing HTMX ecosystem, community contributions, and future development roadmap. Throughout the episode, Carson provides concrete examples and case studies of HTMX in production environments.</p> <p data-prosemirror-content-type=\"node\" data-prosemirror-node-name= \"paragraph\" data-prosemirror-node-block=\"true\" data-pm-slice= \"1 1 []\">Brought to you by\u00a0<a href=\"https://www.computer.org/\" target=\"_blank\" rel=\"noopener\">IEEE Computer Society</a>\u00a0and\u00a0<a href= \"https://www.computer.org/software\" target=\"_blank\" rel= \"noopener\">IEEE Software magazine</a>.</p>",
    "EnclosureUrl": "https://traffic.libsyn.com/secure/seradio/671-carson-gross-htmx.mp3?dest-id=23379"
}