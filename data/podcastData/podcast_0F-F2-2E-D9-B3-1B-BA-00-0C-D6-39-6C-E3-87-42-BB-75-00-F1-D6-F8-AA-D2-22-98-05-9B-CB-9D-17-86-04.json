{
    "Id": "0F-F2-2E-D9-B3-1B-BA-00-0C-D6-39-6C-E3-87-42-BB-75-00-F1-D6-F8-AA-D2-22-98-05-9B-CB-9D-17-86-04",
    "ContentSourceId": "425b36ab-3b93-42c9-8cbc-032e3bddb1d6",
    "Title": "Python Wheels and Pass by Reference in Python",
    "SourceUrl": "https://realpython.com/podcasts/rpp/23/",
    "Description": "<p>Have you wondered what are Python wheels? How are they used to package Python code? Does Python use pass by value or pass by reference? This week on the show, David Amos is here to help answer these questions, and he has brought another batch of PyCoder\u2019s Weekly articles and projects.</p>\n<p>We talk about an article called &ldquo;What are Python Wheels, and Why Should You Care.&rdquo; David talks about a Real Python article about pass by reference in Python. We cover several other articles and projects from the Python community including: transcribing speech to text, 4 powerful features Python is still missing, 10 awesome pythonic one-liners, and even more options for packaging your Python code.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Course Spotlight:</strong> <a href=\"https://realpython.com/courses/practical-recipes-files/\">Practical Recipes for Working With Files in Python</a> </p>\n<p>In this course, you&rsquo;ll learn how you can work with files in Python by using built-in modules to perform practical tasks that involve groups of files, like renaming them, moving them around, archiving them, and getting their metadata.</p>\n</div>\n<p>Topics: </p>\n<ul>\n<li>00:00:00 &ndash; Introduction</li>\n<li>00:01:25 &ndash; 4 Powerful Features Python Is Still Missing</li>\n<li>00:14:41 &ndash; What Are Python Wheels and Why Should You Care?</li>\n<li>00:23:58 &ndash; 10 Awesome Pythonic One-Liners Explained</li>\n<li>00:38:11 &ndash; Video Course Spotlight </li>\n<li>00:39:14 &ndash; How to Transcribe Speech Recordings Into Text With Python</li>\n<li>00:43:34 &ndash; Pass by Reference in Python: Background and Best Practices</li>\n<li>00:49:54 &ndash; Options for Packaging Your Python Code: Wheels, Conda, Docker, and More</li>\n<li>00:55:53 &ndash; PyOxidizer: A Modern Python Application Packaging and Distribution Tool</li>\n<li>01:00:13 &ndash; Python and PDF: A Review of Existing Tools</li>\n<li>01:04:01 &ndash; Thanks and Goodbye</li>\n</ul>\n<p>Show Links:</p>\n<p><a href=\"https://www.infoworld.com/article/3566382/4-powerful-features-python-is-still-missing.html\">4 Powerful Features Python Is Still Missing</a> &ndash; Python doesn&rsquo;t have true constants, nor does it implement features like tail recursion optimization that many compiled languages employ. Find out what other features Python is &ldquo;missing&rdquo; when compared to other languages, and why the core developers haven&rsquo;t added these features to the language.</p>\n<p><a href=\"https://realpython.com/python-wheels/\">What Are Python Wheels and Why Should You Care?</a> &ndash; In this tutorial, you&rsquo;ll learn what Python wheels are and why you should care as both a developer and end user of Python packages. You&rsquo;ll see how the wheel format has gained momentum over the last decade and how it has made the package installation process faster and more stable.</p>\n<p><a href=\"https://dev.to/devmount/10-awesome-pythonic-one-liners-explained-3doc\">10 Awesome Pythonic One-Liners Explained</a> &ndash; Some things in Python are just better on one line.</p>\n<p><a href=\"https://www.fullstackpython.com/blog/transcribe-recordings-speech-text-assemblyai.html\">How to Transcribe Speech Recordings Into Text With Python</a> &ndash; Learn to transcribe speech in recordings like MP3s into text with Python and AssemblyAI&rsquo;s API</p>\n<p><a href=\"https://realpython.com/python-pass-by-reference/\">Pass by Reference in Python: Background and Best Practices</a> &ndash; In this tutorial, you&rsquo;ll explore the concept of passing by reference and learn how it relates to Python&rsquo;s own system for handling function arguments. You&rsquo;ll look at several use cases for passing by reference and learn some best practices for implementing pass-by-reference constructs in Python.</p>\n<p><a href=\"https://pythonspeed.com/articles/distributing-software/\">Options for Packaging Your Python Code: Wheels, Conda, Docker, and More</a> &ndash; There&rsquo;s a lot of ways to package your Python code. Find out which one is right for you.</p>\n<p><a href=\"https://github.com/indygreg/PyOxidizer\">PyOxidizer: A Modern Python Application Packaging and Distribution Tool</a></p>\n<p><a href=\"https://johannesfilter.com/python-and-pdf-a-review-of-existing-tools/\">Python and PDF: A Review of Existing Tools</a> &ndash; The ultimate list of PDF tools in Python.</p>\n<p>Additional Links:</p>\n<ul>\n<li><a href=\"https://realpython.com/python38-new-features/#more-precise-types\">Cool New Features in Python 3.8: More Precise Types - Real Python article</a></li>\n<li><a href=\"https://python101.pythonlibrary.org/chapter39_wheels.html\">Python 101 - Chapter 39 &ndash; Python wheels</a></li>\n<li><a href=\"https://www.artima.com/weblogs/viewpost.jsp?thread=147358\">Language Design Is Not Just Solving Puzzles: Guido Van Rossum</a></li>\n<li><a href=\"https://realpython.com/pypi-publish-python-package/\">How to Publish an Open-Source Python Package to PyPI - Real Python article</a></li>\n<li><a href=\"https://www.assemblyai.com\">AssemblyAI: Speech-to-Text API</a></li>\n</ul>\n<p>Level up your Python skills with our expert-led courses:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/lists-tuples-python/\">Lists and Tuples in Python</a></li>\n<li><a href=\"https://realpython.com/courses/pdf-python/\">How to Work With a PDF in Python</a></li>\n<li><a href=\"https://realpython.com/courses/practical-recipes-files/\">Practical Recipes for Working With Files in Python</a></li>\n</ul> <p><a rel=\"payment\" href=\"https://realpython.com/join\">Support the podcast &amp; join our community of Pythonistas</a></p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/files.realpython.com/podcasts/RPP_E023_David.6062e11c820a.mp3"
}