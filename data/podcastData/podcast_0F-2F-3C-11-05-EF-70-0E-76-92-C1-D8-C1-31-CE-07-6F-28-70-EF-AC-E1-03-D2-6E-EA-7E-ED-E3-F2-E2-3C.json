{
    "Id": "0F-2F-3C-11-05-EF-70-0E-76-92-C1-D8-C1-31-CE-07-6F-28-70-EF-AC-E1-03-D2-6E-EA-7E-ED-E3-F2-E2-3C",
    "ContentSourceId": "425b36ab-3b93-42c9-8cbc-032e3bddb1d6",
    "Title": "Exploring Python With bpython & Formalizing f-String Grammar",
    "SourceUrl": "https://realpython.com/podcasts/rpp/141/",
    "Description": "<p>Have you used the Python Read-Eval-Print Loop (REPL) to explore the language and learn about how it operates? Would it help if it provided syntax highlighting, definitions, and code completion and behaved more like an IDE? This week on the show, Christopher Trudeau is here, bringing another batch of PyCoder&rsquo;s Weekly articles and projects.</p>\n<p>We discuss the drop-in REPL replacement bpython. bpython enhances the interactivity of a Python REPL session. It&rsquo;s also a powerful teaching tool for instructors and students to experiment with and explore Python code. </p>\n<p>Christopher shares a recent Python Enhancement Proposal (PEP) about formalizing the grammar for f-strings. The PEP describes a reduction in the underlying parser code complexity and provides for future features like comments in multiline f-strings.</p>\n<p>We share several other articles and projects from the Python community, including a news roundup, a collection of surveys to classify Python virtual environment workflows, a course about context managers and Python&rsquo;s <code>with</code> statement, a discussion about microfeatures that we would like to see adopted in Python, a Python terminal music player, and an infinite array powered by AI.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Course Spotlight:</strong> <a href=\"https://realpython.com/courses/with-statement-python/\">Context Managers and Python&rsquo;s <code>with</code> Statement</a> </p>\n<p>In this video course, you&rsquo;ll learn what the Python <code>with</code> statement is and how to use it with existing context managers. You&rsquo;ll also learn how to create your own context managers.</p>\n</div>\n<p>Topics:</p>\n<ul>\n<li>00:00:00 &ndash; Introduction</li>\n<li>00:02:21 &ndash; Pillow 9.4.0 Released</li>\n<li>00:02:47 &ndash; Django Bugfix Release: 4.1.5</li>\n<li>00:02:56 &ndash; Plone 6.0 Released</li>\n<li>00:03:16 &ndash; PyCon Italia 2023</li>\n<li>00:03:54 &ndash; Discover bpython: A Python REPL With IDE-Like Features</li>\n<li>00:13:55 &ndash; PEP 701: Syntactic Formalization of f-Strings</li>\n<li>00:17:07 &ndash; Sponsor: Influx Data</li>\n<li>00:17:57 &ndash; Classifying Python Virtual Environment Workflows</li>\n<li>00:30:26 &ndash; Context Managers and Python&rsquo;s <code>with</code> Statement</li>\n<li>00:36:32 &ndash; Video Course Spotlight</li>\n<li>00:37:47 &ndash; Microfeatures I&rsquo;d Like to See in More Languages</li>\n<li>00:49:34 &ndash; Python Terminal Music Player</li>\n<li>00:51:19 &ndash; Infinite AI Array</li>\n<li>00:55:05 &ndash; Thanks and goodbye</li>\n</ul>\n<p>News:</p>\n<ul>\n<li><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/9.4.0.html\">Pillow 9.4.0 Released</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2023/jan/02/bugfix-release/\">Django Bugfix Release: 4.1.5</a></li>\n<li><a href=\"https://plone.org/news-and-events/news/2022/plone-6-0-released\">Plone 6.0 Released</a></li>\n<li><a href=\"https://pycon.it/en\">PyCon Italia 2023</a></li>\n</ul>\n<p>Show Links:</p>\n<ul>\n<li><a href=\"https://realpython.com/bpython-alternative-python-repl/\">Discover bpython: A Python REPL With IDE-Like Features</a> &ndash; In this tutorial, you&rsquo;ll learn about bpython, an alternative Python REPL that brings code suggestions and many other IDE-like features to the terminal. Once you discover how much bpython can improve your productivity, you&rsquo;ll never want to return to using the vanilla Python REPL again.</li>\n<li><a href=\"https://peps.python.org/pep-0701/\">PEP 701: Syntactic Formalization of f-Strings</a> &ndash; This Python Enhancement Proposal describes the formalization of a grammar for f-strings, allowing a reduction in the underlying parser code complexity and providing future features like comments in multiline f-strings.</li>\n<li><a href=\"https://snarky.ca/classifying-python-virtual-environment-workflows/\">Classifying Python Virtual Environment Workflows</a> &ndash; This article discusses the various ways of creating and managing Python virtual environments, including what kinds of tools you could use. It categorizes the different styles and describes how the choices that you make affect your workflow.</li>\n<li><a href=\"https://realpython.com/courses/with-statement-python/\">Context Managers and Python&rsquo;s <code>with</code> Statement</a> &ndash; In this video course, you&rsquo;ll learn what the Python <code>with</code> statement is and how to use it with existing context managers. You&rsquo;ll also learn how to create your own context managers.</li>\n<li><a href=\"https://buttondown.email/hillelwayne/archive/microfeatures-id-like-to-see-in-more-languages/\">Microfeatures I&rsquo;d Like to See in More Languages</a> &ndash; Some language features are intrinsic to the language. Others are syntactic sugar that other programming languages could easily borrow. This opinion piece from Hillel highlights some features that the mainstream should steal from more obscure languages. Two Python features that he&rsquo;d like to see in more languages are chained evaluations (<code>2 &lt;= x &lt; 10</code>) and numbers with separators (1000000 == 1_000_000).</li>\n</ul>\n<p>Projects:</p>\n<ul>\n<li><a href=\"https://github.com/bmwant/pypod\">Python Terminal Music Player</a></li>\n<li><a href=\"https://ianbicking.org/blog/2023/01/infinite-ai-array.html\">Infinite AI Array</a> &ndash; Learn about an insane library containing special lists and dicts so that any missed calls automatically go to GPT3 and add a predictive value in its place.</li>\n</ul>\n<p>Additional Links:</p>\n<ul>\n<li><a href=\"https://twitter.com/cltrudeau/status/1616445805036195844\">Christopher Trudeau&rsquo;s - Act function for virtual environments</a></li>\n</ul>\n<p>Level up your Python skills with our expert-led courses:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/working-python-virtual-environments/\">Working With Python Virtual Environments</a></li>\n<li><a href=\"https://realpython.com/courses/python-3-f-strings-improved-string-formatting-syntax/\">Python 3&#x27;s F-Strings: An Improved String Formatting Syntax</a></li>\n<li><a href=\"https://realpython.com/courses/with-statement-python/\">Context Managers and Using Python&#x27;s with Statement</a></li>\n</ul> <p><a rel=\"payment\" href=\"https://realpython.com/join\">Support the podcast &amp; join our community of Pythonistas</a></p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/files.realpython.com/podcasts/RPP_E141_03_Cx2.f3e3ea8be478.mp3"
}