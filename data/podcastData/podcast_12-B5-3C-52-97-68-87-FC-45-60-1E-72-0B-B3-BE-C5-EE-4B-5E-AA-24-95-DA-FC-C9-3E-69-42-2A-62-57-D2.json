{
    "Id": "12-B5-3C-52-97-68-87-FC-45-60-1E-72-0B-B3-BE-C5-EE-4B-5E-AA-24-95-DA-FC-C9-3E-69-42-2A-62-57-D2",
    "ContentSourceId": "425b36ab-3b93-42c9-8cbc-032e3bddb1d6",
    "Title": "Creating a Python Wordle Clone & Testing Environments With Nox",
    "SourceUrl": "https://realpython.com/podcasts/rpp/145/",
    "Description": "<p>Would you like to practice your Python skills while building a challenging word game? Have you been wanting to learn more about creating command-line interfaces and  making them colorful and interactive? This week on the show, Christopher Trudeau is here, bringing another batch of PyCoder&rsquo;s Weekly articles and projects.</p>\n<p>We share a recent Real Python step-by-step project about creating a clone of Wordle. In the project, you&rsquo;ll practice building a terminal application, validating user input, and refactoring code into functions.</p>\n<p>Christopher shares an article that compares two popular testing tools, Nox and Tox. He discusses how each framework approaches test environment configuration and why the author leans toward using Nox&rsquo;s Python decorator&ndash;based format.</p>\n<p>We share several other articles and projects from the Python community, including a news update, a guide to trying out code and ideas quickly with the Python REPL, a PEP about requiring virtual environments by default, a discussion about lessons learned in twenty years as a software engineer, a project for a spreadsheet GUI inside of JupyterLab notebooks, and adding C-style <code>for</code> loops to Python.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Course Spotlight:</strong> <a href=\"https://realpython.com/courses/getters-and-setters-python/\">Getters and Setters in Python</a> </p>\n<p>In this video course, you&rsquo;ll learn what getter and setter methods are, how Python properties are preferred over getters and setters when dealing with attribute access and mutation, and when to use getter and setter methods instead of properties in Python.</p>\n</div>\n<p>Topics:</p>\n<ul>\n<li>00:00:00 &ndash; Introduction</li>\n<li>00:02:21 &ndash; Django Security Releases Issued</li>\n<li>00:02:43 &ndash; PSF Is Hiring a Security Developer-in-Residence</li>\n<li>00:03:44 &ndash; Python 3.11.2, Python 3.10.10 and 3.12.0 alpha 5 are available</li>\n<li>00:04:02 &ndash; Build a Wordle Clone With Python and Rich</li>\n<li>00:10:05 &ndash; Why I Like Nox</li>\n<li>00:16:44 &ndash; Sponsor: Anaconda Cloud</li>\n<li>00:17:26 &ndash; PEP 704: Require Virtual Environments by Default</li>\n<li>00:27:17 &ndash; The Python Standard REPL: Try Out Code and Ideas Quickly</li>\n<li>00:33:08 &ndash; Video Course Spotlight</li>\n<li>00:34:35 &ndash; 20 Things I&rsquo;ve Learned in My 20 Years as a Software Engineer</li>\n<li>00:47:50 &ndash; Mito: A Spreadsheet Inside Your JupyterLab Notebooks</li>\n<li>00:51:37 &ndash; How I Added C-Style for-Loops to Python</li>\n<li>00:58:08 &ndash; Thanks and goodbye </li>\n</ul>\n<p>News:</p>\n<ul>\n<li><a href=\"https://www.djangoproject.com/weblog/2023/feb/01/security-releases/\">Django Security Releases Issued: 4.1.6, 4.0.9, and 3.2.17</a></li>\n<li><a href=\"https://pyfound.blogspot.com/2023/01/the-psf-is-hiring-security-developer-in.html\">PSF Is Hiring a Security Developer-in-Residence</a></li>\n<li><a href=\"https://pythoninsider.blogspot.com/2023/02/python-3112-python-31010-and-3120-alpha.html\">Python Insider: Python 3.11.2, Python 3.10.10 and 3.12.0 alpha 5 are available</a></li>\n</ul>\n<p>Show Links:</p>\n<ul>\n<li><a href=\"https://realpython.com/python-wordle-clone/\">Build a Wordle Clone With Python and Rich</a> &ndash; In this step-by-step project, you&rsquo;ll build your own Wordle clone with Python. Your game will run in the terminal, and you&rsquo;ll use Rich to ensure your word-guessing app looks good. Learn how to build a command-line application from scratch and then challenge your friends to a wordly competition!</li>\n<li><a href=\"https://hynek.me/articles/why-i-like-nox/\">Why I Like Nox</a> &ndash; Both Nox and Tox are multi-environment testing tools. This opinion piece by Hynek compares and contrasts them and explains why he is increasingly using Nox.</li>\n<li><a href=\"https://peps.python.org/pep-0704/\">PEP 704: Require Virtual Environments by Default</a></li>\n<li><a href=\"https://realpython.com/python-repl/\">The Python Standard REPL: Try Out Code and Ideas Quickly</a> &ndash; In this tutorial, you&rsquo;ll learn how to use the Python standard REPL (Read-Eval-Print Loop) to run your code interactively. This tool will allow you to test new ideas, explore and experiment with new tools and libraries, refactor and debug your code, try out examples, and more.</li>\n</ul>\n<p>Discussion</p>\n<ul>\n<li><a href=\"https://www.simplethread.com/20-things-ive-learned-in-my-20-years-as-a-software-engineer/\">20 Things I&rsquo;ve Learned in My 20 Years as a Software Engineer</a> &ndash; Justin writes a list of things he&rsquo;s learned over his past twenty years in development. He starts by stating how context is important and that his lessons are from small teams that emphasize productivity and are tool agnostic.</li>\n<li><a href=\"https://www.simplethread.com/the-10x-programmer-myth/\">The 10x Programmer Myth - Simple Thread</a></li>\n</ul>\n<p>Projects:</p>\n<ul>\n<li><a href=\"https://github.com/mito-ds/monorepo\">Mito: A Spreadsheet Inside Your JupyterLab Notebooks</a></li>\n<li><a href=\"https://sadh.life/post/cursed-for/\">How I Added C-Style for-Loops to Python</a> &ndash; Ever wanted a C-style <code>for</code> loop in Python? No? Well, you can have one anyway. See how Tushar implemented <code>with for (i := var(0), i &lt; 10, i + 2):</code></li>\n</ul>\n<p>Additional Links:</p>\n<ul>\n<li><a href=\"https://openssf.org/community/alpha-omega/\">Alpha-Omega - Open Source Security Foundation</a></li>\n<li><a href=\"https://nox.thea.codes/en/latest/\">Welcome to Nox - Nox 2022.11.21 documentation</a></li>\n<li><a href=\"https://snarky.ca/classifying-python-virtual-environment-workflows/\">Classifying Python Virtual Environment Workflows</a></li>\n<li><a href=\"https://discuss.python.org/t/pep-704-require-virtual-environments-by-default-for-package-installers/22846/5\">PEP 704 - Require virtual environments by default for package installers - Discourse on Python.org</a></li>\n<li><a href=\"https://packaging.python.org/en/latest/tutorials/installing-packages/#creating-virtual-environments\">Creating Virtual Environments - Python Packaging User Guide</a></li>\n<li><a href=\"https://realpython.com/python-virtual-environments-a-primer/\">Python Virtual Environments: A Primer \u2013 Real Python</a></li>\n<li><a href=\"https://realpython.com/using-jupyterlab/\">JupyterLab for an Enhanced Notebook Experience</a></li>\n</ul>\n<p>Level up your Python skills with our expert-led courses:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/intro-object-oriented-programming-oop-python/\">Intro to Object-Oriented Programming (OOP) in Python</a></li>\n<li><a href=\"https://realpython.com/courses/python-basics-oop/\">Python Basics: Object-Oriented Programming</a></li>\n<li><a href=\"https://realpython.com/courses/getters-and-setters-python/\">Getters and Setters in Python</a></li>\n</ul> <p><a rel=\"payment\" href=\"https://realpython.com/join\">Support the podcast &amp; join our community of Pythonistas</a></p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/files.realpython.com/podcasts/RPP_E145_03_Cx2.abc600d33769.mp3"
}