{
    "Id": "A5-87-76-48-68-E0-9C-32-B2-C7-CC-BD-65-85-A8-2C-64-59-5B-56-2D-54-8A-A3-6F-6F-0F-E0-AB-C8-E5-79",
    "ContentSourceId": "ccdb4dce-83ad-4c15-adc3-519e57d437c9",
    "Title": "BONUS Measure and Visualize Software Improvement for Actionable Results | Mooly Beeri",
    "SourceUrl": "https://scrummastertoolbox.libsyn.com/bonus-measure-and-visualize-software-improvement-for-actionable-results-mooly-beeri",
    "Description": "  Global Agile Summit Preview: How to Measure and Visualize Software Improvement for Actionable Results with Mooly Beeri <p dir=\"ltr\" style= \"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\">  In this BONUS <a style=\"text-decoration: none;\" href= \"https://globalagilesummit.com/global-agile-summit-pre-summit-networking-event/?utm_source=e1025_02_em&utm_medium=e1025_02_em\">  Global Agile Summit preview episode</a>, we explore how to effectively measure and visualize the continuous improvement journey in technology organizations. Mooly Beeri shares his data-driven approach that helps software teams identify where to focus their improvement efforts and how to quantify their progress over time. We discuss practical examples from major organizations like Philips and Aptiv, revealing how visualization creates an internal language of improvement that empowers teams while giving leadership the insights needed to make strategic decisions.</p>   Visualizing Software Development Effectiveness <p dir=\"ltr\" style= \"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\">  \"We visualize the entire SDLC end-to-end. All the aspects... we have a grading of each step in the SDLC. It starts with a focus on understanding what needs to be done better.\"</p> <p dir=\"ltr\" style= \"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\">  Mooly shares how his approach at Philips helped create visibility across a diverse organization built from numerous acquisitions with different technologies and development cultures. The challenge was helping management understand the status of software craftsmanship across the company. His solution was developing a heat map visualization that examines the entire software development lifecycle (SDLC) - from requirements gathering through deployment and support - with an effectiveness index for each stage. This creates an at-a-glance view where management can quickly identify which teams need support in specific areas like automation, code reviews, or CI/CD processes.</p> <p dir=\"ltr\" style= \"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\">  This visualization becomes a powerful internal language for improvement discussions, allowing focused investment decisions instead of relying on intuition or which team has the most persuasive argument. The framework creates alignment while empowering teams to determine their own improvement paths.</p>   Measuring What Matters: The Code Review Example <p dir=\"ltr\" style= \"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\">  \"We often hear 'we have to do code reviews, of course we do them,' but when we talk about 'how well are they done?', the answer comes 'I don't know, we haven't measured it.'\"</p> <p dir=\"ltr\" style= \"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\">  When one team wanted to double the time invested in code reviews based on conference recommendations, Mooly helped them develop a meaningful measurement approach. They created the concept of \"code review escapes\" - defects that could have been caught with better code reviews but weren't. By gathering the team to evaluate a sample of defects after each iteration, they could calculate what percentage \"escaped\" the code review process.</p> <p dir=\"ltr\" style= \"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\">  This measurement allowed the team to determine if doubling review time actually improved outcomes. If the escape rate remained at 30%, the investment wasn't helping. If it dropped to 20%, they could calculate a benefit ratio. This approach has been expanded to measure \"escapes\" in requirements, design, architecture, and other SDLC phases, enabling teams to consciously decide where improvement efforts would yield the greatest returns.</p>   Balancing Team Autonomy with Organizational Alignment <p dir=\"ltr\" style= \"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\">  \"Our model focuses on giving teams many options on how to improve, not just one like from top-down improvements. We want to focus the teams on improving on what matters the most.\"</p> <p dir=\"ltr\" style= \"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\">  Mooly contrasts his approach with traditional top-down improvement mandates, sharing a story from Microsoft where a VP mandated increasing unit test coverage from 70% to 80% across all teams regardless of their specific needs. Instead, his framework agrees on an overall definition of effectiveness while giving teams flexibility to choose their improvement path.</p> <p dir=\"ltr\" style= \"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\">  Like athletes at different fitness levels, teams with lower effectiveness have many paths to improvement, while high-performing teams have fewer options. This creates a win-win scenario where teams define their own improvement strategy based on their context, while management can still see quantifiable progress in overall organizational effectiveness.</p>   Adapting to Different Industry Contexts <p dir=\"ltr\" style= \"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\">  \"TIP: Keep the model of evaluation flexible enough to adapt to a team's context.\"</p> <p dir=\"ltr\" style= \"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\">  While working across healthcare, automotive, and other industries, Mooly found that despite surface differences, all software teams face similar fundamental challenges throughout the development lifecycle. His effectiveness framework was born in the diverse Philips environment, where teams built everything from espresso machine firmware to hospital management systems and MRI scanners.</p> <p dir=\"ltr\" style= \"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\">  The framework maintains flexibility by letting teams define what's critical in their specific context. For example, when measuring dynamic analysis, teams define which runtime components are most important to monitor. For teams releasing once every four years (like medical equipment), continuous integration means something very different than for teams deploying daily updates. The framework adapts to these realities while still providing meaningful measurements.</p>   Taking the First Step Toward Measured Improvement <p dir=\"ltr\" style= \"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\">  \"Try to quantify the investment, by defining where to improve by how much. We encourage the team to measure effectiveness of whatever the practices are they need to improve.\"</p> <p dir=\"ltr\" style= \"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\">  For leaders looking to implement a more measured approach to improvement, Mooly recommends starting by focusing teams on one simple question: how will we know if our improvement efforts are actually working? Rather than following trends or implementing changes without feedback mechanisms, establish concrete metrics that demonstrate progress and help calculate return on investment.</p> <p dir=\"ltr\" style= \"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\">  The key insight is that most teams already value continuous improvement but struggle with prioritization and knowing when they've invested enough in one area. By creating a quantifiable framework, teams can make more conscious decisions about where to focus their limited improvement resources and demonstrate their progress to leadership in a language everyone understands.</p> <p dir=\"ltr\" style= \"line-height: 1.38; margin-top: 0pt; margin-bottom: 4pt;\">  About Mooly Beeri</p> <p dir=\"ltr\" style= \"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\">  Mooly Beeri is a software transformation expert with nearly 30 years of industry experience. As founder and CEO of <a style=\"text-decoration: none;\" href= \"https://www.bettersoftware.dev/\"> BetterSoftware.dev</a>, he developed a very practical and visual approach to visualize and measure the improvements in technology organizations like Microsoft, Phillips, and Aptiv. His data-driven approach helps organizations visualize and optimize their entire software development lifecycle through measurable improvements.</p> <p> You can link with <a style=\"text-decoration: none;\" href= \"https://www.linkedin.com/in/mooly-beeri/\"> Mooly Beeri on LinkedIn</a>  and visit <a style=\"text-decoration: none;\" href= \"https://www.bettersoftware.dev/\"> Mooly Beeri\u2019s website</a>.</p>",
    "EnclosureUrl": "https://traffic.libsyn.com/secure/scrummastertoolbox/20250310_Mooly_Beeri_M.mp3?dest-id=246429"
}