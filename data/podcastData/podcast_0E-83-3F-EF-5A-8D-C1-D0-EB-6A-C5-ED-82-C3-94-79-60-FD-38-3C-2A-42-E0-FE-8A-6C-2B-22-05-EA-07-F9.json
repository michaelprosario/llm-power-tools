{
    "Id": "0E-83-3F-EF-5A-8D-C1-D0-EB-6A-C5-ED-82-C3-94-79-60-FD-38-3C-2A-42-E0-FE-8A-6C-2B-22-05-EA-07-F9",
    "ContentSourceId": "7c098d5f-afc6-488d-b7ac-b49867303173",
    "Title": "What\u2019s Next in WebAssembly?",
    "SourceUrl": "https://thenewstack.simplecast.com/episodes/whats-next-in-webassembly-UL8gGbLK",
    "Description": "<p>AUSTIN, TEX. \u2014What\u2019s the future of <a href=\"https://thenewstack.io/what-is-webassembly/\">WebAssembly</a> \u2014 Wasm, to its friends \u2014 the binary instruction format for a stack-based virtual machine that allows developers to build in their favorite programming language and run their code anywhere?</p><p>For <a href=\"https://www.linkedin.com/in/mattbutcher/\">Matt Butcher</a>, CEO and founder of Fermyon Technologies, the future of Wasm lies in running it outside of the browser and running it inside of everything, from proxy servers to video games.\u201d</p><p>And, he added, \u201cthe really exciting part is being able to run it in the cloud, as well as a cloud service alongside like virtual machines and <a href=\"https://thenewstack.io/category/containers/\">containers</a>.\u201d</p><p>For this On the Road episode of The New Stack Makers podcast, Butcher was interviewed by <a href=\"https://thenewstack.io/author/hjoslyn/\">Heather Joslyn</a>, features editor of TNS.</p><p>With key programming languages like Ruby, Python and C# adding support for WebAssembly\u2019s new capabilities, Wasm is gaining critical mass, Butcher said.</p><p>\u201cWhat we're talking about now is the realization of the potential that's been around in WebAssembly for a long time. But as people get excited, and open source projects start to adopt it, then what we're seeing now is like the beginning of the tidal wave.\u201d</p><p>But before widespread adoption can happen, Butcher said, there\u2019s still work to be done in preparing the environment the next wave of Wasm: <a href=\"https://thenewstack.io/how-webassembly-could-streamline-cloud-native-computing/\">cloud computing</a>.</p><p>Along with other members of the <a href=\"https://bytecodealliance.org/\">Bytecode Alliance</a>, such as <a href=\"https://thenewstack.io/what-makes-wasm-different/\">Cosmonic</a>, Fastly, Intel and Fermyon is working to improve the developer experience and environment this year. The next step, he added is to \u201cstart to build this first wave of applications that really highlight where it can happen for us.\u201d</p><p>The rise of Wasm represents a new era in cloud native technology, Butcher noted. \u201cWe love containers. Many of us have been involved in the <a href=\"/category/kubernetes/\">Kubernetes</a> ecosystem for years and years. I built <a href=\"https://helm.sh/\">Helm</a> originally; that's still, in a way, my baby.</p><p>\u201cBut also we're excited because now we're finding solutions to some problems that we didn't see get solved in the container ecosystem. And that's why we talk about it as sort of like the next wave.\u201d</p><h2>Wasm and a \u2018Frictionless\u2019 Dev Experience</h2><p>Fermyon introduced its <a href=\"https://www.fermyon.com/platform\">\u201cfrictionless\u201d WebAssembly platform</a> in June here at The Linux Foundation\u2019s Open Source Summit North America. The platform, built on technologies including HashiCorp\u2019s Nomad and Consul, enables the writing of microservices and web applications. Fermyon\u2019s open source tool, <a href=\"https://github.com/fermyon/spin\">Spin</a>, helps developers push apps from their local dev environments into their Fermyon platform.</p><p>One aspect of Wasm\u2019s future that Butcher highlighted in our Makers discussion is how it can be scalable while also remaining lightweight in terms of the cloud resources it consumes.</p><p>\u201cAlong with creating this great developer experience in a secure platform, we're also going to help people save money on their cloud costs, because cloud costs have just kind of ballooned out of control,\u201d he said.</p><p>\u201cIf we can be really mindful of the resources we use, and help the developer understand what it means to write code that can be nimble, and can be light on resource usage. The real objective is to make it so when they write code, it just happens to have those characteristics.\u201d</p><p>For those interested in taking WebAssembly for a spin, Fermyon has created an online game called <a href=\"https://www.finickywhiskers.com/index.html\">Finicky Whiskers</a>, intended to show how <a href=\"/category/microservices/\">microservices</a> can be reimagined with Wasm.</p>\n",
    "EnclosureUrl": "https://afp-922713-injected.calisto.simplecastaudio.com/5672b58f-7201-4e0e-b0af-da702259d97f/episodes/c507e012-1a02-4c0e-ae3a-bb84bf39e4e1/audio/128/default.mp3?aid=rss_feed&awCollectionId=5672b58f-7201-4e0e-b0af-da702259d97f&awEpisodeId=c507e012-1a02-4c0e-ae3a-bb84bf39e4e1&feed=IgzWks06"
}