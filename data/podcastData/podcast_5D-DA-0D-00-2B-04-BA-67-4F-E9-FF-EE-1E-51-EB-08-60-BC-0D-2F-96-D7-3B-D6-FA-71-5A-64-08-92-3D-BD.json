{
    "Id": "5D-DA-0D-00-2B-04-BA-67-4F-E9-FF-EE-1E-51-EB-08-60-BC-0D-2F-96-D7-3B-D6-FA-71-5A-64-08-92-3D-BD",
    "ContentSourceId": "425b36ab-3b93-42c9-8cbc-032e3bddb1d6",
    "Title": "Exploring the functools Module and Complex Numbers in Python",
    "SourceUrl": "https://realpython.com/podcasts/rpp/68/",
    "Description": "<p>Are you ready to expand your Python knowledge into the intermediate to advanced territory? What tools are awaiting your discovery inside Python&rsquo;s functools module? This week on the show, David Amos is back, and he&rsquo;s brought another batch of PyCoder&rsquo;s Weekly articles and projects.</p>\n<p>We discuss an article about the functools module, which adds functionality for caching, function overloading, better definitions for decorated functions, and more. David talks about a new Real Python article about working with complex numbers in Python. We also cover a tutorial about troubleshooting memory problems in Python.</p>\n<p>We cover several other articles and projects from the Python community including, DevOps interview questions, correlation analysis in Python, pivot and plot data with pandas, how to use Python and OpenCV to play online chess with a real chessboard, and generating hardware pinout diagrams as SVG images.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Course Spotlight:</strong> <a href=\"https://realpython.com/courses/python-decorators-101/\">Python Decorators 101</a> </p>\n<p>In this course on Python decorators, you&rsquo;ll learn what they are and how to create and use them. Decorators provide a simple syntax for calling higher-order functions in Python. By definition, a decorator is a function that takes another function and extends the behavior of the latter function without explicitly modifying it.</p>\n</div>\n<p>Topics:</p>\n<ul>\n<li>00:00:00 &ndash; Introduction</li>\n<li>00:01:56 &ndash; The Future of FastAPI and Pydantic Is Bright</li>\n<li>00:04:33 &ndash; Simplify Complex Numbers With Python</li>\n<li>00:10:37 &ndash; Functools: The Power of Higher-Order Functions in Python</li>\n<li>00:18:40 &ndash; Sponsor: Sentry</li>\n<li>00:19:42 &ndash; How to Pivot and Plot Data With Pandas</li>\n<li>00:23:06 &ndash; devops-exercises: DevOps Interview Questions</li>\n<li>00:32:09 &ndash; Video Course Spotlight</li>\n<li>00:33:25 &ndash; Correlation Analysis 101 in Python</li>\n<li>00:39:28 &ndash; How to Troubleshoot Memory Problems in Python</li>\n<li>00:46:16 &ndash; Use Python and OpenCV to Play Online Chess With a Real Chessboard</li>\n<li>00:49:28 &ndash; pinout: Generate Hardware Pinout Diagrams as SVG Images</li>\n<li>00:54:21 &ndash; Thanks and goodbyes</li>\n</ul>\n<p>Show Links:</p>\n<p><a href=\"https://dev.to/tiangolo/the-future-of-fastapi-and-pydantic-is-bright-3pbm\">The Future of FastAPI and Pydantic Is Bright</a> &ndash; Not long ago there was some chatter on the internet about a change in Python 3.10 that would impact Python projects that check types at runtime. The discussion centered around FastAPI and Pydantic and had some folks worried about the future of those projects. In this article, FastAPI&rsquo;s creator explains what the discussion was all about and why the future of FastAPI and Pydantic remains bright.</p>\n<p><a href=\"https://realpython.com/python-complex-numbers/\">Simplify Complex Numbers With Python</a> &ndash; In this tutorial, you&rsquo;ll learn about the unique treatment of complex numbers in Python. Complex numbers are a convenient tool for solving scientific and engineering problems. You&rsquo;ll experience the elegance of using complex numbers in Python with several hands-on examples.</p>\n<p><a href=\"https://towardsdatascience.com/functools-the-power-of-higher-order-functions-in-python-8e6e61c6e4e4\">Functools: The Power of Higher-Order Functions in Python</a> &ndash; The <code>functools</code> module is one of the &ldquo;hidden gems&rdquo; of the Python standard library. This article takes you on a tour of everything in <code>functools</code>. You&rsquo;ll learn how to implement caching, function overloading, and a whole lot more.</p>\n<p><a href=\"https://opendatascience.com/how-to-pivot-and-plot-data-with-pandas/\">How to Pivot and Plot Data With Pandas</a> &ndash; One of the challenges of working with data is knowing how to manipulate the data format for a particular analysis. And there&rsquo;s no single correct format. You need to know how to melt, pivot, and transpose data into a format that fits whatever you&rsquo;re analyzing. If you enjoy this article, be sure to also check out Stefanie&rsquo;s <a href=\"https://github.com/stefmolin/pandas-workshop\">Pandas Workshop</a>.</p>\n<p><a href=\"https://github.com/bregman-arie/devops-exercises\">devops-exercises: DevOps Interview Questions</a></p>\n<p><a href=\"https://dataanalysis.substack.com/p/correlation-analysis-101-in-python\">Correlation Analysis 101 in Python</a> &ndash; Correlation analysis is a useful part of exploratory data analysis. It can help you identify potential relationships between various features of your data. In this helpful guide, you&rsquo;ll learn how to do correlation analysis in a pandas <code>DataFrame</code>. You&rsquo;ll see how to display a correlation matrix as a heatmap and explore some guidelines for identifying when correlation might imply causation.</p>\n<p><a href=\"https://innovation.alteryx.com/how-to-troubleshoot-memory-problems-in-python/\">How to Troubleshoot Memory Problems in Python</a> &ndash; Memory problems can be frustrating. They&rsquo;re hard to diagnose and fix, and memory issues in Python applications can be especially frustrating thanks to the language&rsquo;s garbage collection system. In this article, you&rsquo;ll learn a six-step process for troubleshooting memory problems that the <a href=\"https://evalml.alteryx.com/en/stable/\">EvalML</a> team used to solve a tricky problem with their library.</p>\n<p>Projects:</p>\n<ul>\n<li><a href=\"https://github.com/karayaman/Play-online-chess-with-real-chess-board\">play-online-chess-with-real-chess-board: Use Python and OpenCV to Play Online Chess With a Real Chessboard</a></li>\n<li><a href=\"https://github.com/j0ono0/pinout\">pinout: Generate Hardware Pinout Diagrams as SVG Images</a></li>\n</ul>\n<p>Additional Links:</p>\n<ul>\n<li><a href=\"https://docs.python.org/3/library/functools.html?highlight=functools\">functools: Python 3 Documentation</a> </li>\n<li><a href=\"https://realpython.com/primer-on-python-decorators/\">Primer on Python Decorators: Real Python Guide</a></li>\n<li><a href=\"https://realpython.com/lru-cache-python/\">Caching in Python Using the LRU Cache Strategy: Real Python Article</a></li>\n<li><a href=\"https://realpython.com/courses/caching-python-lru/\">Caching in Python With lru_cache: Real Python Video Course</a></li>\n<li><a href=\"https://pythonspeed.com/articles/measuring-memory-python/\">Measuring Memory Usage in Python: It&rsquo;s Tricky!</a></li>\n<li><a href=\"https://fritzing.org/\">Fritzing: Electronics Made Easy</a></li>\n<li><a href=\"https://www.kicad.org/\">KiCad EDA: A Cross Platform and Open Source Electronics Design Automation Suite</a></li>\n<li><a href=\"https://github.com/yaqwsx/PcbDraw\">PcbDraw: Convert your KiCAD boards into nice looking 2D drawings</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Four_stages_of_competence\">Four stages of competence: Wikipedia article</a></li>\n</ul>\n<p>Level up your Python skills with our expert-led courses:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/python-decorators-101/\">Python Decorators 101</a></li>\n<li><a href=\"https://realpython.com/courses/python-inner-functions/\">Python Inner Functions</a></li>\n<li><a href=\"https://realpython.com/courses/plot-pandas-data-visualization/\">Plot With pandas: Python Data Visualization Basics</a></li>\n</ul> <p><a rel=\"payment\" href=\"https://realpython.com/join\">Support the podcast &amp; join our community of Pythonistas</a></p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/files.realpython.com/podcasts/RPP_E068_David_Chris.1941e27d4586.mp3"
}