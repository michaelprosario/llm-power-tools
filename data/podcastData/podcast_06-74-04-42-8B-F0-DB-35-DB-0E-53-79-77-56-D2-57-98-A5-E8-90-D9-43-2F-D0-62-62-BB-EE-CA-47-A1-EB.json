{
    "Id": "06-74-04-42-8B-F0-DB-35-DB-0E-53-79-77-56-D2-57-98-A5-E8-90-D9-43-2F-D0-62-62-BB-EE-CA-47-A1-EB",
    "ContentSourceId": "425b36ab-3b93-42c9-8cbc-032e3bddb1d6",
    "Title": "Narwhals: Expanding DataFrame Compatibility Between Libraries",
    "SourceUrl": "https://realpython.com/podcasts/rpp/224/",
    "Description": "<p>How does a Python tool support all types of DataFrames and their various features? Could a lightweight library be used to add compatibility for newer formats like Polars or PyArrow? This week on the show, we speak with Marco Gorelli about his project, Narwhals.</p>\n<p>Narwhals is a project aimed at library maintainers rather than end users. We discuss how the added compatibility benefits users by supporting modern features like lazy evaluation. We cover several projects Marco has been working with to implement Narwhals, including Altair, scikit-lego, and Ibis.</p>\n<p>We also discuss how Marco started contributing to open-source projects. Marco has contributed to both pandas and Polars, which helps explain his interest in growing compatibility between libraries. He also offers advice on making your first contribution. </p>\n<p>This episode is sponsored by CodeRabbit. </p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Course Spotlight:</strong> <a href=\"https://realpython.com/courses/differences-mutable-immutable-types/\">Differences Between Python&rsquo;s Mutable and Immutable Types</a></p>\n<p>In this video course, you&rsquo;ll learn how Python&rsquo;s mutable and immutable data types work internally and how you can take advantage of mutability or immutability to power your code.</p>\n</div>\n<p>Topics:</p>\n<ul>\n<li>00:00:00 &ndash; Introduction</li>\n<li>00:02:02 &ndash; Euro SciPy 2024 and sprints</li>\n<li>00:04:04 &ndash; How did you get involved in open source?</li>\n<li>00:07:18 &ndash; Finding a good issue to get started</li>\n<li>00:09:25 &ndash; Discord and open-source projects</li>\n<li>00:11:12 &ndash; Who would you describe Narwhals?</li>\n<li>00:16:47 &ndash; Working on Polars</li>\n<li>00:19:17 &ndash; Apache Arrow and a data interchange protocol</li>\n<li>00:22:55 &ndash; Sponsor: CodeRabbit</li>\n<li>00:23:55 &ndash; Digging into eager vs lazy</li>\n<li>00:27:04 &ndash; Ibis DataFrame library</li>\n<li>00:28:57 &ndash; What do libraries need from Narwhals?</li>\n<li>00:34:57 &ndash; The scikit-lego library</li>\n<li>00:37:15 &ndash; Video Course Spotlight</li>\n<li>00:38:45 &ndash; Other libraries interested in Narwhals</li>\n<li>00:41:56 &ndash; Compatibility policy</li>\n<li>00:45:18 &ndash; What should an end user expect?</li>\n<li>00:46:32 &ndash; Have other projects that attempted this?</li>\n<li>00:47:54 &ndash; Keeping the project light and pure Python</li>\n<li>00:49:32 &ndash; Contributors and how to get involved</li>\n<li>00:54:42 &ndash; What are you excited about in the world of Python?</li>\n<li>00:57:18 &ndash; What do you want to learn next?</li>\n<li>00:59:05 &ndash; How can people follow your work online?</li>\n<li>00:59:27 &ndash; Thanks and goodbye</li>\n</ul>\n<p>Show Links:</p>\n<ul>\n<li><a href=\"https://narwhals-dev.github.io/narwhals/\">Narwhals</a></li>\n<li><a href=\"https://euroscipy.org/2024/\">EuroSciPy</a></li>\n<li><a href=\"https://github.com/narwhals-dev/narwhals?featured_on=talkpython\">narwhals: Lightweight and Extensible Compatibility Layer Between DataFrame Libraries! - GitHub</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=-mdx7Cn6_6E&amp;t=343s\">DataFrame Interoperability - What&rsquo;s Been Achieved, and What Comes Next? - PyCon Lithuania - YouTube</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=8hYdq4sWbbQ&amp;list=PLSIzlWDI17bRULf7X_55ab7THqA9TJPxd\">How Narwhals Has Many End Users &hellip; That Never Use It Directly - YouTube</a></li>\n<li><a href=\"https://pola.rs/posts/lightweight_plotting/\">Polars Has a New Lightweight Plotting Backend - Altair</a></li>\n<li><a href=\"https://pandas.pydata.org/\">pandas - Python Data Analysis Library</a></li>\n<li><a href=\"https://pola.rs/\">Polars \u2014 DataFrames for the new era</a></li>\n<li><a href=\"https://pypi.org/project/great-tables/\">great-tables - PyPI</a></li>\n<li><a href=\"https://realpython.com/podcasts/rpp/214/\">Episode #214: Build Captivating Display Tables in Python With Great Tables</a></li>\n<li><a href=\"https://ibis-project.org/\">Ibis</a></li>\n<li><a href=\"https://realpython.com/podcasts/rpp/201/\">Episode #201: Decoupling Systems to Get Closer to the Data</a></li>\n<li><a href=\"https://posit-dev.github.io/great-tables/blog/bring-your-own-df/\">Great Tables is Now BYODF (Bring Your Own DataFrame)</a></li>\n<li><a href=\"https://labs.quansight.org/blog/scikit-lego-narwhals\">How Narwhals and scikit-lego Came Together to Achieve DataFrame-Agnosticism</a></li>\n<li><a href=\"https://github.com/plotly/plotly.py/issues/4749\">Explore Using Narwhals in Plotly Express \u00b7 Issue #4749 - GitHub</a></li>\n<li><a href=\"https://fairlearn.org/\">Fairlearn</a></li>\n<li><a href=\"https://narwhals-dev.github.io/narwhals/backcompat/\">Perfect Backwards Compatibility Policy - Narwhals</a></li>\n<li><a href=\"https://astral.sh/blog/uv-unified-python-packaging\">uv: Unified Python packaging</a></li>\n<li><a href=\"https://prefix.dev/\">pixi - Powerful Development Environments</a></li>\n<li><a href=\"https://discord.com/invite/V3PqtB4VA4\">Narwhals - Discord</a></li>\n<li><a href=\"https://fosstodon.org/@marcogorelli\">marcogorelli (@marcogorelli@fosstodon.org) - Fosstodon</a></li>\n<li><a href=\"https://www.linkedin.com/in/marcogorelli/?featured_on=talkpython\">Marco Gorelli - Quansight - LinkedIn</a></li>\n</ul>\n<p>Level up your Python skills with our expert-led courses:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/new-features-python-313/\">What&#x27;s New in Python 3.13</a></li>\n<li><a href=\"https://realpython.com/courses/pandas-groupby-real-world-data/\">pandas GroupBy: Grouping Real World Data in Python</a></li>\n<li><a href=\"https://realpython.com/courses/pandas-dataframe-working-with-data/\">The pandas DataFrame: Working With Data Efficiently</a></li>\n</ul> <p><a rel=\"payment\" href=\"https://realpython.com/join\">Support the podcast &amp; join our community of Pythonistas</a></p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/files.realpython.com/podcasts/RPP_E224_03_Marco.eb35b557043c.mp3"
}