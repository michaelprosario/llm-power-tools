{
    "Id": "44-3D-1D-B5-E3-8E-20-55-F9-74-CA-14-18-04-97-E1-B1-83-19-7E-02-0D-53-83-E8-1F-7F-02-56-41-58-BF",
    "ContentSourceId": "ee3f8f9f-8c83-488e-aada-ce09bc743a17",
    "Title": "What security teams need to understand about developers",
    "SourceUrl": "https://stackoverflow.blog/podcast/",
    "Description": "<p><a href=\"https://www.nightvision.net/\">NightVision</a> offers web and API security testing tools built to integrate with developers\u2019 established workflows. NightVision identifies issues by precise area(s) of code, so devs don\u2019t have to chase down and validate vulnerability reports, a process that eats up precious engineering resources. Get started with their <a href=\"https://docs.nightvision.net/docs/getting-started\">docs</a>.</p><p>Connect with Kinnaird on <a href=\"https://www.linkedin.com/in/kinnairdmcquade/\">LinkedIn</a>.\u00a0</p><p>Stack Overflow user <a href=\"https://stackoverflow.com/users/2809027/cecil-curry\">Cecil Curry</a> earned a <a href=\"https://stackoverflow.com/help/badges/62/populist\">Populist badge</a> with their exceptionally thoughtful answer to <a href=\"https://stackoverflow.com/questions/20339053/in-python-how-can-one-tell-if-a-module-comes-from-a-c-extension\">In Python how can one tell if a module comes from a C extension?</a>.</p><p>Some great excerpts from this episode:</p><p>\u201cFrom the program side, I would say if you're running a security program or you're starting from day one, there's a danger with security people and being the security person who's out of touch or doesn't know what the life of a developer is like. And you don't want to be that person. And that's not how you have actual business impact, right? So you got to embed with teams, threat model, and then do some preventative security testing, right? Testing things before it gets into production, not just relying on having a bug bounty program.\u201d</p><p>\u201cWith code scanning, you're looking for potentially insecure patterns in the code, but with dynamic testing, you're actually testing the live application. So we're sending HTTP traffic to the application, sending malicious payloads in forms or in query parameters, et cetera, to try to elicit a response or to send something to an attacker controlled server. And so using this, we're able to. Not just have theoretical vulnerabilities, but exploitable vulnerabilities. I mean, how many times have you looked at something in GitHub security alerts and thought, yeah, that's not real. That's not exploitable. Right. So we're trying to avoid that and have higher quality touch points with developers. So when they look at something, they say, okay, that's exploitable. You showed me how. And you traced it back to code.\u201d</p>\n",
    "EnclosureUrl": "https://pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/d553ff1e-0516-440b-be96-11561b0bd48d/audio/128/default.mp3?aid=rss_feed&awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b&awEpisodeId=d553ff1e-0516-440b-be96-11561b0bd48d&feed=XA_851k3"
}