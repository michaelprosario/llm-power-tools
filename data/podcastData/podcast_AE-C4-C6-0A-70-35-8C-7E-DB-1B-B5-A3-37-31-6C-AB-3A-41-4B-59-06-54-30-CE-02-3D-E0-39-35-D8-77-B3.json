{
    "Id": "AE-C4-C6-0A-70-35-8C-7E-DB-1B-B5-A3-37-31-6C-AB-3A-41-4B-59-06-54-30-CE-02-3D-E0-39-35-D8-77-B3",
    "ContentSourceId": "f8b5d0b7-9181-43a4-8fab-d3e2b2c93d0a",
    "Title": "Episode 88: The Singularity Research OS with Galen Hunt",
    "SourceUrl": "http://feedproxy.google.com/~r/se-radio/~3/yThIe-zsLWs/",
    "Description": "In this episode we talk to <a href=\"http://research.microsoft.com/~galenh/\">Galen Hunt</a> about the <a href=\"http://research.microsoft.com/os/singularity/\">Singularity</a> research OS. Galen is the head of <a href=\"http://research.microsoft.com/os/\">Microsoft's OS Research Group</a> and, together with a team of about 30 other researches, has built Singularity. \n\nWe started our discussion by covering the basics of Singularity: why it was designed, what the goals of the project are as well as some of the architectural foundations of Singularity: software isolated processes, contract-based channels and manifest-based programs. In this context we also looked at the role of the Spec# and Sing# programming languages and the role of static analysis tools to statically verify important properties of a singularity application.\n\nWe then looked a little bit more closely at the role of the kernel and how it is different from kernels in traditional OSes. \n\nIn a second part of the discussion we looked at some of the experiments the group did based on the OS. These include compile-time reflection, using hardware protection domains, heterogenerous multiprocessing as well as the typed assembly language\n\nWe closed the conversation with a look at some of the performance characteristics of Singularity, compatibility with traditional operating systems and a brief look at how the findings from Singularity influence product development at Microsoft.",
    "EnclosureUrl": "https://traffic.libsyn.com/secure/seradio/seradio-episode88-singularityWithGalenHunt.mp3?dest-id=23379"
}