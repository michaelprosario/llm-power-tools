{
    "Id": "27-F7-AE-09-79-C7-34-00-EE-BA-D5-73-AE-83-A6-EB-BA-85-9B-32-BB-A9-92-D4-6F-40-AD-02-F2-E4-45-99",
    "ContentSourceId": "425b36ab-3b93-42c9-8cbc-032e3bddb1d6",
    "Title": "Using NumPy and Linear Algebra for Faster Python Code",
    "SourceUrl": "https://realpython.com/podcasts/rpp/146/",
    "Description": "<p>Are you still using loops and lists to process your data in Python? Have you heard of a Python library with optimized data structures and built-in operations that can speed up your data science code? This week on the show, Jodie Burchell, developer advocate for data science at JetBrains, returns to share secrets for harnessing linear algebra and NumPy for your projects.</p>\n<p>Jodie details how most people begin their data science journey using loops to iterate over values and apply operations sequentially. We talk about how loops are friendly for beginners, being clear to read and easy to debug, but unfortunately don&rsquo;t scale well, especially with large amounts of data.</p>\n<p>Jodie shares some of the basics of linear algebra and how to organize data into vectors. We talk about how the NumPy library leverages those concepts to improve data processing. We discuss how the library includes operations for vector and matrix addition and subtraction, and why these operations are more efficient than loops. We also cover how NumPy stores arrays in memory and when working with them is faster vs when it&rsquo;s not.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Course Spotlight:</strong> <a href=\"https://realpython.com/courses/data-cleaning-with-pandas-and-numpy/\">Data Cleaning With pandas and NumPy</a></p>\n<p>In this video course, you&rsquo;ll learn how to clean up messy data using pandas and NumPy. You&rsquo;ll become equipped to deal with a range of problems, such as missing values, inconsistent formatting, malformed records, and nonsensical outliers.</p>\n</div>\n<p>Topics:</p>\n<ul>\n<li>00:00:00 &ndash; Introduction </li>\n<li>00:02:35 &ndash; Vectorize all the things! - PyCon UK 2022 Talk</li>\n<li>00:06:39 &ndash; Becoming familiar with linear algebra</li>\n<li>00:09:05 &ndash; Beginners start with loops</li>\n<li>00:11:25 &ndash; Starting with basic linear algebra</li>\n<li>00:12:25 &ndash; The basic unit of a vector</li>\n<li>00:18:06 &ndash; NumPy representing vectors in Python</li>\n<li>00:23:25 &ndash; Sponsor: InfluxDB</li>\n<li>00:24:13 &ndash; Block management</li>\n<li>00:25:54 &ndash; Replacing a loop with vector-based operations</li>\n<li>00:34:06 &ndash; NumPy broadcasting</li>\n<li>00:38:52 &ndash; Approximating nearest neighbors</li>\n<li>00:43:49 &ndash; Video Course Spotlight</li>\n<li>00:45:15 &ndash; Solving the problem</li>\n<li>00:46:44 &ndash; Getting rid of nested loops</li>\n<li>00:48:54 &ndash; A peek under the hood</li>\n<li>00:53:28 &ndash; How arrays vs lists are stored in memory</li>\n<li>01:00:24 &ndash; Considering a GPU</li>\n<li>01:03:37 &ndash; Real Python resources on the subject</li>\n<li>01:04:08 &ndash; Upcoming talks and conferences</li>\n<li>01:07:31 &ndash; Thanks and goodbye</li>\n</ul>\n<p>Show Links:</p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=9_mhjjlKjDo\">Vectorize all the things! How basic linear algebra can speed up your data science code - YouTube</a></li>\n<li><a href=\"https://math.mit.edu/~gs/linearalgebra/ila5/indexila5.html\">Introduction to Linear Algebra, 5th Edition</a></li>\n<li><a href=\"https://ocw.mit.edu/courses/18-06-linear-algebra-spring-2010/\">Linear Algebra - Mathematics - MIT OpenCourseWare</a></li>\n<li><a href=\"https://math.mit.edu/~gs/learningfromdata/\">Linear Algebra and Learning from Data</a></li>\n<li><a href=\"https://realpython.com/python-linear-algebra/\">Linear Algebra in Python: Matrix Inverses and Least Squares</a></li>\n<li><a href=\"https://numpy.org/doc/stable/user/absolute_beginners.html\">NumPy: the absolute basics for beginners - NumPy Manual</a></li>\n<li><a href=\"https://numpy.org/doc/stable/user/basics.broadcasting.html\">Broadcasting \u2014 NumPy v1.24 Manual</a></li>\n<li><a href=\"https://github.com/spotify/annoy\">spotify/annoy: Approximate Nearest Neighbors in C++/Python optimized</a></li>\n<li><a href=\"https://realpython.com/numpy-array-programming/\">Look Ma, No For-Loops: Array Programming With NumPy \u2013 Real Python</a></li>\n<li><a href=\"https://realpython.com/numpy-tutorial/\">NumPy Tutorial: Your First Steps Into Data Science in Python \u2013 Real Python</a></li>\n<li><a href=\"https://realpython.com/pandas-iterate-over-rows/\">How to Iterate Over Rows in pandas, and Why You Shouldn&rsquo;t \u2013 Real Python</a></li>\n<li><a href=\"https://www.datacamp.com/radar-2023\">RADAR: Thrive in the era of data - DataCamp</a></li>\n<li><a href=\"https://2023.pythonwebconf.com/presentations/vectorize-all-the-things-using-linear-algebra-and-numpy-to-make-your-python-code-lightning-fast\">Vectorize all the things! Using linear algebra and NumPy to make your Python code lightning fast. - Python Web Conference 2023</a></li>\n<li><a href=\"https://us.pycon.org/2023/schedule/presentation/140/\">Jodie Burchell - PyCon US 2023</a></li>\n<li><a href=\"https://t-redactyl.io/\">Jodie Burchell&rsquo;s Blog - Standard error</a></li>\n<li><a href=\"https://twitter.com/t_redactyl\">Jodie Burchell \ud83c\udde6\ud83c\uddfa\ud83c\udde9\ud83c\uddea (@t_redactyl) - Twitter</a></li>\n<li><a href=\"https://fosstodon.org/@t_redactyl#\">Jodie Burchell \ud83c\udde6\ud83c\uddfa\ud83c\udde9\ud83c\uddea (@t_redactyl@fosstodon.org) - Fosstodon</a></li>\n<li><a href=\"https://www.jetbrains.com/\">JetBrains: Essential tools for software developers and teams</a></li>\n</ul>\n<p>Level up your Python skills with our expert-led courses:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/data-cleaning-with-pandas-and-numpy/\">Data Cleaning With pandas and NumPy</a></li>\n<li><a href=\"https://realpython.com/courses/python-histograms/\">Histogram Plotting in Python: NumPy, Matplotlib, Pandas &amp; Seaborn</a></li>\n<li><a href=\"https://realpython.com/courses/numpy-arange/\">Using NumPy&#x27;s np.arange() Effectively</a></li>\n</ul> <p><a rel=\"payment\" href=\"https://realpython.com/join\">Support the podcast &amp; join our community of Pythonistas</a></p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/files.realpython.com/podcasts/RPP_E146_03_Jodie.49b004d51553.mp3"
}