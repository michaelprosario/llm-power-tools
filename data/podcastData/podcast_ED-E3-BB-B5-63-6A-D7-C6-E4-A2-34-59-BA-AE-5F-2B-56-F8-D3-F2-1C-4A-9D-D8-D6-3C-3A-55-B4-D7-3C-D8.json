{
    "Id": "ED-E3-BB-B5-63-6A-D7-C6-E4-A2-34-59-BA-AE-5F-2B-56-F8-D3-F2-1C-4A-9D-D8-D6-3C-3A-55-B4-D7-3C-D8",
    "ContentSourceId": "f8b5d0b7-9181-43a4-8fab-d3e2b2c93d0a",
    "Title": "SE Radio 676: Samuel Colvin on the Pydantic Ecosystem",
    "SourceUrl": "http://se-radio.net/se-radio-676-samuel-colvin-on-the-pydantic-ecosystem",
    "Description": "<p data-prosemirror-content-type=\"node\" data-prosemirror-node-name= \"paragraph\" data-prosemirror-node-block=\"true\" data-pm-slice= \"1 1 []\"><strong data-prosemirror-content-type=\"mark\" data-prosemirror-mark-name=\"strong\">Samuel Colvin</strong>, the CEO and founder of Pydantic, speaks with host <a href= \"https://se-radio.net/team/gregory-kapfhammer/\" data-prosemirror-content-type=\"mark\" data-prosemirror-mark-name= \"link\">Gregory M. Kapfhammer</a> about the ecosystem of Pydantic\u2019s Python frameworks, including Pydantic, Pydantic AI, and Pydantic Logfire.</p> <p data-prosemirror-content-type=\"node\" data-prosemirror-node-name= \"paragraph\" data-prosemirror-node-block=\"true\" data-pm-slice= \"1 1 []\">Along with discussing the design, implementation, and use of these frameworks, they dive into the refactoring of Pydantic and the follow-on performance improvements. They also explore ways in which Python programmers can use these three frameworks to build, test, evaluate, and monitor their own applications that interact with both local and cloud-based large language models.</p> <p data-prosemirror-content-type=\"node\" data-prosemirror-node-name= \"paragraph\" data-prosemirror-node-block=\"true\" data-pm-slice= \"1 1 []\">Brought to you by\u00a0<a href=\"https://www.computer.org/\" target=\"_blank\" rel=\"noopener\">IEEE Computer Society</a>\u00a0and\u00a0<a href= \"https://www.computer.org/software\" target=\"_blank\" rel= \"noopener\">IEEE Software magazine</a>.</p>",
    "EnclosureUrl": "https://traffic.libsyn.com/secure/seradio/676-samuel-colvin-pydantic-ecosystem.mp3?dest-id=23379"
}