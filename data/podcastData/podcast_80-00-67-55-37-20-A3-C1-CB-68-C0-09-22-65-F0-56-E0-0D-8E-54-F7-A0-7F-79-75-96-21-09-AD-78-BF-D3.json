{
    "Id": "80-00-67-55-37-20-A3-C1-CB-68-C0-09-22-65-F0-56-E0-0D-8E-54-F7-A0-7F-79-75-96-21-09-AD-78-BF-D3",
    "ContentSourceId": "425b36ab-3b93-42c9-8cbc-032e3bddb1d6",
    "Title": "Creating Tic-Tac-Toe With an AI Player & Shortcuts for Python Decorators",
    "SourceUrl": "https://realpython.com/podcasts/rpp/132/",
    "Description": "<p>How do you create a computer opponent for a simple game within Python? Would you also like to learn how to adapt the game to run in a web browser or graphical user interface (GUI)? This week on the show, Christopher Trudeau is here, bringing another batch of PyCoder&rsquo;s Weekly articles and projects.</p>\n<p>Christopher shares a recent Real Python step-by-step project for creating a tic-tac-toe game engine. He talks about how to build the game engine and adapt it for different front ends. The tutorial also shows how to implement an unbeatable computer player using the minimax algorithm.</p>\n<p>We discuss an article about how to avoid repeating yourself when creating decorators with multiple parameters. We talk about how you can stop copying and pasting code several times by assigning the decorator to a new variable.</p>\n<p>We share several other articles and projects from the Python community, including a news roundup, a deep dive into Python&rsquo;s doctest, several Python command line tricks, type annotations via automated refactoring, a new way to draw boxes in the terminal,  a collection of projects for beginners with source code, a minimalist PDF creation library, and a tool for sensible logging in Python.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Course Spotlight:</strong> <a href=\"https://realpython.com/courses/python-decorators-101/\">Python Decorators 101</a> </p>\n<p>In this course on Python decorators, you&rsquo;ll learn what they are and how to create and use them. Decorators provide a simple syntax for calling higher-order functions in Python. By definition, a decorator is a function that takes another function and extends the behavior of the latter function without explicitly modifying it.</p>\n</div>\n<p>Topics:</p>\n<ul>\n<li>00:00:00 &ndash; Introduction</li>\n<li>00:02:25 &ndash; Python 3.12.0 Alpha 1 Released</li>\n<li>00:02:45 &ndash; PyCon US 2023 Call for Proposals</li>\n<li>00:03:27 &ndash; Python&rsquo;s doctest: Document and Test Your Code at Once</li>\n<li>00:13:59 &ndash; Build a Tic-Tac-Toe Game Engine With an AI Player in Python</li>\n<li>00:22:12 &ndash; Sponsor: InfluxDB</li>\n<li>00:22:59 &ndash; Python Command Line Tricks</li>\n<li>00:30:50 &ndash; Type Annotation via Automated Refactoring</li>\n<li>00:34:29 &ndash; A New (?) Way of Drawing Boxes in the Terminal</li>\n<li>00:37:10 &ndash; Decorator Shortcuts</li>\n<li>00:39:36 &ndash; Video Course Spotlight</li>\n<li>00:41:02 &ndash; 190 Python Projects With Source Code</li>\n<li>00:47:58 &ndash; fpdf2: Minimalist PDF Creation Library</li>\n<li>00:50:04 &ndash; Simple, Sane, and Sensible Logging in Python</li>\n<li>00:53:05 &ndash; Thanks and goodbye</li>\n</ul>\n<p>News:</p>\n<ul>\n<li><a href=\"https://blog.python.org/2022/10/python-3120-alpha-1-released.html\">Python 3.12.0 Alpha 1 Released</a></li>\n<li><a href=\"https://us.pycon.org/2023/speaking/guidelines/\">PyCon US 2023 Call for Proposals</a></li>\n</ul>\n<p>Topics:</p>\n<ul>\n<li><a href=\"https://realpython.com/python-doctest/\">Python&rsquo;s doctest: Document and Test Your Code at Once</a> &ndash; In this tutorial, you&rsquo;ll learn how to add usage examples to your code&rsquo;s documentation and docstrings and how to use these examples to test your code. To run your usage examples as automated tests, you&rsquo;ll use Python&rsquo;s doctest module from the standard library.</li>\n<li><a href=\"https://realpython.com/tic-tac-toe-ai-python/\">Build a Tic-Tac-Toe Game Engine With an AI Player in Python</a> &ndash; In this step-by-step tutorial, you&rsquo;ll build a universal game engine in Python with tic-tac-toe rules and two computer players, including an unbeatable AI player using the minimax algorithm. You&rsquo;ll also create a text-based graphical front end for your library and explore two alternative front ends.</li>\n<li><a href=\"https://medium.com/@martin.heinz/python-cli-tricks-that-dont-require-any-code-whatsoever-e7bdb9409aeb\">Python Command Line Tricks</a> &ndash; Using <code>python -m</code> you can do all sorts of things from the command line, including starting a webserver, opening a browser, parsing JSON, compressing files, and much more.</li>\n<li><a href=\"https://medium.com/building-carta/type-annotation-via-automated-refactoring-fd8edfe123d4\">Type Annotation via Automated Refactoring</a> &ndash; Jimmy&rsquo;s team at Carta decided they wanted to add type annotations to their large codebase, but doing so manually would&rsquo;ve taken a very long time. This post shows you how they built automated refactoring tools to add type annotations to their code.</li>\n<li><a href=\"https://www.willmcgugan.com/blog/tech/post/ceo-just-wants-to-draw-boxes/\">A New (?) Way of Drawing Boxes in the Terminal</a> &ndash; With clever use of some of the Unicode border characters, you can build a better box around your text, without any color bleeding.</li>\n<li><a href=\"https://nedbatchelder.com/blog/202210/decorator_shortcuts.html\">Decorator Shortcuts</a> &ndash; &ldquo;When using many decorators in code, there&rsquo;s a shortcut you can use if you find yourself repeating them. They can be assigned to a variable just like any other Python expression.&rdquo;</li>\n</ul>\n<p>Discussion:</p>\n<ul>\n<li><a href=\"https://amankharwal.medium.com/130-python-projects-with-source-code-61f498591bb\">190 Python Projects With Source Code</a></li>\n</ul>\n<p>Projects:</p>\n<ul>\n<li><a href=\"https://pyfpdf.github.io/fpdf2/\">fpdf2: Minimalist PDF Creation Library</a></li>\n<li><a href=\"https://medium.com/@petefison/logging-in-python-doesnt-get-simpler-than-this-50a7f24af1f4\">Simple, Sane, and Sensible Logging in Python</a> &ndash; Get started with logging in Python or deploy advanced, flexible loggers without the boilerplate code. Learn all about <code>log2d</code>, a third-party wrapper for the Python logging library.</li>\n</ul>\n<p>Additional Links:</p>\n<ul>\n<li><a href=\"https://realpython.com/python-project-documentation-with-mkdocs/\">Build Your Python Project Documentation With MkDocs \u2013 Real Python</a></li>\n<li><a href=\"https://realpython.com/podcasts/rpp/97/\">Episode #97: Improving Your Django and Python Developer Experience \u2013 The Real Python Podcast</a></li>\n<li><a href=\"https://realpython.com/python-zipapp/#creating-a-standalone-python-zip-app-with-zipapp\">Python&rsquo;s zipapp: Build Executable Zip Applications \u2013 Real Python</a></li>\n<li><a href=\"https://realpython.com/podcasts/rpp/80/\">Episode #80: Make Your Python App Interactive With a Text User Interface (TUI) \u2013 The Real Python Podcast</a></li>\n<li><a href=\"https://realpython.com/podcasts/rpp/20/\">Episode #20: Building PDFs in Python with ReportLab \u2013 The Real Python Podcast</a></li>\n<li><a href=\"http://www.fpdf.org/en/links.php\">Links for Documentation FPDF and Other Ports</a></li>\n<li><a href=\"https://github.com/PFython/log2d\">PFython/log2d - GitHub</a></li>\n</ul>\n<p>Level up your Python skills with our expert-led courses:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/pdf-python/\">How to Work With a PDF in Python</a></li>\n<li><a href=\"https://realpython.com/courses/python-inner-functions/\">Python Inner Functions</a></li>\n<li><a href=\"https://realpython.com/courses/python-decorators-101/\">Python Decorators 101</a></li>\n</ul> <p><a rel=\"payment\" href=\"https://realpython.com/join\">Support the podcast &amp; join our community of Pythonistas</a></p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/files.realpython.com/podcasts/RPP_E132_03_Cx2.288d6615fb93.mp3"
}