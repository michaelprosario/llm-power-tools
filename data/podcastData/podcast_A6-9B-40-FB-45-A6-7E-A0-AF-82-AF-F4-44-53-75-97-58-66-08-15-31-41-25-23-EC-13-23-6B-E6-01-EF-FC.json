{
    "Id": "A6-9B-40-FB-45-A6-7E-A0-AF-82-AF-F4-44-53-75-97-58-66-08-15-31-41-25-23-EC-13-23-6B-E6-01-EF-FC",
    "ContentSourceId": "08ddc66c-88c1-4fd9-9d0f-06779ee4a5cb",
    "Title": "#69 DR. THOMAS LUX - Interpolation of Sparse High-Dimensional Data",
    "SourceUrl": "https://podcasters.spotify.com/pod/show/machinelearningstreettalk/episodes/69-DR--THOMAS-LUX---Interpolation-of-Sparse-High-Dimensional-Data-e1fk3am",
    "Description": "<p>Today we are speaking with Dr. Thomas Lux, a research scientist at Meta in Silicon Valley.&nbsp;</p>\n<p><br></p>\n<p>In some sense, all of supervised machine learning can be framed through the lens of geometry. All training data exists as points in euclidean space, and we want to predict the value of a function at all those points. Neural networks appear to be the modus operandi these days for many domains of prediction. In that light; we might ask ourselves \u2014 what makes neural networks better than classical techniques like K nearest neighbour from a geometric perspective. Our guest today has done research on exactly that problem, trying to define error bounds for approximations in terms of directions, distances, and derivatives. &nbsp;</p>\n<p><br></p>\n<p>The insights from Thomas's work point at why neural networks are so good at problems which everything else fails at, like image recognition. The key is in their ability to ignore parts of the input space, do nonlinear dimension reduction, and concentrate their approximation power on important parts of the function.&nbsp;</p>\n<p><br></p>\n<p>[00:00:00] Intro to Show</p>\n<p>[00:04:11] Intro to Thomas (Main show kick off)</p>\n<p>[00:04:56] Interpolation of Sparse High-Dimensional Data</p>\n<p>[00:12:19] Where does one place the basis functions to partition the space, the perennial question</p>\n<p>[00:16:20] The sampling phenomenon -- where did all those dimensions come from?</p>\n<p>[00:17:40] The placement of the MLP basis functions, they are not where you think they are</p>\n<p>[00:23:15] NNs only extrapolate when given explicit priors to do so, CNNs in the translation domain</p>\n<p>[00:25:31] Transformers extrapolate in the permutation domain</p>\n<p>[00:28:26] NN priors work by creating space junk everywhere</p>\n<p>[00:36:44] Are vector spaces the way to go? On discrete problems</p>\n<p>[00:40:23] Activation functioms</p>\n<p>[00:45:57] What can we prove about NNs? Gradients without backprop</p>\n<p><br></p>\n<p>Interpolation of Sparse High-Dimensional Data [Lux]</p>\n<p>https://tchlux.github.io/papers/tchlux-2020-NUMA.pdf</p>\n<p><br></p>\n<p>A Spline Theory of Deep Learning [_Balestriero_]</p>\n<p>https://proceedings.mlr.press/v80/balestriero18b.html</p>\n<p><br></p>\n<p>Gradients without Backpropagation \u201822</p>\n<p>https://arxiv.org/pdf/2202.08587.pdf</p>\n",
    "EnclosureUrl": "https://anchor.fm/s/1e4a0eac/podcast/play/48941846/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2022-2-12%2Fb0de86de-c053-2048-f079-396dec019876.mp3"
}