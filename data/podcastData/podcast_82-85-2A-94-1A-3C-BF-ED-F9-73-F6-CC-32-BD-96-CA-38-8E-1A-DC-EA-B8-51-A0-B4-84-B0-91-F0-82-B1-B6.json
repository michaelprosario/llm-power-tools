{
    "Id": "82-85-2A-94-1A-3C-BF-ED-F9-73-F6-CC-32-BD-96-CA-38-8E-1A-DC-EA-B8-51-A0-B4-84-B0-91-F0-82-B1-B6",
    "ContentSourceId": "425b36ab-3b93-42c9-8cbc-032e3bddb1d6",
    "Title": "Good Python Programming Practices When New to the Language",
    "SourceUrl": "https://realpython.com/podcasts/rpp/231/",
    "Description": "<p>What advice would you give to someone moving from another language to Python? What good programming practices are inherent to the language? Christopher Trudeau is back on the show this week, bringing another batch of PyCoder&rsquo;s Weekly articles and projects.</p>\n<p>We discuss an older forum post from a new Python user who came from Perl. We suggest checking out PEP 8, or as it&rsquo;s commonly known, &ldquo;The Style Guide for Python Code.&rdquo; We provide advice about installing Python, avoiding common pitfalls, learning how scope is managed, and taking advantage of a collection of Real Python resources.</p>\n<p>We share several other articles and projects from the Python community, including a new Python release, practical NumPy examples and exercises, considering targets of for loops, exploring Python dependency management, checking package compatibility with free-threading and subinterpreters, an experimental filesystem navigator in Textual, and a background workers reference implementation in Django.</p>\n<p>This episode is sponsored by AssemblyAI.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Course Spotlight:</strong> <a href=\"https://realpython.com/courses/writing-beautiful-python-code-pep-8/\">Writing Beautiful Pythonic Code With PEP 8</a></p>\n<p>Learn how to write high-quality, readable code by using the Python style guidelines laid out in PEP 8. Following these guidelines helps you make a great impression when sharing your work with potential employers and collaborators. This course outlines the key guidelines laid out in PEP 8. It&rsquo;s aimed at beginner to intermediate programmers.</p>\n</div>\n<p>Topics:</p>\n<ul>\n<li>00:00:00 &ndash; Introduction</li>\n<li>00:02:17 &ndash; Python 3.14.0 Alpha 2 Released</li>\n<li>00:02:35 &ndash; Take the 2024 Django Developers Survey</li>\n<li>00:03:17 &ndash; NumPy Practical Examples: Useful Techniques</li>\n<li>00:07:09 &ndash; Loop Targets</li>\n<li>00:09:19 &ndash; Python Dependency Management Is a Dumpster Fire</li>\n<li>00:23:15 &ndash; Sponsor: AssemblyAI</li>\n<li>00:24:00 &ndash; Package Compatibility With Free-Threading and Subinterpreters</li>\n<li>00:27:02 &ndash; Suggestions for good programming practices?</li>\n<li>00:37:59 &ndash; Video Course Spotlight</li>\n<li>00:39:24 &ndash; terminal-tree: Experimental Filesystem Navigator in Textual</li>\n<li>00:43:56 &ndash; django-tasks: Background Workers Reference Implementation</li>\n<li>00:49:44 &ndash; Thanks and goodbye</li>\n</ul>\n<p>News:</p>\n<ul>\n<li><a href=\"https://pythoninsider.blogspot.com/2024/11/python-3140-alpha-2-released.html\">Python 3.14.0 Alpha 2 Released</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/nov/21/2024-django-developers-survey/\">Take the 2024 Django Developers Survey</a></li>\n</ul>\n<p>Topics:</p>\n<ul>\n<li><a href=\"https://realpython.com/numpy-example/\">NumPy Practical Examples: Useful Techniques</a> &ndash; In this tutorial, you&rsquo;ll learn how to use NumPy by exploring several interesting examples. You&rsquo;ll read data from a file into an array and analyze structured arrays to perform a reconciliation. You&rsquo;ll also learn how to quickly chart an analysis and turn a custom function into a vectorized function.</li>\n<li><a href=\"https://nedbatchelder.com/blog/202411/loop_targets.html\">Loop Targets</a> &ndash; Loop assignment allows you to assign to a dict item in a <code>for</code> loop. This post covers what that means and that it is no more costly than regular assignment.</li>\n<li><a href=\"https://nielscautaerts.xyz/python-dependency-management-is-a-dumpster-fire.html\">Python Dependency Management Is a Dumpster Fire</a> &ndash; Managing dependencies in Python can be a bit of a challenge. This deep dive article shows you all the problems and how the problems are mitigated if not solved.</li>\n<li><a href=\"https://parallel.python.tips/\">Package Compatibility With Free-Threading and Subinterpreters</a> &ndash; This tracker tests the compatibility of the 500 most popular packages with Python 3.13&rsquo;s free-threading and subinterpreter features.</li>\n</ul>\n<p>Discussion:</p>\n<ul>\n<li><a href=\"https://groups.google.com/g/comp.lang.python/c/kqWrUMSYhrY?pli=1\">Suggestions for good programming practices?</a></li>\n<li><a href=\"https://realpython.com/tutorials/best-practices/\">Python Best Practices \u2013 Real Python</a></li>\n<li><a href=\"https://peps.python.org/pep-0008/\">PEP 8 \u2013 Style Guide for Python Code</a></li>\n</ul>\n<p>Projects:</p>\n<ul>\n<li><a href=\"https://github.com/willmcgugan/terminal-tree\">terminal-tree: Experimental Filesystem Navigator in Textual</a></li>\n<li><a href=\"https://github.com/RealOrangeOne/django-tasks\">django-tasks: Background Workers Reference Implementation</a></li>\n</ul>\n<p>Additional Links:</p>\n<ul>\n<li><a href=\"https://realpython.com/podcasts/rpp/146/\">Episode #146: Using NumPy and Linear Algebra for Faster Python Code \u2013 The Real Python Podcast</a></li>\n<li><a href=\"https://realpython.com/python-pep8/\">How to Write Beautiful Python Code With PEP 8 \u2013 Real Python</a></li>\n<li><a href=\"https://realpython.com/courses/writing-idiomatic-python/\">Writing Idiomatic Python \u2013 Real Python</a></li>\n<li><a href=\"https://realpython.com/python-namespaces-scope/\">Namespaces and Scope in Python \u2013 Real Python</a></li>\n<li><a href=\"https://realpython.com/installing-python/\">How to Install Python on Your System: A Guide \u2013 Real Python</a></li>\n<li><a href=\"https://realpython.com/python-virtual-environments-a-primer/\">Python Virtual Environments: A Primer \u2013 Real Python</a></li>\n<li><a href=\"https://sourcery.ai/\">Sourcery - Instant Code Review for Faster Velocity</a></li>\n<li><a href=\"https://realpython.com/podcasts/rpp/183/\">Episode #183: Exploring Code Reviews in Python and Automating the Process</a></li>\n<li><a href=\"https://github.com/textualize/textual\">Textual</a></li>\n<li><a href=\"https://docs.astral.sh/uv/\">uv - An extremely fast Python package and project manager, written in Rust.</a></li>\n<li><a href=\"https://github.com/django/deps/blob/main/accepted/0014-background-workers.rst\">DEP 0014: Background workers - GitHub</a></li>\n<li><a href=\"https://pycoders.com/submissions\">PyCoder&rsquo;s Weekly - Have a Project You Want to Share? - Submit a Link</a></li>\n</ul>\n<p>Level up your Python skills with our expert-led courses:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/navigate-namespaces-scope/\">Navigating Namespaces and Scope in Python</a></li>\n<li><a href=\"https://realpython.com/courses/writing-idiomatic-python/\">Writing Idiomatic Python</a></li>\n<li><a href=\"https://realpython.com/courses/writing-beautiful-python-code-pep-8/\">Writing Beautiful Pythonic Code With PEP 8</a></li>\n</ul> <p><a rel=\"payment\" href=\"https://realpython.com/join\">Support the podcast &amp; join our community of Pythonistas</a></p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/files.realpython.com/podcasts/RPP_E231_03_PyCoders.f3e6553e92d4.mp3"
}