{
    "Id": "09-46-0A-D8-8E-F9-59-36-B8-CF-AF-AE-1E-87-2A-54-CE-D7-F8-22-A1-C1-BD-45-26-F6-D1-82-54-09-41-82",
    "ContentSourceId": "425b36ab-3b93-42c9-8cbc-032e3bddb1d6",
    "Title": "PyCoder's Weekly 2023 Wrap Up",
    "SourceUrl": "https://realpython.com/podcasts/rpp/184/",
    "Description": "<p>It&rsquo;s been a fascinating year for the Python language and community. PyCoder&rsquo;s Weekly included over 1,500 links to articles, blog posts, tutorials, and projects in 2023. Christopher Trudeau is back on the show this week to help wrap up everything by sharing some highlights and Python trends from across the year.</p>\n<p>Christopher shares the top five links explored by PyCoder&rsquo;s readers. We also dig into trends we noticed across all the articles and stories this year, including removing dead batteries from the standard library, continuing the effort to speed up Python, using Rust code in libraries, and moving away from microservices. </p>\n<p>We hope you enjoy this review! We look forward to bringing you an upcoming year full of great Python news, articles, topics, and projects. </p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Course Spotlight:</strong>  <a href=\"https://realpython.com/courses/python-basics-class/\">Python Basics: Building Systems With Classes</a></p>\n<p>In this video course, you&rsquo;ll learn how to work with classes to build complex systems in Python. By composing classes, inheriting from other classes, and overriding class behavior, you&rsquo;ll harness the power of object-oriented programming (OOP).</p>\n</div>\n<p>Topics:</p>\n<ul>\n<li>00:00:00 &ndash; Introduction</li>\n<li>00:02:21 &ndash; Python 3.13.0 Alpha 2 Is Now Available</li>\n<li>00:02:46 &ndash; Welcoming the Supporting Developer in Residence</li>\n<li>00:03:25 &ndash; Django 5.0 Released</li>\n<li>00:03:34 &ndash; Django Ninja 1.0 Released</li>\n<li>00:04:11 &ndash; Top Five PyCoder Links</li>\n<li>00:05:00 &ndash; Python 3.12: Cool New Features for You to Try</li>\n<li>00:05:27 &ndash; Speeding Up Your Code When Multiple Cores Aren&rsquo;t an Option</li>\n<li>00:05:46 &ndash; Learning About Code Metrics in Python With Radon</li>\n<li>00:06:07 &ndash; Python 3.12 Preview: More Intuitive and Consistent F-Strings</li>\n<li>00:06:28 &ndash; Design and Guidance: Object-Oriented Programming in Python</li>\n<li>00:07:49 &ndash; Python 3.12: What Didn&rsquo;t Make the Headlines</li>\n<li>00:11:34 &ndash; Python 3.13 Removes 20 Stdlib Modules</li>\n<li>00:13:32 &ndash; Missing Batteries: Essential Libraries You&rsquo;re Missing Out On</li>\n<li>00:16:21 &ndash; More Batteries Please</li>\n<li>00:19:19 &ndash; Three Python Trends in 2023</li>\n<li>00:24:36 &ndash; Video Course Spotlight</li>\n<li>00:26:23 &ndash; Mojo, a Superset of Python</li>\n<li>00:27:54 &ndash; Why Mojo?</li>\n<li>00:28:14 &ndash; Mojo SDK Released for Linux</li>\n<li>00:28:19 &ndash; Mojo: Head-to-Head With Python and Numba</li>\n<li>00:29:22 &ndash; How We Organize Our Very Large Python Monolith</li>\n<li>00:34:11 &ndash; Python and Folium to Visualize My Outdoor Activities</li>\n<li>00:37:13 &ndash; Thanks and goodbye</li>\n</ul>\n<p>News:</p>\n<ul>\n<li><a href=\"https://pythoninsider.blogspot.com/2023/11/python-3130-alpha-2-is-now-available.html\">Python 3.13.0 Alpha 2 Is Now Available</a></li>\n<li><a href=\"https://discuss.python.org/t/welcoming-the-supporting-developer-in-residence/39702\">Welcoming the Supporting Developer in Residence</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2023/dec/04/django-50-released/\">Django 5.0 Released</a></li>\n<li><a href=\"https://django-ninja.dev/whatsnew_v1/\">Django Ninja 1.0 Released</a></li>\n</ul>\n<p>Top Five PyCoder Links:</p>\n<ul>\n<li><a href=\"https://realpython.com/python312-new-features/\">Python 3.12: Cool New Features for You to Try</a> &ndash; In this tutorial, you&rsquo;ll learn about the new features in Python 3.12. You&rsquo;ll explore how the new release extends the better error messages and faster code execution found in the previous version, and you&rsquo;ll try out the improvements to f-strings and type variable syntax.</li>\n<li><a href=\"https://pythonspeed.com/articles/optimizing-dithering/\">Speeding Up Your Code When Multiple Cores Aren&rsquo;t an Option</a> &ndash; Parallelism isn&rsquo;t the only answer: often you can optimize low-level code to get significant performance improvements.</li>\n<li><a href=\"https://www.blog.pythonlibrary.org/2023/09/20/learning-about-code-metrics-in-python-with-radon/\">Learning About Code Metrics in Python With Radon</a> &ndash; Radon is a code metrics tool. This article introduces you to it and explains how you can improve your code based on its measurements.</li>\n<li><a href=\"https://realpython.com/python312-f-strings/\">Python 3.12 Preview: More Intuitive and Consistent F-Strings</a> &ndash; In this tutorial, you&rsquo;ll preview one of the upcoming features of Python 3.12, which introduces a new f-string syntax formalization and implementation. The new implementation lifts some restrictions and limitations that affect f-string literals in Python versions lower than 3.12.</li>\n<li><a href=\"https://realpython.com/courses/solid-principles-python/\">Design and Guidance: Object-Oriented Programming in Python</a> &ndash; In this video course, you&rsquo;ll learn about the SOLID principles, which are five well-established standards for improving your object-oriented design in Python. By applying these principles, you can create object-oriented code that is more maintainable, extensible, scalable, and testable.</li>\n</ul>\n<p>Topics and 2023 Trends:</p>\n<ul>\n<li><a href=\"https://www.bitecode.dev/p/python-312-what-didnt-make-the-headlines\">Python 3.12: What Didn&rsquo;t Make the Headlines</a> &ndash; There&rsquo;s been plenty of coverage about the changes in Python 3.12. This article highlights what fell through the cracks. It talks about performance, <code>pathlib</code> improvements, and a few other changes.</li>\n<li><a href=\"https://discuss.python.org/t/pep-594-has-been-implemented-python-3-13-removes-20-stdlib-modules/27124\">Python 3.13 Removes 20 Stdlib Modules</a> &ndash; Core developers are busy working on <a href=\"https://peps.python.org/pep-0594/\">PEP 594</a>, removing dead batteries from Python 3.13. This long post in the discussion forum highlights what work has been completed so far.</li>\n<li><a href=\"https://martinheinz.dev/blog/96\">Missing Batteries: Essential Libraries You&rsquo;re Missing Out On</a> &ndash; Even though Python&rsquo;s standard library comes with batteries included, it&rsquo;s still missing some essentials. This article covers libraries for debugging, testing, CLI, and more.</li>\n<li><a href=\"https://noumenal.es/posts/more-batteries-please/89w/\">More Batteries Please</a> &ndash; This brief opinion piece from Carlton Gibson states why he thinks we need more functionality in the Python standard library rather than less.</li>\n<li><a href=\"https://blog.jerrycodes.com/python-trends-in-2023/\">Three Python Trends in 2023</a> &ndash; An opinion piece on three trends likely to attract attention in the Python world in 2023: Python/Rust co-projects, web apps, and more typing. Read on for examples in each category.</li>\n<li><a href=\"https://www.fast.ai/posts/2023-05-03-mojo-launch.html\">Mojo, a Superset of Python</a> &ndash; <a href=\"https://docs.modular.com/mojo/\">Mojo</a> is a new programming language that&rsquo;s a superset of Python. It aims to fix Python&rsquo;s performance and deployment problems. Jeremy Howard - from fast.ai.</li>\n<li><a href=\"https://docs.modular.com/mojo/why-mojo.html\">Why Mojo?</a> &ndash; &ldquo;A backstory and rationale for why we created the Mojo language.&rdquo; Chris Lattner - from Modular.</li>\n<li><a href=\"https://www.modular.com/blog/mojo-its-finally-here\">Mojo SDK Released for Linux</a></li>\n<li><a href=\"https://dev.to/maximsaplin/mojo-head-to-head-with-python-and-numba-5bn9\">Mojo: Head-to-Head With Python and Numba</a> &ndash; This article covers a Mandelbrot-based benchmark of Python, variations of Numba, and the newly available Mojo. Although Mojo is fast, it takes a lot more work than the author expected to translate Python to it, and with the right parameters, Numba still beats it.</li>\n<li><a href=\"https://blog.europython.eu/kraken-technologies-how-we-organize-our-very-large-pythonmonolith/\">How We Organize Our Very Large Python Monolith</a> &ndash; Kraken Technologies is an environmental tech company that does a lot of Python development. One of their applications is a monolith with over 27,000 modules. This article outlines how they keep all of this organized and running.</li>\n</ul>\n<p>Project:</p>\n<ul>\n<li><a href=\"https://hackernoon.com/how-i-used-python-and-folium-to-visualize-my-outdoor-activities\">Python and Folium to Visualize My Outdoor Activities</a> &ndash; Embark on an expedition of exploration and mapping! Learn how to breathe life into your GPX files and create interactive maps using Python and Folium.</li>\n<li><a href=\"https://realpython.com/python-folium-web-maps-from-data/\">Python Folium: Create Web Maps From Your Data \u2013 Real Python</a></li>\n<li><a href=\"https://realpython.com/courses/python-folium-web-maps-from-data/\">Creating Web Maps From Your Data With Python Folium \u2013 Real Python</a></li>\n</ul>\n<p>Additional Links:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/rest-apis-with-django-ninja/\">Sneaky REST APIs With Django Ninja \u2013 Real Python Video Course</a></li>\n<li><a href=\"https://realpython.com/podcasts/rpp/175/\">Episode #175: Exploring the New Features of Python 3.12 \u2013 The Real Python Podcast</a></li>\n<li><a href=\"https://pymotw.com/3/\">Python 3 Module of the Week - PyMOTW 3</a></li>\n<li><a href=\"https://realpython.com/podcasts/rpp/171/\">Episode #171: Making Each Line of Code Efficient &amp; Python In Excel \u2013 The Real Python Podcast</a></li>\n<li><a href=\"https://github.com/psf/requests\">psf/requests: A simple, yet elegant, HTTP library.</a></li>\n<li><a href=\"https://htmx.org/\">htmx - high power tools for html</a></li>\n</ul>\n<p>Level up your Python skills with our expert-led courses:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/building-systems-classes-exercises/\">Python Basics Exercises: Building Systems With Classes</a></li>\n<li><a href=\"https://realpython.com/courses/python-folium-web-maps-from-data/\">Creating Web Maps From Your Data With Python Folium</a></li>\n<li><a href=\"https://realpython.com/courses/python-basics-class/\">Python Basics: Building Systems With Classes</a></li>\n</ul> <p><a rel=\"payment\" href=\"https://realpython.com/join\">Support the podcast &amp; join our community of Pythonistas</a></p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/files.realpython.com/podcasts/RPP_E184_02_Cx2.01c66af0a50e.mp3"
}