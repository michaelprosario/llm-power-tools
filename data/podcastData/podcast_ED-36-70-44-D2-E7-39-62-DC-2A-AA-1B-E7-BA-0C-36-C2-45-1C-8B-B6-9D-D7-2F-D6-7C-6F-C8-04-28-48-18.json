{
    "Id": "ED-36-70-44-D2-E7-39-62-DC-2A-AA-1B-E7-BA-0C-36-C2-45-1C-8B-B6-9D-D7-2F-D6-7C-6F-C8-04-28-48-18",
    "ContentSourceId": "6211f1c3-8dc3-4bf8-a824-be7c8b79d101",
    "Title": "004: The RxJava show with Dan Lew (Part 2)",
    "SourceUrl": "https://fragmentedpodcast.com/",
    "Description": "<p>In this episode of Fragmented, Donn and Kaushik continue their conversation with Dan Lew on RxJava. In the final part of this 2 part series, they talk about many useful RxJava operators and other intricacies of using RxJava in Android.</p>\n<h2>Show Notes</h2>\n<h3>RxJava Operators:</h3>\n<ul>\n<li>Observable.just [<a href=\"http://reactivex.io/documentation/operators/just.html\">reactivex.io</a>]</li>\n<li>Observable.from [<a href=\"http://reactivex.io/documentation/operators/from.html\">reactivex.io</a>]</li>\n<li>Observable.defer [<a href=\"http://reactivex.io/documentation/operators/defer.html\">reactivex.io</a>]\n<ul>\n<li>Using defer to handle \u201cOld, Slow Code\u201d [<a href=\"http://blog.danlew.net/2014/10/08/grokking-rxjava-part-4/\">blog.danlew.net</a>]</li>\n</ul>\n</li>\n<li>Observable.map [<a href=\"http://reactivex.io/documentation/operators/map.html\">reactivex.io</a>]</li>\n<li>Observable.flatmap [<a href=\"http://reactivex.io/documentation/operators/flatmap.html\">reactivex.io</a>]\n<ul>\n<li>map vs flatmap (alchemist and cheese shredding analogy [<a href=\"http://www.reddit.com/r/androiddev/comments/2y8exc/what_is_the_difference_between_map_and_flatmap_in/\">reddit</a>])</li>\n</ul>\n</li>\n<li>Observable.zip [<a href=\"http://reactivex.io/documentation/operators/zip.html\">reactivex.io</a>]</li>\n<li>Observable.combineLatest [<a href=\"http://reactivex.io/documentation/operators/combinelatest.html\">reactivex.io</a>]</li>\n<li>Observable. switchMap [<a href=\"http://reactivex.io/documentation/operators/images/switchMap.png\">reactivex.io</a>]</li>\n<li>Observable.distinctUntilChanged [<a href=\"http://rxmarbles.com/#distinctUntilChanged\">reactivex.io</a>]</li>\n<li>Observable.lift explanation [<a href=\"https://github.com/ReactiveX/RxJava/wiki/Implementing-Your-Own-Operators\">reactivex.io</a>]</li>\n<li>Observable.compose\n<ul>\n<li>Don\u2019t break the chain (using compose) [<a href=\"http://blog.danlew.net/2015/03/02/dont-break-the-chain/\">blog.danlew.net</a>]</li>\n</ul>\n</li>\n<li>Observable.filter [<a href=\"http://reactivex.io/documentation/operators/filter.html\">reactivex.io</a>]</li>\n<li>Observable.take [<a href=\"https://github.com/ReactiveX/RxJava/wiki/Filtering-Observables#take\">reactivex.io</a>]</li>\n<li>subscribeOn vs observeOn [<a href=\"http://stackoverflow.com/questions/7579237/whats-the-difference-between-subscribeon-and-observeon\">stackoverflow.com</a>]</li>\n<li>Understanding debounce, buffer, debouncedBuffer [<a href=\"http://nerds.weddingpartyapp.com/tech/2015/01/05/debouncedbuffer-used-in-rxbus-example/\">nerds.weddingpartyapp.com</a>]</li>\n</ul>\n<h3>RxJava Components:</h3>\n<ul>\n<li>Subjects: when is it appropriate to use [.net but still applies] [[davesexton.com] <a href=\"http://davesexton.com/blog/post/To-Use-Subject-Or-Not-To-Use-Subject.aspx\">19</a>]</li>\n<li>Implementing an event bus using RxJava [<a href=\"http://nerds.weddingpartyapp.com/tech/2014/12/24/implementing-an-event-bus-with-rxjava-rxbus/\">nerds.weddingpartyapp.com</a>]</li>\n<li>RxJava plugins\u00a0[<a href=\"https://github.com/ReactiveX/RxJava/wiki/Plugins\">github.com</a>]\n<ul>\n<li>RxJavaDebug\u00a0plugin - for hooking to start/end/error [<a href=\"https://github.com/ReactiveX/RxJavaDebug\">github.com</a>]</li>\n</ul>\n</li>\n<li>.toBlocking() [<a href=\"http://reactivex.io/RxJava/javadoc/rx/Observable.html#toBlocking%28%29\">reactivx.io</a>]</li>\n<li>Composite Subscriptions [<a href=\"http://reactivex.io/RxJava/javadoc/rx/subscriptions/CompositeSubscription.html\">reactivex.io</a>]</li>\n</ul>\n<h3>Retrolambda</h3>\n<ul>\n<li>Retrolambda library [<a href=\"https://github.com/orfjackal/retrolambda\">github.com</a>]</li>\n<li>Retrolambda gradle plugin [<a href=\"https://github.com/evant/gradle-retrolambda\">github.com</a>]</li>\n<li>Common Issue with Retrolambda (NoClassDefFoundError) [<a href=\"https://github.com/orfjackal/retrolambda/issues/37\">github.com</a>]</li>\n</ul>\n<h3>Hot \u00a0vs Cold observables - From the RxJs wiki [<a href=\"https://github.com/Reactive-Extensions/RxJS/blob/master/doc/gettingstarted/creating.md#cold-vs-hot-observables\">github.com</a>]</h3>\n<ul>\n<li>uses js instead of java, but concepts are the same and this is the best explanation I\u2019ve found so far.</li>\n</ul>\n<h3>RxJava wiki on Backpressure [<a href=\"https://github.com/ReactiveX/RxJava/wiki/Backpressure\">github.com</a>]:</h3>\n<ul>\n<li>Ring buffer size: <code>System.setProperty(&quot;rx.ring-buffer.size&quot;, &quot;128&quot;);</code></li>\n<li>Issue with changing buffer ring size [<a href=\"https://github.com/ReactiveX/RxJava/issues/1820\">github.com</a>]</li>\n<li>It\u2019s 16 on Android, down from 1024 originally. :P So it\u2019s actually 64x smaller.</li>\n</ul>\n<h2>Awesome picks:</h2>\n<p>Dan Lew:</p>\n<ul>\n<li>Simple Made Easy (talk by Rich Hickey creator of Clojure) [<a href=\"http://www.infoq.com/presentations/Simple-Made-Easy\">infohq</a>]</li>\n<li>Victor by Trello (SVG assets) [<a href=\"https://github.com/trello/victor\">github.com</a>]</li>\n</ul>\n<p>Donn:</p>\n<ul>\n<li>Realm Object Database [<a href=\"http://realm.io/\">realm.io</a>]</li>\n</ul>\n<p>Kaushik:</p>\n<ul>\n<li>Therapeutic Refactoring (talk by Katrina Owen) [<a href=\"https://www.youtube.com/watch?v=J4dlF0kcThQ\">youtube.com</a>]</li>\n</ul>\n<h2>Contact</h2>\n<h3>Dan Lew</h3>\n<ul>\n<li>@danlew42 [<a href=\"https://twitter.com/danlew42\">twitter.com</a>]</li>\n<li>Dan Lew\u2019s blog [<a href=\"http://blog.danlew.net/\">danlew.net</a>]</li>\n</ul>\n<h3>Donn Felker</h3>\n<ul>\n<li>@donnfelker [<a href=\"https://twitter.com/donnfelker\">twitter.com</a>]</li>\n<li><a href=\"http://www.donnfelker.com/\">donnfelker.com</a></li>\n</ul>\n<h3>Kaushik Gopal</h3>\n<ul>\n<li>@kaushikgopal [<a href=\"https://twitter.com/kaushikgopal/\">twitter.com</a>]</li>\n<li><a href=\"http://kaush.co/\">kaush.co</a></li>\n</ul>\n",
    "EnclosureUrl": "https://cdn.simplecast.com/audio/20f350/20f35050-e836-44cd-8f7f-fd13e8cb2e44/6069a8db-63b9-4032-a818-d6902fa118cd/ep-4-fragmented_tc.mp3?aid=rss_feed&feed=LpAGSLnY"
}