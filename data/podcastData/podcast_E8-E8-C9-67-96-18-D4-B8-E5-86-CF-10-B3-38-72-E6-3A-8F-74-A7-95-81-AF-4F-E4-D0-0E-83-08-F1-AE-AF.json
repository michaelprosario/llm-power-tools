{
    "Id": "E8-E8-C9-67-96-18-D4-B8-E5-86-CF-10-B3-38-72-E6-3A-8F-74-A7-95-81-AF-4F-E4-D0-0E-83-08-F1-AE-AF",
    "ContentSourceId": "425b36ab-3b93-42c9-8cbc-032e3bddb1d6",
    "Title": "Measuring Multiple Facets of Python Performance With Scalene",
    "SourceUrl": "https://realpython.com/podcasts/rpp/172/",
    "Description": "<p>When choosing a tool for profiling Python code performance, should it focus on the CPU, GPU, memory, or individual lines of code? What if it looked at all those factors and didn&rsquo;t alter code performance while measuring it? This week on the show, we talk about Scalene with Emery Berger, Professor of Computer Science at the University of Massachusetts Amherst.</p>\n<p>Emery talks about his background in memory management and his collaboration on Hoard, a scalable memory manager system used in Mac OS X. We discuss the need for improving code performance on modern computer architecture. He highlights this idea by contrasting the familiar limitations of Moore&rsquo;s law with the lesser-known rule of Dennard scaling.</p>\n<p>Working with his students in the university lab, they developed Scalene. Scalene is a high-performance CPU, GPU, and memory profiler. It can look at code from the individual function or line-by-line level and compare time spent in Python vs C code. Emery talks about the recent Scalene feature of AI-powered optimization proposals and covers a couple of examples. He also shares a collection of additional Python code-assistant tools from their lab.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Course Spotlight:</strong> <a href=\"https://realpython.com/courses/if-name-main-python/\">What Does if <strong>name</strong> == &ldquo;<strong>main</strong>&rdquo; Mean in Python?</a> </p>\n<p>In this video course, you&rsquo;ll learn all about Python&rsquo;s name-main idiom. You&rsquo;ll learn what it does in Python, how it works, when to use it, when to avoid it, and how to refer to it.</p>\n</div>\n<p>Topics:</p>\n<ul>\n<li>00:00:00 &ndash; Introduction</li>\n<li>00:02:13 &ndash; College of Information and Computer Sciences</li>\n<li>00:03:25 &ndash; Memory management systems background</li>\n<li>00:05:15 &ndash; Dennard Scaling vs Moore&rsquo;s Law</li>\n<li>00:10:12 &ndash; Starting work on Python profiling</li>\n<li>00:15:00 &ndash; Deciding on a statistical profiler</li>\n<li>00:17:05 &ndash; Wanting to trace memory</li>\n<li>00:21:21 &ndash; Finding memory issues</li>\n<li>00:23:59 &ndash; Line-by-line analysis</li>\n<li>00:25:56 &ndash; Video Course Spotlight</li>\n<li>00:27:14 &ndash; Measuring profiler performance</li>\n<li>00:30:30 &ndash; Memory leak detection</li>\n<li>00:34:31 &ndash; When should you run a profiler?</li>\n<li>00:37:27 &ndash; Considerations for measuring cloud performance</li>\n<li>00:39:12 &ndash; Working with Jupyter and Conda</li>\n<li>00:42:18 &ndash; Common issues and AI solutions</li>\n<li>00:45:50 &ndash; Using a profiler to learn a codebase</li>\n<li>00:50:48 &ndash; Examples of AI-powered optimizations </li>\n<li>00:55:50 &ndash; What are you excited about in the world of Python?</li>\n<li>00:58:30 &ndash; What do you want to learn next?</li>\n<li>01:01:48 &ndash; How can people follow your work online?</li>\n<li>01:02:56 &ndash; Thanks and goodbye</li>\n</ul>\n<p>Show Links:</p>\n<ul>\n<li><a href=\"https://emeryberger.com/\">Emery Berger - Professor of Computer Science, UMass Amherst</a></li>\n<li><a href=\"https://github.com/plasma-umass/scalene\">Scalene: a high-performance, high-precision CPU, GPU, and memory profiler for Python with AI-powered optimization proposals</a></li>\n<li><a href=\"http://hoard.org/\">Hoard</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Moore%27s_law\">Moore&rsquo;s law - Wikipedia</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Dennard_scaling\">Dennard scaling - Wikipedia</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=nrQPqy3YY5A&amp;t=26s\">Scalene: A high-performance, high-precision CPU+GPU+memory profiler for Python - PyCon 2021 - YouTube</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=vVUnCXKuNOg\">Python Performance Matters - Strange Loop 2022 - YouTube</a></li>\n<li><a href=\"https://arxiv.org/pdf/2212.07597.pdf\">Triangulating Python Performance Issues with Scalene</a></li>\n<li><a href=\"https://github.com/plasma-umass/chatdbg\">ChatDBG: Puts root causes analysis into your debugger, and suggests fixes</a> </li>\n<li><a href=\"https://github.com/plasma-umass/commentator\">Commentator: Automatically writes comments and type annotations for your code</a> </li>\n<li><a href=\"https://github.com/plasma-umass/pythoness\">Pythoness: Automatically generates Python code from natural language description</a></li>\n<li><a href=\"https://github.com/plasma-umass/slipcover\">Slipcover: Near Zero-Overhead Python Code Coverage</a></li>\n<li><a href=\"https://github.com/emeryberger\">emeryberger  - GitHub</a></li>\n</ul>\n<p>Level up your Python skills with our expert-led courses:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/python-debugging-pdb/\">Debugging in Python With pdb</a></li>\n<li><a href=\"https://realpython.com/courses/testing-your-code-with-pytest/\">Testing Your Code With pytest</a></li>\n<li><a href=\"https://realpython.com/courses/if-name-main-python/\">What Does if <strong>name</strong> == &quot;<strong>main</strong>&quot; Mean in Python?</a></li>\n</ul> <p><a rel=\"payment\" href=\"https://realpython.com/join\">Support the podcast &amp; join our community of Pythonistas</a></p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/files.realpython.com/podcasts/RPP_E172_02_Emery.544c68f38fbe.mp3"
}