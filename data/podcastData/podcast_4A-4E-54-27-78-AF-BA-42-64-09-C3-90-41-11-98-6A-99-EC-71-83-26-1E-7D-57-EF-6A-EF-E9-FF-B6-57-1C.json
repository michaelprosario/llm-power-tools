{
    "Id": "4A-4E-54-27-78-AF-BA-42-64-09-C3-90-41-11-98-6A-99-EC-71-83-26-1E-7D-57-EF-6A-EF-E9-FF-B6-57-1C",
    "ContentSourceId": "fc0b0983-2987-457e-aa72-36baefbda170",
    "Title": "Back to Basics \u2013 Encapsulation for Object Oriented Programming",
    "SourceUrl": "https://www.codingblocks.net/podcast/episode-23-back-to-basics-encapsulation-for-object-oriented-programming/",
    "Description": "<img width=\"150\" height=\"150\" src=\"https://www.codingblocks.net/wp-content/uploads/2015/02/Episode-Artwork-Template1-150x150.jpg\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" decoding=\"async\" loading=\"lazy\" /><img width=\"150\" height=\"150\" src=\"https://www.codingblocks.net/wp-content/uploads/2015/02/Episode-Artwork-Template1-150x150.jpg\" class=\"attachment-thumbnail size-thumbnail wp-post-image\" alt=\"\" style=\"float:left; margin:0 15px 15px 0;\" decoding=\"async\" loading=\"lazy\" />It's time to get back to basics.  It's easy as a software developer to be working on the latest and greatest frameworks, using the best methodologies, trying out new things.  Sometimes it's a good idea to get a refresher on the very basic fundamentals.  In this episode we go over the access modifiers that are common in C# and Java as well as ways to emulate these types of behaviors in Javascript.  And let's be honest - encapsulation is only effective if you're providing programmers that come after you with a roadmap of how things should work.  For that reason we also discuss Command Query Separation and some other ideas and practices that are a part of good programming practices.  Be sure to head over to www.CodingBlocks.net/review and leave us a review on your favorite podcasting platform!",
    "EnclosureUrl": "http://media.blubrry.com/codingblocks/www.podtrac.com/pts/redirect.mp3/traffic.libsyn.com/codingblocks/Coding_Blocks_Episode_23_-_Back_to_Basics_-_Encapsulation.mp3"
}