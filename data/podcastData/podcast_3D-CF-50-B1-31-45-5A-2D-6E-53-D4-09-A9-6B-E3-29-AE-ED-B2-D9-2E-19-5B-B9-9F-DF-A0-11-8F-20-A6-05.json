{
    "Id": "3D-CF-50-B1-31-45-5A-2D-6E-53-D4-09-A9-6B-E3-29-AE-ED-B2-D9-2E-19-5B-B9-9F-DF-A0-11-8F-20-A6-05",
    "ContentSourceId": "425b36ab-3b93-42c9-8cbc-032e3bddb1d6",
    "Title": "Exploring Recursion in Python With Al Sweigart",
    "SourceUrl": "https://realpython.com/podcasts/rpp/124/",
    "Description": "<p>Have you wanted to understand recursion and how to use it in Python? Are you familiar with the call stack and how it relates to tracebacks? This week on the show, Al Sweigart talks about his new book, &ldquo;The Recursive Book of Recursion.&rdquo;</p>\n<p>Recursion is one of those concepts held as a tenet of high-level computer science priesthood. Al explains the fundamentals of writing recursive functions and a critical missing piece in understanding how they operate, the call stack. After completing his research, he concluded that it&rsquo;s a technique that you should understand but rarely use.</p>\n<p>He also shares the few cases where recursion is an appropriate solution. Along the way, we talk about directed acyclic graphs, solving mazes, exploring file trees, and creating fractal images.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Course Spotlight:</strong>  <a href=\"https://realpython.com/courses/caching-python-lru/\">Caching in Python With lru_cache</a></p>\n<p>Caching is an essential optimization technique. In this video course, you&rsquo;ll learn how to use Python&rsquo;s @lru_cache decorator to cache the results of your functions using the LRU cache strategy. This is a powerful technique you can use to leverage the power of caching in your implementations.</p>\n</div>\n<p>Topics:</p>\n<ul>\n<li>00:00:00 &ndash; Introduction</li>\n<li>00:01:55 &ndash; The Recursive Book of Recursion</li>\n<li>00:02:55 &ndash; A Beginner&rsquo;s Guide to Recursion - YouTube</li>\n<li>00:05:41 &ndash; What is recursion?</li>\n<li>00:10:17 &ndash; Understanding the call stack</li>\n<li>00:12:15 &ndash; Languages moving from GOTO statements to functions and a stack</li>\n<li>00:21:11 &ndash; A common recursion example of factorials</li>\n<li>00:26:00 &ndash; Fibonacci sequence and memoization</li>\n<li>00:30:25 &ndash; Cautionary advice on applying recursion</li>\n<li>00:32:55 &ndash; What is recursion useful for?</li>\n<li>00:39:56 &ndash; Video Course Spotlight</li>\n<li>00:41:14 &ndash; Recursion and directed acyclic graphs</li>\n<li>00:45:46 &ndash; Book examples</li>\n<li>00:49:50 &ndash; Thoughts on tail recursion</li>\n<li>00:54:34 &ndash; How has the scope of the book evolved?</li>\n<li>01:00:34 &ndash; Creating examples in two languages</li>\n<li>01:02:37 &ndash; Upcoming projects</li>\n<li>01:05:19 &ndash; Examples of the projects in the book</li>\n<li>01:10:30 &ndash; What are you excited about in the world of Python?</li>\n<li>01:14:50 &ndash; What do you want to learn next?</li>\n<li>01:19:06 &ndash; How can people follow your work?</li>\n<li>01:19:48 &ndash; Thanks and goodbye</li>\n</ul>\n<p>Show Links:</p>\n<ul>\n<li><a href=\"https://nostarch.com/recursive-book-recursion\">The Recursive Book of Recursion | No Starch Press</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=AfBqVVKg4GE\">Recursion for Beginners: A Beginner&rsquo;s Guide to Recursion - YouTube</a></li>\n<li><a href=\"http://inventwithpython.com/blog/\">The Invent with Python Blog</a></li>\n<li><a href=\"https://realpython.com/courses/python-recursion/\">Recursion in Python</a></li>\n<li><a href=\"https://www.britannica.com/science/factorial\">factorial | Definition, Symbol, &amp; Facts | Britannica</a></li>\n<li><a href=\"https://www.britannica.com/science/Fibonacci-number\">Fibonacci sequence | Definition, Formula, Numbers, Ratio, &amp; Facts | Britannica</a></li>\n<li><a href=\"https://realpython.com/fibonacci-sequence-python/\">A Python Guide to the Fibonacci Sequence \u2013 Real Python</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Directed_acyclic_graph\">Directed acyclic graph - Wikipedia</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Dynamic_programming\">Dynamic programming - Wikipedia</a></li>\n<li><a href=\"https://archive.org/details/isbn_9780262560993\">The Little Schemer : Friedman, Daniel P : Internet Archive</a></li>\n<li><a href=\"https://inventwithpython.com/blog/2018/12/09/book-review-the-little-schemer/\">Book Review: The Little Schemer - The Invent with Python Blog</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Droste_effect\">Droste effect - Wikipedia</a></li>\n<li><a href=\"https://realpython.com/podcasts/rpp/33/\">Episode #33: Going Beyond the Basic Stuff With Python and Al Sweigart \u2013 The Real Python Podcast</a></li>\n<li><a href=\"https://www.textualize.io/\">Textualize</a></li>\n<li><a href=\"https://realpython.com/podcasts/rpp/80/\">Episode #80: Make Your Python App Interactive With a Text User Interface (TUI) \u2013 The Real Python Podcast</a></li>\n<li><a href=\"https://beeware.org/\">BeeWare \u2014 Write once. Deploy everywhere.</a></li>\n<li><a href=\"https://realpython.com/podcasts/rpp/22/\">Episode #22: Create Cross-Platform Python GUI Apps With BeeWare \u2013 The Real Python Podcast</a></li>\n<li><a href=\"https://www.youtube.com/c/JoNakashimaBR\">Origami with Jo Nakashima - YouTube</a></li>\n<li><a href=\"https://inventwithpython.com/\">Invent with Python</a></li>\n</ul>\n<p>Level up your Python skills with our expert-led courses:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/intermediate-project-ideas/\">Grow Your Python Portfolio With 13 Intermediate Project Ideas</a></li>\n<li><a href=\"https://realpython.com/courses/caching-python-lru/\">Caching in Python With lru_cache</a></li>\n<li><a href=\"https://realpython.com/courses/python-fibonacci-sequence/\">Exploring the Fibonacci Sequence With Python</a></li>\n</ul> <p><a rel=\"payment\" href=\"https://realpython.com/join\">Support the podcast &amp; join our community of Pythonistas</a></p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/files.realpython.com/podcasts/RPP_E124_Al_Sweigart.ab462d7c0766.mp3"
}