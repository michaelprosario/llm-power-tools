{
    "Id": "3C-DC-D4-D5-EF-94-37-AF-90-F4-6A-BC-B8-63-36-49-EB-25-4A-9F-06-49-78-90-C0-9A-E2-3D-7B-4A-B5-95",
    "ContentSourceId": "6211f1c3-8dc3-4bf8-a824-be7c8b79d101",
    "Title": "024: Effective Java for Android developers : Item 6",
    "SourceUrl": "https://fragmentedpodcast.com/",
    "Description": "<p>Joshua's sixth Item: <strong>Eliminate obsolete object references</strong> , in a distinctively croaky voice.</p>\n<p>Stay tuned for more items from our <a href=\"http://fragmentedpodcast.com/category/effective-java/\">&quot;Effective Java for Android developers&quot; Fragment series</a>.</p>\n<h2>Show Notes</h2>\n<ul>\n<li><a href=\"http://www.amazon.com/Effective-Java-2nd-Joshua-Bloch/dp/0321356683/?tag=httpkaushco-20\">Effective Java (2nd Edition) - Joshua Bloch</a></li>\n</ul>\n<p><strong>Eliminate obsolete object references</strong></p>\n<p>Supplemental reading (for the diligent ones that follow shownotes)</p>\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/5002589/memory-leakage-in-event-listener\">Do click listeners leak memory?</a> [stackoverflow.com]</li>\n<li><a href=\"https://github.com/square/leakcanary\">Square's LeakCanary</a></li>\n<li><a href=\"http://www.androiddesignpatterns.com/2013/01/inner-class-handler-memory-leak.html\">How to leak a context - Handlers and inner classes</a> [androiddesignpatterns.com]</li>\n<li><a href=\"http://android-developers.blogspot.com/2009/01/avoiding-memory-leaks.html\">Avoiding Memory leaks</a> [android-developers.blogspot.com]</li>\n</ul>\n<h2>Contact:</h2>\n<ul>\n<li><a href=\"https://twitter.com/fragmentedcast\">@fragmentedcast</a> [twitter.com]</li>\n<li><a href=\"https://twitter.com/donnfelker\">@donnfelker</a> [twitter.com]</li>\n<li><a href=\"https://twitter.com/kaushikgopal/\">@kaushikgopal</a> [twitter.com]</li>\n</ul>\n",
    "EnclosureUrl": "https://cdn.simplecast.com/audio/20f350/20f35050-e836-44cd-8f7f-fd13e8cb2e44/2de30948-e0b3-4ba5-bc27-398adc3fe91e/024_tc.mp3?aid=rss_feed&feed=LpAGSLnY"
}