{
    "Id": "AE-9F-9B-E3-16-8C-83-9D-52-BB-AF-C2-3D-56-06-62-9F-D3-40-0B-83-3B-53-BA-A9-EF-D2-B5-82-EA-D5-71",
    "ContentSourceId": "425b36ab-3b93-42c9-8cbc-032e3bddb1d6",
    "Title": "Serializing Data With Python & Underscore Naming Conventions",
    "SourceUrl": "https://realpython.com/podcasts/rpp/187/",
    "Description": "<p>Do you need to transfer an extensive data collection for a science project? What&rsquo;s the best way to send executable code over the wire for distributed processing? What are the different ways to serialize data in Python? Christopher Trudeau is back on the show this week, bringing another batch of PyCoder&rsquo;s Weekly articles and projects.</p>\n<p>Christopher shares a tutorial by Real Python author Bartosz Zaczy\u0144ski called &ldquo;Serialize Your Data With Python.&rdquo; This comprehensive guide moves beyond XML and JSON to explore multiple data formats and their potential use cases. It&rsquo;s a deep dive into the topic and provides a thorough resource for future reference.</p>\n<p>We also discuss a Real Python tutorial about naming conventions in Python that use single and double underscores. The piece covers differentiating between public and non-public names in APIs, writing safe classes for subclassing purposes, and avoiding name clashes with keywords.</p>\n<p>We also share several other articles and projects from the Python community, including a couple of release announcements and news items, a discussion about never being taught how to construct quality software, building a small REPL in Python, using the <code>key</code> parameter in Python functions and methods,  a framework for RESTful APIs using Flask and SQLAlchemy, and a Rust-based HTML sanitizer for your Python projects.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Course Spotlight:</strong> <a href=\"https://realpython.com/courses/writing-beautiful-python-code-pep-8/\">Writing Beautiful Pythonic Code With PEP 8</a></p>\n<p>Learn how to write high-quality, readable code by using the Python style guidelines laid out in PEP 8. Following these guidelines helps you make a great impression when sharing your work with potential employers and collaborators. This course outlines the key guidelines laid out in PEP 8. It&rsquo;s aimed at beginner to intermediate programmers.</p>\n</div>\n<p>Topics:</p>\n<ul>\n<li>00:00:00 &ndash; Introduction</li>\n<li>00:02:47 &ndash; JIT Coming to Python 3.13</li>\n<li>00:03:13 &ndash; A copy-and-patch JIT compiler - Pull Request #113465</li>\n<li>00:03:54 &ndash; Django bugfix releases issued: 4.2.9 and 5.0.1</li>\n<li>00:04:24 &ndash; Single and Double Underscores in Python Names</li>\n<li>00:16:42 &ndash; Building a Small REPL in Python</li>\n<li>00:20:07 &ndash; The Key to the <code>key</code> Parameter in Python</li>\n<li>00:25:23 &ndash; Video Course Spotlight</li>\n<li>00:26:44 &ndash; Serialize Your Data With Python</li>\n<li>00:30:23 &ndash; You Are Never Taught How to Build Quality Software</li>\n<li>00:48:43 &ndash; flask-muck: RESTful APIs Using Flask and SQLAlchemy</li>\n<li>00:51:26 &ndash; nh3: Python binding to Ammonia HTML sanitizer Rust crate</li>\n<li>00:53:33 &ndash; Thanks and goodbye</li>\n</ul>\n<p>News:</p>\n<ul>\n<li><a href=\"https://github.com/brandtbucher/brandtbucher/blob/master/2023/10/10/a_jit_compiler_for_cpython.pdf\">JIT Coming to Python 3.13</a> &ndash; Slides related to the upcoming JIT commit for Python 3.13. Note that GitHub paginates the slides if you don&rsquo;t download them, so click the <em>More Pages</em> button to keep reading.</li>\n<li><a href=\"https://github.com/python/cpython/pull/113465\">A copy-and-patch JIT compiler by brandtbucher - Pull Request #113465</a></li>\n<li><a href=\"https://www.djangoproject.com/weblog/2024/jan/02/bugfix-release/\">Django bugfix releases issued: 4.2.9 and 5.0.1 - Weblog Django</a></li>\n</ul>\n<p>Show Links:</p>\n<ul>\n<li><a href=\"https://realpython.com/python-double-underscore/\">Single and Double Underscores in Python Names</a> &ndash; In this tutorial, you&rsquo;ll learn a few Python naming conventions involving single and double underscores (<code>_</code>). You&rsquo;ll learn how to use this character to differentiate between public and non-public names in APIs, write safe classes for subclassing purposes, avoid name clashes, and more.</li>\n<li><a href=\"https://bernsteinbear.com/blog/simple-python-repl/\">Building a Small REPL in Python</a> &ndash; Learn how to write your own REPL by building on top of the one that comes with Python. With a few lines of code, you can customize Python&rsquo;s REPL environment as your own.</li>\n<li><a href=\"https://open.substack.com/pub/thepythoncodingstack/p/the-key-to-the-key-parameter-in-python\">The Key to the <code>key</code> Parameter in Python</a> &ndash; A parameter named <code>key</code> is present in several Python functions, such as <code>sorted()</code>. This article explores what it is and how to use it.</li>\n<li><a href=\"https://realpython.com/python-serialize-data/\">Serialize Your Data With Python</a> &ndash; In this in-depth tutorial, you&rsquo;ll explore the world of data serialization in Python. You&rsquo;ll compare and use different data serialization formats, serialize Python objects and executable code, and handle HTTP message payloads.</li>\n</ul>\n<p>Discussion:</p>\n<ul>\n<li><a href=\"https://www.florianbellmann.com/blog/never-taught-qa\">You Are Never Taught How to Build Quality Software</a> &ndash; Learning how to build quality software isn&rsquo;t part of computer science education. How do we learn it?</li>\n<li><a href=\"https://news.ycombinator.com/item?id=38570261\">Hacker News discussion about the article</a></li>\n</ul>\n<p>Projects:</p>\n<ul>\n<li><a href=\"https://github.com/dtiesling/flask-muck\">flask-muck: RESTful APIs Using Flask and SqlAlchemy</a></li>\n<li><a href=\"https://github.com/messense/nh3\">nh3: Python binding to Ammonia HTML sanitizer Rust crate</a></li>\n</ul>\n<p>Additional Links:</p>\n<ul>\n<li><a href=\"https://pep8.org/\">PEP 8: The Style Guide for Python Code</a></li>\n<li><a href=\"https://realpython.com/python-magic-methods/\">Python&rsquo;s Magic Methods: Leverage Their Power in Your Classes \u2013 Real Python</a></li>\n<li><a href=\"https://web.stanford.edu/~ouster/cgi-bin/book.php\">A Philosophy of Software Design Book - John Ousterhout</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=bmSAYlu0NcY\">A Philosophy of Software Design - John Ousterhout - Talks at Google - YouTube</a></li>\n<li><a href=\"https://realpython.com/podcasts/rpp/49/\">Episode #49: The Challenges of Developing Into a Python Professional \u2013 The Real Python Podcast</a></li>\n<li><a href=\"https://adamj.eu/tech/2023/12/13/django-sanitize-incoming-html-nh3/\">Django: Sanitize Incoming HTML Fragments With <code>nh3</code></a> &ndash; Allowing users to input HTML in comments or blog posts is problematic and can lead to exploits on your site. For years, the Django community used <code>django-bleach</code>, but since its deprecation, Adam has been using <code>nh3</code>, a Rust-based HTML sanitizer.</li>\n<li><a href=\"https://pypi.org/project/nh3/\">nh3 \u00b7 PyPI</a></li>\n</ul>\n<p>Level up your Python skills with our expert-led courses:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/working-json-data-python/\">Working With JSON in Python</a></li>\n<li><a href=\"https://realpython.com/courses/writing-beautiful-python-code-pep-8/\">Writing Beautiful Pythonic Code With PEP 8</a></li>\n<li><a href=\"https://realpython.com/courses/pickle-serializing-objects/\">Serializing Objects With the Python pickle Module</a></li>\n</ul> <p><a rel=\"payment\" href=\"https://realpython.com/join\">Support the podcast &amp; join our community of Pythonistas</a></p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/files.realpython.com/podcasts/RPP_E187_02.b1244807c970.mp3"
}