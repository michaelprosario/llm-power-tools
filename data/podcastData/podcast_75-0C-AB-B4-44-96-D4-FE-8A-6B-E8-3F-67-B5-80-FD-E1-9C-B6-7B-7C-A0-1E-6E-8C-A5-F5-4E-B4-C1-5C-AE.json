{
    "Id": "75-0C-AB-B4-44-96-D4-FE-8A-6B-E8-3F-67-B5-80-FD-E1-9C-B6-7B-7C-A0-1E-6E-8C-A5-F5-4E-B4-C1-5C-AE",
    "ContentSourceId": "0891efb1-6e8d-4809-9706-8bb95c2d6ee9",
    "Title": "#152: The Five Pillars of Real Agile Improvement with Mike Cohn",
    "SourceUrl": "https://www.mountaingoatsoftware.com/agile/podcast/152-the-five-pillars-of-real-agile-improvement-with-mike-cohn",
    "Description": "<p>Join Brian and Mike Cohn as they unpack the five essential pillars that take Agile from &ldquo;just the motions&rdquo; to meaningful, measurable impact. Plus, get a behind-the-scenes look at their revamped course built for real team transformation. </p>\n\n<h2>Overview</h2>\n\n<p>In this episode of the <em>Agile Mentors Podcast</em>, Brian is joined by longtime collaborator and Agile thought leader Mike Cohn for a deep dive into what really makes Agile stick.</p>\n\n<p>They explore the five foundational pillars&mdash;mindset, practices, roles, teamwork, and support beyond the team&mdash;and share stories of what happens when teams get them wrong (like obsessing over story point math or demoing a copyright update in a sprint review). Along the way, they introduce the newly available Working on a Scrum Team public course and explain why it&rsquo;s designed for entire teams, not just isolated roles.</p>\n\n<p>Whether you&#39;re new to Agile or knee-deep in transformation, this episode will help you rethink how to build an Agile approach that actually works.</p>\n\n<h2>References and resources mentioned in the show:</h2>\n\n<p><a href=\"https://www.mountaingoatsoftware.com/meet-the-team/mike-cohn\">Mike Cohn</a><br />\n<a href=\"https://www.mountaingoatsoftware.com/agile/podcast/80-from-struggling-to-success-reviving-agile-teams-with-mike-cohn\">#80: From Struggling to Success: Reviving Agile Teams with Mike Cohn</a><br />\n<a href=\"https://www.mountaingoatsoftware.com/agile/scrum/roles/team\">Scrum Team Roles and Responsibilities</a><br />\n<a href=\"https://www.mountaingoatsoftware.com/training/courses/working-on-a-scrum-team\">Working on a Scrum Team Course</a><br />\n<a href=\"https://www.mountaingoatsoftware.com/training/schedule\">Mountain Goat Software Certified Scrum and Agile Training Schedule</a><br />\n<a href=\"https://www.mountaingoatsoftware.com/agile/podcast\">Subscribe to the <em>Agile Mentors Podcast</em></a></p>\n\n<h2>Want to get involved?</h2>\n\n<p>This show is designed for you, and we&rsquo;d love your input.</p>\n\n<ul>\n\t<li>Enjoyed what you heard today? Please leave a rating and a review. It really helps, and we read every single one.</li>\n\t<li>Got an Agile subject you&rsquo;d like us to discuss or a question that needs an answer? Share your thoughts with us at <a href=\"mailto:podcast@mountaingoatsoftware.com\">podcast@mountaingoatsoftware.com</a></li>\n</ul>\n\n<h2>This episode&rsquo;s presenters are:</h2>\n\n<p><a href=\"https://www.mountaingoatsoftware.com/meet-the-team/brian-milner\">Brian Milner</a> is SVP of coaching and training at Mountain Goat Software. He&#39;s passionate about making a difference in people&#39;s day-to-day work, influenced by his own experience of transitioning to Scrum and seeing improvements in work/life balance, honesty, respect, and the quality of work.</p>\n\n<p><a href=\"https://www.mountaingoatsoftware.com/meet-the-team/mike-cohn\">Mike Cohn</a>, CEO of Mountain Goat Software, is a passionate advocate for agile methodologies. Co-founder of Agile Alliance and Scrum Alliance, he thrives on helping companies succeed with Agile and witnessing its transformative impact on individuals&#39; careers. Mike resides in Northern Idaho with his family, two Havanese dogs, and an impressive hot sauce collection.</p>\n\n<h2>Auto-generated Transcript:</h2>\n\n<p>Brian Milner (00:00)<br />\nWelcome in, Agile Mentors. We&#39;re back for another episode of the Agile Mentors podcast. Thanks for joining us. I&#39;m with you, as always, Brian Milner. And today, I have the one and only Mike Cohn back with us. Welcome in, Mike.</p>\n\n<p>Mike (00:12)<br />\nThanks, Brian. Good to be here.</p>\n\n<p>Brian Milner (00:14)<br />\nAlways happy to have Mike on the show and really appreciate Mike making time to come on. Wanted to have Mike on because there&#39;s some things Mike&#39;s been talking about recently that are really interesting and people have been asking a little bit about this and I thought maybe it&#39;d be just a good opportunity to talk through some of the stuff that Mike&#39;s been writing about. I know you spent, Mike, a lot of time helping teams to not just do Agile but to really get solid results from it. to see impact from it. And I know the topic you&#39;ve been talking about recently is sort of these five pillars of supporting real agile improvements, the mindset, practices, roles, teamwork, and support beyond the team. So I thought maybe we could just dig in and drive through those and maybe learn a little bit about those as we go. Obviously also to talk a little bit about the exciting new course that&#39;s being launched here, the working on a Scrum team course, because I know that was originally just for private classes, right? And now it&#39;s being open to the public.</p>\n\n<p>Mike (01:23)<br />\nYeah, we&#39;ve done working on a Scrum team as a private class for probably 20 plus years. It&#39;s been kind of our main offering to private clients. But we&#39;re hearing from a lot of people that they have one team and they can&#39;t really get a private class approved with the budget and such. So what we&#39;re doing is going ahead and making that course available as a public course. So two people from your company, five people from another company all in the same class the way we&#39;ve done our certified courses for decades. And so we&#39;re going to start offering this as a public course. And the exciting thing there is that it&#39;s really meant to be a team-based class, where things like Scrum Master training, great class, but it&#39;s really meant for the Scrum Master, right? And working on a Scrum team is really designed, and you and I helped you and I design this course together, but it&#39;s designed to be something that is a whole team training, right? So good for anybody on a team.</p>\n\n<p>Brian Milner (02:16)<br />\nYeah, yeah, it&#39;s been really great teaching those in the private classes and I&#39;m excited to think about the public being able to come in and take that now. Let&#39;s talk a little bit about these pillars and, I think people are gonna be really intrigued by the concept here. The first one is mindset, I think, and just wanna start there and say, what does it actually mean to... think Agile and what is the found, why is that kind of the foundation for successful transformations?</p>\n\n<p>Mike (02:43)<br />\nRemember the kind of the early days of agile and there was a lot of conversation about could you be agile without understanding the principles, right? If you just did the practices, were you agile? Other people were saying, no, you have to start with the principles, right? And so do you start with principles? Do you start with practices? And I remember these early debates and they often devolved into a discussion of the karate kid movie, right? Remember that one, right? And, you know, can you just wax on?</p>\n\n<p>Brian Milner (03:12)<br />\nHa</p>\n\n<p>Mike (03:12)<br />\nfor long enough, just do the practices. And then all of a sudden, your karate instructor or your agile coach is, OK, you&#39;re agile. And it&#39;s like, wait, all I know how to do is wax a car, right? And so there were these discussions about practices versus principles. And I was kind of always on the side where you better understand the principles to do this. Just knowing the practices, waxing on all day, is kind of just going through the motions. And so you have to understand the principles. And the idea that I wanted was that if a team truly understood all of the principles underneath Agile, I don&#39;t just mean just the manifesto, but all the principles that are there from Lean, from Kanban, from everything, that if you really understood those, you&#39;d kind of invent the practices, right? You do those and you go eventually to go, hey, we should probably meet every day. Or hey, if we tested first, that might be a really good thing.</p>\n\n<p>Brian Milner (03:57)<br />\nYeah.</p>\n\n<p>Mike (04:05)<br />\nSo you&#39;d invent the practices if you really had that type of agile mindset. And so for me, when we&#39;re working with organizations to get them truly agile, and I don&#39;t mean like more agile than less agile, but agile in a way that&#39;s going to stick, you got to change mindsets, right? You&#39;ve got to do more than just the wax on. So people have to get the mindset.</p>\n\n<p>Brian Milner (04:27)<br />\nYeah, I love that. I know that I&#39;ve experienced some things in the course of working with people that&#39;s it&#39;s sort of like you, if you&#39;re not on the same page with the principles, then you start to talk through the practices and you run up against a problem. And really what you find out the core of it was, well, we weren&#39;t aligned on really the principle behind this. So why would I want the practices then, right? &#8275;</p>\n\n<p>Mike (04:49)<br />\nYeah. Well, that&#39;s where you also end up then with a lot of team debates about things, right? Because you&#39;re arguing about the practice. if you&#39;ll say you and I are arguing about the benefit of some practice, if we agree on the principle, we might just have different views on it. But deep down, we&#39;ll probably agree on some practice, or we might find an alternative one. But if you don&#39;t agree on the principles, you end up with a lot more of these kind of annoying. mean, team debates are great. I mean, I love.</p>\n\n<p>Brian Milner (04:54)<br />\nYeah.</p>\n\n<p>Mike (05:12)<br />\nyou know, having a team debate, arguing stuff like that, but not about pointless things, right? And not without some sort of foundation. They just kind of get in the way. It&#39;s just frustrating for everybody.</p>\n\n<p>Brian Milner (05:21)<br />\nYeah. Well, I&#39;m kind of curious, what kind of signs or signals do you think teams should look out for to kind of clue in and let them know that what might actually be going on here is more of a mindset issue?</p>\n\n<p>Mike (05:36)<br />\nthink sometimes it&#39;s when you hear the appeal to authority, right? Somebody says, you know, well, we got to do it this way because the scrum guide says, right? Or the one that annoys me is we have to do it this way because Mike Cohn says, &#8275; you know, that was like, no, I, somewhere else also said, think, right? Don&#39;t just, you know, don&#39;t just, you know, blindly do story points or something. Cause I say they&#39;re a good thing. I want you to think too.</p>\n\n<p>Brian Milner (05:50)<br />\nYou You</p>\n\n<p>Mike (06:01)<br />\nAnd so I think that kind of appeal to authority when teams are debating things. It&#39;s where we also see teams who think they&#39;re agile because they do a set of practices. We use a particular agile tool, so we must be agile. We do daily meetings. We must be agile. And those are not the things that make you agile. Those are artifacts of being agile. If you&#39;re agile, you&#39;re going to meet a lot. You&#39;re not going meet a lot, but you&#39;re going to talk a lot. Um, and so those are the artifacts of behaving in an agile way. And so I want to understand why we&#39;re doing those things. So I look for those kind of appeals to authority. Um, you know, emphasis on that type of stuff in an argument talking about how this is the right way saying there&#39;s only one right way to do something.</p>\n\n<p>Brian Milner (06:49)<br />\nYeah, yeah, that&#39;s great. How does working on the Scrum team deal with this? How does that address it?</p>\n\n<p>Mike (06:55)<br />\nWell, one of the things we do, it was actually one of my favorite exercises. We do this exercise at the start of the class where we ask people to kind of map out how the organization talks about certain adsel principles and then how does the organization behave. And so for example, if a company says, people are our greatest asset, and then they treat people like dirt, we&#39;ve got this kind of problem between what we say and what we do. And so I like to kind of map this out. And so we do this with the principles in the Agile Manifesto. And once we map those out and we start to see things that we say we value, but we don&#39;t behave that way, really helps us understand if we&#39;ve really embraced that mindset. Or are we just doing things because an Agile coach told us to, or a boss told us to, or we did it that way in our prior company. Those are all bad reasons to do something.</p>\n\n<p>Brian Milner (07:48) Y<br />\neah. So this is great. So I agree. The mindset&#39;s really foundational. And there is this symbiotic relationship between mindset and practices, which came first and which comes first, as we talked about. I know a lot of teams get stuck doing Agile, though, in really only name only. So when we talk about practices, what makes the difference between going through the motions?</p>\n\n<p>Mike (08:00)<br />\nMm-hmm.</p>\n\n<p>Brian Milner (08:11)<br />\nand actually doing things that work.</p>\n\n<p>Mike (08:13)<br />\nWell, practices is kind of our second pillar, right? You have to have the mindset, right? But you also have to have the practices that come from having that mindset. so, again, I try to think of that team on a desert island, right? And they&#39;re isolated from the world. They&#39;ve never talked to anybody, but they have an agile mindset. What practices are they going to invent, right? And I think those are kind of the core practices. We see a lot of problems with as an example, teams that misunderstand sprint planning. And I know when I first started teaching about sprint planning, I&#39;d have a slide up there to have a picture of a sprint backlog. And the sprint backlog listed tasks like code this, design this, test this. And then there were estimates next to code this. It&#39;s going to take four hours testing. It&#39;s going to take three. And so we were able see all these numbers and think the point of a sprint planning was these numbers. And Even in the early days of this, I was always saying, no, it&#39;s not about those numbers. It&#39;s about deciding what product backlog items you can pick. if taking a, I don&#39;t even want to call it an estimate, but taking a wild guess about, it probably can take four hours to code. If that helps you decide how many backlog items you can commit to, great, put those numbers up there. But it was never about the numbers. And it&#39;s one of the most common problems that I see with teams in sprint planning is they get obsessed with How many hours did we bring in? How many points did we bring in? And I remember one team I worked with where we did sprint planning. Having those estimates were helpful for them on their sprint back. They were helping. And we finished the meeting. And we&#39;re using Google Sheets in a meeting to do this. We&#39;ve got a row with the estimates in there. And as we start to wind down the meeting, I deleted that column that they&#39;d spent so much time talking about. They&#39;re all kind of pissed off at me. Why&#39;d you delete that? We spent all this time talking about it. I said, because we got the benefit, right? You got the benefit of those numbers. The benefit isn&#39;t a week from now remembering that you said five hours, because it&#39;s going to take what it takes. The benefit was the discussion that it led to of can we take more or are we already full? So I see teams get obsessed with that. This is one example, but that&#39;s one of the problems with sprint planning as a practice.</p>\n\n<p>Brian Milner (10:25)<br />\nYeah. Yeah. I think you&#39;re absolutely right. And that&#39;s one of the things I know I&#39;ve talked about with people going through the course is sort of understanding the purpose behind the things. Just going back to, know, harkening back to what you said about, don&#39;t just do it because someone told you, you know, understand why the purpose behind it. And, know, otherwise we, I&#39;m sure we&#39;ve all had that experience before where someone just tells you to do something and says, you know, why? Cause I told you so, you know, that, that doesn&#39;t, that&#39;s not very convincing.</p>\n\n<p>Mike (10:52)<br />\nThanks, Mom.</p>\n\n<p>Brian Milner (10:53)<br />\nRight, right, thanks mom. Yeah, not very convincing, but it&#39;s much more convincing when they can tell you, well, no, you do this because this is what we&#39;re trying to do. And I think you&#39;re right, that makes all the difference there. &#8275;</p>\n\n<p>Mike (11:05)<br />\nIt just, don&#39;t know anybody that responds well to being told what to do, right? My instant reaction is no, right? mean, you it could be, you know, a really, you it could be a really good thing. Eat more vegetables, you spend more time outside. No, right? Don&#39;t tell me what to do. So.</p>\n\n<p>Brian Milner (11:09)<br />\nRight. Right. Yeah. It&#39;s almost like our default response is no until you convince me. Are there other common practices? We talked about sprint planning. Are there other kind of practices you see teams struggle with?</p>\n\n<p>Mike (11:28)<br />\nYeah, yeah, for a lot of people. think a huge one is product backlog refinement. I don&#39;t know what a better word would be than refinement. refinement is about making the backlog better. It&#39;s not about making it perfect. And I see teams that get stuck on backlog refinement and feel like they have to resolve every open issue, that everything has to be tiny and answered and buttoned up before we can start a sprint. And that&#39;s not the case. For me, the goal in refinement is to make sure things are small enough and sufficiently well understood. I don&#39;t want to bring in a backlog that&#39;s bigger than my velocity. If our velocity is 25, I don&#39;t want bring in a 50-point story. how about the problems of a 50-point story anyway? But I don&#39;t want to bring in some massive epic like that into a sprint. And so refinement is about making it small, making sure it&#39;s sufficiently well understood. Sufficiently well understood, not perfectly. And so</p>\n\n<p>Brian Milner (12:18)<br />\nYeah.</p>\n\n<p>Mike (12:28)<br />\nThe problem is these teams, and I know you&#39;ve seen this, but teams who get in there, want to resolve every open issue. It&#39;s like, no, we can resolve that during the sprint. If we think about the goal and planning to make sure we know what to bring into the sprint, not too much, not too little, we&#39;re fine just enough that you&#39;re at that point. Is the button blue or red? Who cares? If it&#39;s a log in story, we&#39;re going to lock people out after some number of failed attempts. Who cares how many? Figure that out during the sprint. If it&#39;s five or three or eight, who cares? Figure that out later. So I think refinements won. Another big one would be reviews, &#8275; where sometimes teams demo too much in a sprint review. And they feel like they have to justify their existence, show everything you did during the sprint. And the most egregious example of that was this was a handful of years ago. But I literally remember a team showing</p>\n\n<p>Brian Milner (12:58)<br />\nYeah. Yeah.</p>\n\n<p>Mike (13:18)<br />\nhow they had updated the copyright notice on the footer of the web page, know, copyright, you know, whatever year our company, right? And it&#39;s like, my God, you didn&#39;t need to show that to stakeholders, right? We all either know there&#39;s a copyright notice on the bottom of the web page or we&#39;ve seen one before. I don&#39;t need you to bring it up and scroll down to it. Now only took 15 seconds of the meeting, but that was 15 seconds of people&#39;s lives. They were never going to get back. you know, show stuff that you need feedback on, right? If you&#39;d...</p>\n\n<p>Brian Milner (13:41)<br />\nRight.</p>\n\n<p>Mike (13:45)<br />\nYou fixed a bug and you fixed it only way it could be fixed. Mention it perhaps, but you don&#39;t need to show it, right?</p>\n\n<p>Brian Milner (13:51)<br />\nYeah, yeah, know teams I&#39;ve been on often it&#39;s just it&#39;s suffice it to have a list sometimes and just say here&#39;s a list of things if you want to know more about these come talk to us but we&#39;re move on to the stuff you care about.</p>\n\n<p>Mike (14:02)<br />\nYeah, I always have like a will show, will not show list. you know, I often, if I&#39;m writing the meetup present, that&#39;ll put that up on Zoom or, you know, show it on a screen if we&#39;re in person. And often somebody wants to see something that&#39;s on the will not show list. Or they just want me to describe what bug was that again? What was that? You know, and I&#39;ll explain it really quickly. But if nobody wants to see it, don&#39;t bother showing it. So.</p>\n\n<p>Brian Milner (14:26)<br />\nYeah, I know we talk about these scrum practices quite a bit in the working on the scrum team class, but if someone signed up to take this class, what can they expect to hear or what can they expect to learn about these practices in the course?</p>\n\n<p>Mike (14:39)<br />\nWell, I think one of the things that you and I did together in creating the newest version of the course was to look at what do you actually need to practice doing, and it&#39;s feasible to practice doing in a classroom setting, versus what should you just kind of talk through. And not everything needs to be practiced to get the hang of it, right? Everybody in the world has taken something big and split it up into smaller things before, right? I need to make. spaghetti dinner tonight. What do need to buy? Right? OK. Well, that&#39;s that&#39;s that&#39;s test decomposition by noodles, by sauce, by tomatoes. Let&#39;s make it from scratch. Right. By some garlic. Right. So everybody in the world has done decomposition. We&#39;ve broken a big thing into small things. And I remember, you know, iterating over I&#39;m still on sprint planning, I guess. But I remember iterating over exercises in sprint planning and in courses over the decades by now. And I would have one where you&#39;re planning a party for your kid, break it down into tasks. It&#39;s like, nobody learns anything from this. And so that&#39;s one where I&#39;d rather say, OK, this problem occurs in sprint planning. How could you solve it? Other things like, let&#39;s say, splitting user stories or splitting job stories, that&#39;s a skill worth practicing together, getting feedback on. And so those type of things we try to practice in the course. other things we just talk about. mean, I&#39;m curious on your thoughts on that. What do you think about some things being worth practicing, some things worth being better talked about?</p>\n\n<p>Brian Milner (16:01)<br />\nYeah, I agree. I agree fully. it&#39;s, it&#39;s, you know, there&#39;s some things, it&#39;s kind of like what you said before, there&#39;s some things that&#39;s not worth spending the time on, and it&#39;s better to just have a discussion and move on.</p>\n\n<p>Mike (16:13)<br />\nYeah. Yeah. I guess that&#39;s one of the things we always talked about. We always talked about return on investment of the exercise. What&#39;s the return on the exercise? And if you&#39;re going to have a one hour exercise, cool. One hour exercise. But it better have a pretty healthy return because that&#39;s a lot of time in class. And so what&#39;s the return on exercise? Is this worth a practice? Is it worth just a discussion? And if we can discuss two hard problems and give people advice on two common problems, they&#39;re probably going to face.</p>\n\n<p>Brian Milner (16:21)<br />\nYeah.</p>\n\n<p>Mike (16:41)<br />\nMight be better than spending 20 minutes practicing something that they&#39;ve probably done before.</p>\n\n<p>Brian Milner (16:45)<br />\nYeah, I completely agree. Let&#39;s move to the third pillar then, because I know this is a big one, just thinking and talking about the roles. And just as far as communication issues are concerned, even outside of Scrum, I know that&#39;s part of the big problem with teams and organizations just not being clearly defined about who does what and who&#39;s responsible for each thing. So those misunderstandings are really common failure points. &#8275;</p>\n\n<p>Mike (17:09)<br />\nMm-hmm.</p>\n\n<p>Brian Milner (17:10)<br />\nHow do you see teams getting that wrong and how&#39;s that derailing a Scrum team?</p>\n\n<p>Mike (17:15)<br />\nWell, think we see it all the time on Scrum teams between Scrum Master and Product Owner and even the development team, right? Who does what? I was responding to some comments on LinkedIn this morning on some post I&#39;d made last week and somebody had some comments. And it had to do with whether the Scrum Master or Product Owner does something. And it was interesting because in the comments on that post, I... I don&#39;t remember which one it was, but I shared a certain perspective. I feel pretty strongly that I have it right. I mean, I this is how we do it. But there were other people saying the opposite, right? And so, you know, these are people that are probably fairly experienced with Scrum, if they&#39;re following me on LinkedIn and feel comfortable commenting on a post, probably feel comfortable with it. And so there&#39;s a lot of confusion about what role does what thing. And I don&#39;t think this is something where the Scrum guy is going to have the answers for you. I think it&#39;s, I mean, you can look at the Scrum guy, oh, this. Here&#39;s my starting point answer, but we always want to play to people&#39;s strengths, right? And if you&#39;ve got a scrum master who&#39;s got a lot of skill in one area, maybe they shift a little work from the PO to themselves, right? With the PO&#39;s permission, right? And the opposite, right? Between maybe PO and team. So it&#39;s fine to have default starting positions on who does what, but you always want to play to people&#39;s strengths. So I think PO scrum master, I think we see it with project managers and scrum masters, roll confusion on those type of roles as well.</p>\n\n<p>Brian Milner (18:38)<br />\nYeah, completely agree. A lot of those roles that are not named Scrum team roles and how they interact with the team, that&#39;s often a source of confusion as well. What are maybe some signs or symptoms that teams might be having confusion or problems in this area that maybe they don&#39;t even recognize or realize they&#39;re having an issue with roles?</p>\n\n<p>Mike (18:59)<br />\nAny sort of conflicts, right? You know, you and I arguing over which one of us should do something. The other one would be kind of the opposite, which would be like a dropped ball. I was watching some YouTube video. I love baseball. I was watching some YouTube video the other day of like missed catches or something like that. And some team hit a baseball way up in the air and it was landing near three players, right? Three players are all looking at it.</p>\n\n<p>Brian Milner (19:12)<br />\nYou</p>\n\n<p>Mike (19:23)<br />\nOne guy waves the other two off, he&#39;s going to catch the ball and he must have been blinded by the sun because he&#39;s like six feet from the ball when it lands on the ground, right? And, you know, if we have a responsibility to catch the ball, run this meeting, right, right the backlog, the kids dropped, right? And so I think either arguing over who does something, two of us trying to do the same thing or neither of us doing it. I don&#39;t mean trying to get out of the work, right? All three players have been happy to catch the ball, but I think you&#39;ve got it. You think I&#39;ve got it, right? Those type of things are pretty good signs. think getting clarity around these roles can really optimize how a team works. And I think a really key thing here is that it changes over time. So I&#39;ll go back to my example of maybe the Scrubmaster has some skills that can help the product owner early on. Because maybe the product owner is new to the company. The product owner doesn&#39;t know the product as well. So they might rely on the Scrubmaster for guidance on things. Well, a year from now, we might shift responsibilities a little bit because now the PO is the expert on all things related to the product. So it&#39;s not like we want to establish clarity on roles one time and leave it forever. It&#39;s going to change. We get a new tester on the team, things might change. Product owner moves. It&#39;s going to change again. So we need to realize these responsibilities are dynamic.</p>\n\n<p>Brian Milner (20:39)<br />\nYeah, that&#39;s a great point. Your point about baseball just made me think about how, when you watch any youth sport in the world, when you go watch your kids play a sport, what&#39;s the one thing you always hear people scream from the sideline? Talk to each other. Call the ball. Well, that too. That too. Ump your blind. Those kinds of things. Well, let&#39;s talk a little bit about</p>\n\n<p>Mike (20:52)<br />\nI thought you were going say, put my kid in.</p>\n\n<p>Brian Milner (21:00)<br />\nI know this course addresses the roles and how would you say this course really helps address that issue of role confusion?</p>\n\n<p>Mike (21:07)<br />\nthink a big part of it is that we designed it to be for everybody on the team, right? Suppose you send a scrum master to a class, and it&#39;s a great class. Scrum master is going to back to the certain set of impressions about their role. Product owner goes to an equally good class about the product. They might have different impressions. Even if they took the course from the same instructor, they&#39;re hearing it a little differently. They&#39;re hearing it through their filters, right? And so when they&#39;re in a course together, there&#39;s more opportunities to clarify their understanding about those things, especially in the classes designed as we did with this one to bring out some of those differences. So I think the course helps with that. we&#39;ve also designed it to mention the rules we haven&#39;t talked about, like managers and things like that.</p>\n\n<p>Brian Milner (21:53)<br />\nYeah, yeah, I think those are so important. And there&#39;s a lot of great discussions that come out when we have those topics. &#8275; Let&#39;s talk about the fourth pillar then, teamwork, because this, I think, builds really well on what we just talked about. And the idea that there&#39;s actually, Scrum is a team sport. &#8275; So beyond just normal human personality conflict type issues, what do you see that gets in the way of teams actually</p>\n\n<p>Mike (21:58)<br />\nMm-hmm. Mm-hmm.</p>\n\n<p>Brian Milner (22:18)<br />\nworking as a team.</p>\n\n<p>Mike (22:19)<br />\nthink ego is probably one, right? I can do everything better, just leave me alone. There&#39;s an old book that says basically, beware of a lone developer in a room, right? You know, it was referring to the developer who wants to close their door and say, I&#39;ll it done in a month, trust me, right? And one of the companies I worked with, and this one&#39;s going back like 15 years ago, but it was a really good story.</p>\n\n<p>Brian Milner (22:36)<br />\nYeah.</p>\n\n<p>Mike (22:43)<br />\nis they would literally grab one unit of work. Each person on the team would grab a unit of work and take anywhere from three to 12 months to do the thing. So they were big things, but the person would do everything on it. They&#39;d coded, tested everything. And the organization was putting out very little because of this. When they moved to Scrum in the first year, by their estimate, they said they delivered 540 % more work. over five times the amount of new features delivered. And that was through the collaboration, through the short iterations, those type of things. But it was about getting people to collaborate more. So I think there&#39;s huge opportunities to do that. One of the problems I see is when we don&#39;t overlap work. If we think about that organization I just described, you grab your thing, you&#39;re done in six months. I grab mine, I&#39;m done in seven months. If we&#39;d work together on those things, what&#39;s not make us any faster? No faster. But you and I could have worked on your one thing and been done in three months. OK, we&#39;re delivering value in three months, right? And so one of the things I look for a lot is how much teams are overlapping work, right? And if we&#39;re not overlapping work, there&#39;s huge opportunities to improve at that. I&#39;ll a little example of this. One of my favorite restaurants is, I don&#39;t know, barely call it a restaurant. It&#39;s a fast food deli. It&#39;s called Jimmy John&#39;s. Have you been to Jimmy John&#39;s, Yeah. Yeah, there&#39;s one near my house where I can go there and the wine will be out the door. Right. And you know, normally you see a wine out the door and it&#39;s like, crap, I&#39;m going somewhere else. Right. These guys are so fast. They&#39;re so fast. When I get to the front, I place my order. I play this little game of can I fill up my cup? You know, I get an iced tea and they give me an empty cup and can I go fill up ice and put the tea in before they hand me my sandwich? And it&#39;s about 50-50. Right. It doesn&#39;t take long to fill up your iced tea. But the way they do that is the overlap work. As soon as I order my Italian club sandwich, somebody&#39;s already got the bread open, somebody&#39;s got a slab of meat they&#39;re ready to drop on there, somebody else has their hands over the vegetables and they&#39;re dropping the vegetables on there, and then a fourth person wraps it up. And so like four or five people touch my sandwich. Hopefully their hands are clean, but four or five people touch my sandwich as opposed to like most delis where I go and it&#39;s like you watch one person plod along making the sandwich, right? Overlap work is huge.</p>\n\n<p>Brian Milner (25:07)<br />\nYeah. Yeah, this episode sponsored by, no, just kidding. Use code Mike Cohn when you go to, no, just kidding. Yeah, I agree. And yeah, yeah, I&#39;m familiar with Jimmy John&#39;s. Probably too familiar. &#8275; Yes, yeah, no, that&#39;s, I think that&#39;s part of their shtick is that they&#39;re, you know, they&#39;re known for being fast. So yeah.</p>\n\n<p>Mike (25:10)<br />\nYou Is yours just as fast? Yeah. Yeah. They call it Freaky Fast. They actually have a competition. I&#39;ve seen YouTube videos of this where they get like the best teams at various restaurants race, right? And so they have like the Jimmy John sandwich making Olympics or something, but it&#39;s a skill.</p>\n\n<p>Brian Milner (25:36)<br />\nwow, wow, yeah. You should pair that up with the hot dog eating challenge in some way and see if we could have a team sport going there. &#8275;</p>\n\n<p>Mike (25:48)<br />\nWell, that&#39;s a good point because think about the hot dog eating. That&#39;s one guy, right? That&#39;s Joey Chesnett shoving hot dogs down. The Jimmy Johns is a team. They get the best crew at a restaurant and it&#39;s a team, right? How fast can the team go? Not how fast can one guy make a sandwich, right?</p>\n\n<p>Brian Milner (25:51)<br />\nYeah. Yeah, yeah. That&#39;s awesome. So what are some tips? What are some ways that you can really unite a team, especially those new teams? Because that&#39;s the fascination point for me is, how do you take this group of humans that really don&#39;t know each other and haven&#39;t worked together in the past and unite them together and have them gel as a team? How do you do that?</p>\n\n<p>Mike (26:21)<br />\nI&#39;ll give you a couple. One, I think having really crisp sprint goals helps. So we all know exactly what we&#39;re trying to get done in the sprint. We don&#39;t lose sight of that because sometimes in the middle of a sprint, you lose sight of it. And you get myopic and you just focus on a list of tasks. And I&#39;m going to say that it&#39;s probably similar to the team doing sprint planning and just getting them assessed with the numbers. It&#39;s not about the numbers. It&#39;s not about the tasks. It&#39;s about the backlog items that lead to some goal. So crisp sprint goals help. That&#39;s a hard phrase. Crisp Sprinkles helps. The other one I&#39;d say is having a shared vision about where you&#39;re headed over a little bit longer term. Probably the biggest change to the Scrum Guide ever that I&#39;ve liked is the inclusion of a product goal. And that was something I&#39;d been talking about forever. mean, literally since I started doing Scrum was that sprinkles are great, but they&#39;re pretty short, right? You want to have something bigger.</p>\n\n<p>Brian Milner (26:52)<br />\nIt is.</p>\n\n<p>Mike (27:14)<br />\nAnd so I like having product goals that are a few months out there. And one of the things I like doing for product goals is have teams do something like write a press release that describes their goal or create a vision in some way, write a review that you want to see come out on the App Store, Play Store, and a magazine. And one of my clients made software and they were reviewed by a major magazine and they were given an editor&#39;s choice runner up award. And they actually estimated that being runners up for that was probably worth about $10 million. First place, first time was worth about $10 million a year to them. And so they decided to get serious about this and they wrote a review. Their scrum master, she was actually combo scrum master product owner, Erin. She had the team write a review and she said, let&#39;s go earn this review. And I literally remember the email I got from her three months later. It was because it was Halloween night. I just like, you know, brought in the candy from outdoors. We&#39;re done trick or treating. And I checked my email. I a three word email from her from Erin. said we did it. And the magazine had let her know, hey, we&#39;re reviewing you. be out on, you know, like Tuesday&#39;s edition. And the review had quotes in there that were from their vision review, right? The things that they had wanted to achieve.</p>\n\n<p>Brian Milner (28:22)<br />\nHa ha.</p>\n\n<p>Mike (28:35)<br />\nAnd that team had just really jelled around that and just became so much more productive and collaborated so much better because of that shared vision.</p>\n\n<p>Brian Milner (28:43)<br />\nYeah, that&#39;s amazing. getting back to the course then, I know in the course we&#39;re trying to kind of some of those collaboration muscles. What are some of the ways that the course helps to build that?</p>\n\n<p>Mike (28:56)<br />\nthink one of the key things that we&#39;re doing, and I&#39;m excited about this, is that we&#39;re, you know, we of course use Zoom breakout rooms, right? You you go talk about this, we&#39;ll see you in eight minutes or something like that. And for this course, we&#39;re doing something where a group of three or more, when they register, can have a private breakout room. And this to me is exciting because people get the benefit of having a private breakout room. They can have sensitive discussions if they want. They can talk very specifically about. you know, what do we do about our jerk product owner? mean, whatever it is, right? You know, they can talk about their specific issues, yet have the context of a broader class. Because I think in one of the benefits of any public class is hearing how other teams are doing things. And sometimes that&#39;s because you get a good advice, you know, how did you solve that problem? We have that problem. Other times, it&#39;s just feeling that you&#39;re not alone in the world. they&#39;ve got that problem too, right? And they don&#39;t have any solution for me, but I know I&#39;m not alone in the world with this. And so I like these private breakout rooms for three or more. I think it&#39;s a novel thing we&#39;re doing with this class. And it&#39;s with the intent of combining the best of both worlds of private and public training for this. I&#39;d the other thing is probably consistency, having everybody on the team hear the same message, having those discussions with an experienced instructor like you or me in the room to provide guidance when they have questions. know, go back to the role clarity, right? You know, they can talk about it and they&#39;re there. Then they&#39;re back in the main room with you or me and we can kind of answer questions. So I think that consistency will be huge as well.</p>\n\n<p>Brian Milner (30:25)<br />\nYeah, yeah, I love that idea of the private private breakout rooms that that&#39;s that&#39;s gonna be huge for a lot of people I know. &#8275;</p>\n\n<p>Mike (30:31)<br />\nI&#39;m excited to try it with this. This will be the first classes we do that for. I&#39;m excited about it.</p>\n\n<p>Brian Milner (30:36)<br />\nYeah, yeah. Well, let&#39;s bring it home then and talk about the fifth pillar because the fifth pillar is really interesting as well. It talks about support beyond the team and teams can only do so much. Every team struggles when they&#39;re not supported well. And there&#39;s lots of studies that show leadership support is one of the biggest hurdles or obstacles to the adoption.</p>\n\n<p>Mike (30:46)<br />\nMm-hmm.</p>\n\n<p>Brian Milner (30:59)<br />\nWhat does that support look like from outside the team and how can a team influence that?</p>\n\n<p>Mike (31:06)<br />\nYeah, if you&#39;re trying to be agile and your HR group has quarterly reviews of personnel that are all based on individual performance and has nothing to do about teamwork in there, it&#39;s going to be hard to focus on collaboration. So we have to kind of fix these issues. I think what we have to do here is to have team members educate those outside the organization. And we have information that we share about, you here&#39;s how to talk to a boss that&#39;s maybe mandating deadlines, things like that. And so we try to coach people through having some of those challenging conversations. And one of things I want teams to do is kind of become an example of what good agile looks like. And if you have a team that&#39;s excelling with agile and they&#39;re doing it from a kind of principles first, that mindset first approach. You&#39;re going to see other groups look at that and let&#39;s say the marketing group. They&#39;re going to look at that go, hey, that&#39;s an interesting way to work. I wonder how we could do that, right? And it&#39;s going look different for a marketing group than a tech team. the mindset is going to be the same. Principles will still be the same. And so when we get teams to do really well with this, other parts of the organization start to get interested. And then they stop being as much in our way.</p>\n\n<p>Brian Milner (32:20)<br />\nYeah. I know one of the most important aspects here and that we talk about is, is that you don&#39;t need to, to wait, right? If you&#39;re the team level, you don&#39;t have to just sit around and wait for the organization to make changes. you, you have opportunities to make changes as well. So how does that happen? How&#39;s the team change, you know, bring about those changes that, improve the agile process, the results.</p>\n\n<p>Mike (32:42)<br />\nI think that&#39;s by being the example so that people see it. I think it&#39;s by having those conversations. You know, one of the things that we&#39;ll get is, you know, it&#39;s so common is the product owner that wants to change their mind all the time. I was reading something, I guess this is in our Agile mentors community, I think is where it was, but it was about the, you know, the product owner who said his favorite thing about Agile is that he can reprioritize every week. &#8275; And it&#39;s like, you can, you know.</p>\n\n<p>Brian Milner (33:05)<br />\nHmm. Yeah</p>\n\n<p>Mike (33:10)<br />\nI&#39;m not sure it&#39;s good. And I think about that, a team gets momentum, right? And you&#39;re working on a certain feature. Next sprint, it would be nice to work in that same area of this system, right? Your head&#39;s there. Just kind of keep going a little bit. And I&#39;ve often described this as like, let&#39;s say you&#39;re working on three backlog items that are in a certain area of this system. Let&#39;s make it concrete. Let&#39;s say it&#39;s the spell checker in Microsoft Office, right? And you do three backlog items related to the spell checker this sprint. Next sprint, maybe your top priority is not more spell checker stuff, but maybe items, I don&#39;t know, 25, 26, and 27 on the backlog are still in the spell checker. You know what? It might be better to do those. There are probably two or three sprints away. Let&#39;s bring them into this sprint. Just get them done while my head&#39;s into spell checking. And so getting product owners or stakeholders to stop doing that, one of the ways that I like to talk about doing that is using an example of ordering a meal at a restaurant. I can order, let&#39;s say, the chicken entree. And then as the waiter is taking the orders around the table, I change from chicken, no, bring me the fish. Not a big deal. The waiter is going to cross off chicken and write down fish. If the waiter goes away, brings me back my salad, and I change my mind then, I say, hey, bring me the fish. Might not be a big deal. It&#39;s going to be a big deal if I&#39;ve already taken three bites of the chicken. right? Or if he brings me the chicken. So yeah, we can change our mind, but there&#39;s a cost, right? And we want to educate stakeholders about that cost. They don&#39;t overdo it.</p>\n\n<p>Brian Milner (34:31)<br />\nYeah. Yeah. Well, speaking of the leaders and the organization, managers, leaders, do you think this course is appropriate for managers and leaders to attend as well? you feel like they might need to in order to really have this be an impact?</p>\n\n<p>Mike (34:55)<br />\nYeah, that&#39;s a good question. Is it appropriate? Yeah, I think it&#39;s appropriate. When we do this privately, we&#39;ve had plenty of leaders and managers attend. I think it&#39;s great. I don&#39;t think that&#39;s required because they&#39;re not on the Scrum team. You said the name of the course is working on a Scrum team. And so they&#39;re not on the Scrum team. They benefit by knowing more how their Scrum team works. But I think what we found is that having just a key subset of people who hear the same message work through the training together, and then go back to the organization. That&#39;s enough to bring the passion, conviction, and skills that we want. So we don&#39;t truly need leaders. They&#39;re great. I would never talk a leader out of going, but I wouldn&#39;t. If I were a team and I could take the class this month or with my leader next month, I would just get the class done, right? And educate the leader afterwards.</p>\n\n<p>Brian Milner (35:41)<br />\nYeah. Yeah, yeah, I think that&#39;s a good plan. All right, well then we&#39;ve made our way through the five pillars and for people who have come this far with us and are at this point, if they&#39;re listening and they&#39;re recognizing some of these problems we&#39;ve been talking about, what would you recommend to them as next steps here?</p>\n\n<p>Mike (35:49)<br />\nif Well, take a look at our website. If you go to mountaingoatsoftware.com. And then I think there&#39;s a courses link on the top. You can go up there and find the link to this course. It&#39;s an exciting one that we&#39;re doing. I&#39;ve literally been teaching this, I think the first time I taught a class called Working on a Scrum Team was 2003 or 2004. it&#39;s a time tested course. You and I kind of redesigned it a couple of months ago to make it appropriate for public. or little better just in general and more appropriate for public. But it&#39;s a time-tested course that&#39;s now designed to be available for public settings instead of, you know, have to have 25 people or something.</p>\n\n<p>Brian Milner (36:36)<br />\nYeah, yeah, that&#39;s really exciting. I can&#39;t wait to see kind of how people are in, you know, react and interact in the course to some of these concepts and ideas. And we&#39;ll, we&#39;ll of course link to all these things that we&#39;ve talked about in our show notes and make it easy for everyone to find the course listing and, and, you know, where the dates and everything that we&#39;re going to offer them. So make sure to check that out. Mike, thanks so much for coming on. This has been really enlightening and I appreciate you making time for it.</p>\n\n<p>Mike (37:01)<br />\nOf course, thanks for having me, Brian. Always a pleasure.</p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/traffic.libsyn.com/7c85d77f-daac-40a5-946e-5f80246dd808/AMP154.mp3"
}