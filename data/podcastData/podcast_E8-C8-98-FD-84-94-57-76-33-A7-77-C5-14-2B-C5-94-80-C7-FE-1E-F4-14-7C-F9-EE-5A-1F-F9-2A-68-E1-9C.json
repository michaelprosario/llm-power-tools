{
    "Id": "E8-C8-98-FD-84-94-57-76-33-A7-77-C5-14-2B-C5-94-80-C7-FE-1E-F4-14-7C-F9-EE-5A-1F-F9-2A-68-E1-9C",
    "ContentSourceId": "ee3f8f9f-8c83-488e-aada-ce09bc743a17",
    "Title": "Ready to optimize your JavaScript with Rust?",
    "SourceUrl": "https://stackoverflow.blog/podcast/",
    "Description": "<p>Webpack has been king for several years. Vercel wants folks to embrace Turbopack, but their claims about speed raised a lot of backlash after it was first announced. Lee explains why he thinks the Rust-based approach will ultimately be a big benefit to developers and how organizations who are deeply ingrained with existing tools can safely and incrementally migrate to what is, for now, a very Alpha and experimental release.\u00a0</p><p>We go over the routing and rendering updates in Next.JS 13, exploring where it might offer developers more flexibility and the ability to use React server components to ship less, maybe a lot less, JavaScript. As Lee says in the episode:\u00a0</p><p><i>\u201cSo to your point about wanting to ship less JavaScript, that was a kinda fundamental architectural decision of where we headed with the app directory. And the core of this is because it's built on React server components.\u00a0</i></p><p><i>The key thing with React server components is that as your application grows in size from one component to a hundred thousand components, the amount of client-side JavaScript you send can be exactly the same. It can be constant because you can render every single component on the server.\u00a0</i></p><p><i>And that's a lot different from the world of React applications today, where every new component you add for data fetching or just putting some HTML on the screen also adds additional client-side JavaScript.</i></p><p><i>So this is kind of inverting the default, back from the client to be server first. Now, of course, we still love client-side interactivity that React provides making really interactive and rich UI experiences, but the default for data fetching or just getting HTML to the browser happens from the server, and that's gonna help us reduce the amount of JavaScript.\u201d</i></p><p>You can learn more about Lee on his <a href=\"https://docs.google.com/document/d/1mPWX3lpxiLvRRbgoGJFDqyHc1OVBvwc_3uWDIAEjko8/edit?usp=sharing\">website</a>, <a href=\"https://www.linkedin.com/in/leeerob/\">LinkedIn</a>, and <a href=\"https://twitter.com/leeerob?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor\">Twitter</a>. To diver deeper into his take on how Rust will impact the future of Javascript, check out a post he wrote <a href=\"https://leerob.io/blog/rust\">here</a>.</p>\n",
    "EnclosureUrl": "https://pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/eb9346b7-d32d-456e-b6ea-f90036ffa0c7/audio/128/default.mp3?aid=rss_feed&awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b&awEpisodeId=eb9346b7-d32d-456e-b6ea-f90036ffa0c7&feed=XA_851k3"
}