{
    "Id": "2F-04-98-ED-22-79-AD-4B-6F-11-C4-9E-1C-17-2E-A1-A0-1C-54-A7-C0-39-30-A3-B1-C7-EF-D3-FF-CD-A5-9B",
    "ContentSourceId": "425b36ab-3b93-42c9-8cbc-032e3bddb1d6",
    "Title": "Advanced Python Import Techniques and Managing Users in Django",
    "SourceUrl": "https://realpython.com/podcasts/rpp/19/",
    "Description": "<p>Would you like to clearly understand what&rsquo;s happening when you use the Python import keyword? Do you want to use modules more effectively to structure your code? Or maybe you&rsquo;re ready to move to the next level with your Django project by adding user management. This week on the show, David Amos is back with another batch of PyCoder&rsquo;s Weekly articles and projects.</p>\n<p>We discuss a Real Python article about advanced techniques and tips for using the Python import keyword. David also talks about another recent article on the site about managing users in Django. We cover several other articles and projects from the Python community including: robot programming in Python, f-strings vs .format(), the rise of Python malware, a hardware Python keyboard, and more.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Course Spotlight:</strong> <a href=\"https://realpython.com/courses/intermediate-project-ideas/\">Grow Your Python Portfolio With 13 Intermediate Project Ideas</a> </p>\n<p>Get started on 13 Python project ideas that are just right for intermediate Python developers. They&rsquo;ll challenge you enough to help you become a better Pythonista.</p>\n</div>\n<p>Topics:</p>\n<ul>\n<li>00:00:00 &ndash; Introduction</li>\n<li>00:01:31 &ndash; The Non-Return of the Python print statement</li>\n<li>00:05:46 &ndash; Python Malware on the Rise</li>\n<li>00:13:46 &ndash; Get Started With Django Part 2: Django User Management</li>\n<li>00:19:01 &ndash; Why Do People Use .format() When f-Strings Exist?</li>\n<li>00:27:41 &ndash; Video Course Spotlight</li>\n<li>00:28:45 &ndash; A Beginner&rsquo;s Guide to Robot Programming With Python</li>\n<li>00:36:17 &ndash; Python import: Advanced Techniques and Tips</li>\n<li>00:40:56 &ndash; toolz: A Functional Standard Library for Python</li>\n<li>00:46:43 &ndash; python-keyboard: A Hand-Wired USB &amp; BLE Keyboard Powered by Python</li>\n<li>00:51:09 &ndash; Thanks and Goodbye</li>\n</ul>\n<p>Show Links:</p>\n<p><a href=\"https://lwn.net/Articles/823292/\">The (Non-)Return of the Python Print Statement</a> &ndash; Guido van Rossum recently <a href=\"https://lwn.net/ml/python-ideas/CAP7+vJKsrT-n4rHjaR4PYPRq09JOZcoR54ZjkboOkZcYhB+7oA@mail.gmail.com/\">proposed re-introducing the Python print statement</a>. He was completely serious and even though the idea didn\u2019t gain traction, it\u2019s interesting to know why he made the proposal.</p>\n<p><a href=\"https://www.cyborgsecurity.com/python-malware-on-the-rise/\">Python Malware on the Rise</a> &ndash; Python\u2019s low barrier to entry, enormous ecosystem, and rapid development process has made it one of he most desired programming languages for millions of developers around he globe&mdash;including malicious actors. Read the article at the link above and follow the <a href=\"https://news.ycombinator.com/item?id=23824689\">discussion on Hacker News</a>.</p>\n<p><a href=\"https://realpython.com/django-user-management/\">Get Started With Django Part 2: Django User Management</a> &ndash; In this step-by-step tutorial, you&rsquo;ll learn how to extend your Django application with a user management system, complete with email sending and third-party authentication.</p>\n<p><a href=\"https://old.reddit.com/r/learnpython/comments/hjegkc/why_do_people_use_format_method_when_f_string/\">Why Do People Use .format() When f-Strings Exist?</a> &ndash; f-Strings aren&rsquo;t exactly a drop-in replacement for .format().</p>\n<p><a href=\"https://thenextweb.com/syndication/2020/07/11/a-beginners-guide-to-robot-programming-with-python/\">A Beginner&rsquo;s Guide to Robot Programming With Python</a> &ndash; Get a crash course in programming autonomous robots with Python. Don\u2019t have a robot laying around? No problem! Use this <a href=\"https://github.com/nmccrea/sobot-rimulator/tree/v1.0.0\">open-source simulator</a> to get started.</p>\n<p><a href=\"https://realpython.com/python-import/\">Python import: Advanced Techniques and Tips</a> &ndash; The Python import system is as powerful as it is useful. In this in-depth tutorial, you&rsquo;ll learn how to harness this power to improve the structure and maintainability of your code.</p>\n<p>Projects:</p>\n<ul>\n<li><a href=\"https://github.com/pytoolz/toolz\">toolz: A Functional Standard Library for Python</a></li>\n<li><a href=\"https://github.com/makerdiary/python-keyboard\">python-keyboard: A Hand-Wired USB &amp; BLE Keyboard Powered by Python</a></li>\n</ul>\n<p>Additional Links:</p>\n<ul>\n<li><a href=\"https://blog.jse.li/posts/pyc/\">Finding secrets by decompiling Python bytecode in public repositories</a></li>\n<li><a href=\"https://realpython.com/python-string-formatting/#4-template-strings-standard-library\">Python String Formatting Best Practices: Real Python article</a></li>\n<li><a href=\"https://medium.com/tenable-techblog/remapping-python-opcodes-67d79586bfd5\">Remapping Python Opcodes</a></li>\n<li><a href=\"https://en.wikipedia.org/wiki/Big_Trak\">Big Trak</a></li>\n<li><a href=\"https://youtu.be/T8CQwGIsrx4\">Introduction to Decorators: Power Up Your Python Code - PyCon 2020 Tutorial</a></li>\n<li><a href=\"https://makerdiary.com/pages/m60-mechanical-keyboard\">M60 Mechanical Keyboard</a></li>\n</ul>\n<p>Level up your Python skills with our expert-led courses:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/django-portfolio-project/\">Getting Started With Django: Building a Portfolio App</a></li>\n<li><a href=\"https://realpython.com/courses/python-3-f-strings-improved-string-formatting-syntax/\">Python 3&#x27;s F-Strings: An Improved String Formatting Syntax</a></li>\n<li><a href=\"https://realpython.com/courses/python-modules-packages/\">Python Modules and Packages: An Introduction</a></li>\n</ul> <p><a rel=\"payment\" href=\"https://realpython.com/join\">Support the podcast &amp; join our community of Pythonistas</a></p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/files.realpython.com/podcasts/RPP_E019_David_Amos.2b4d2e0985a3.mp3"
}