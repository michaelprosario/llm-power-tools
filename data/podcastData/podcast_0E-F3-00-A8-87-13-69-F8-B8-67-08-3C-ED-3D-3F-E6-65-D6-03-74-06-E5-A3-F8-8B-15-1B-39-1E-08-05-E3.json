{
    "Id": "0E-F3-00-A8-87-13-69-F8-B8-67-08-3C-ED-3D-3F-E6-65-D6-03-74-06-E5-A3-F8-8B-15-1B-39-1E-08-05-E3",
    "ContentSourceId": "7c098d5f-afc6-488d-b7ac-b49867303173",
    "Title": "What Makes Wasm Different",
    "SourceUrl": "https://thenewstack.simplecast.com/episodes/what-makes-wasm-different-MHcFjUbv",
    "Description": "<p>VALENCIA, Spain \u2014\u00a0 WebAssembly (Wasm) is among the more hot topics under the CNCF project umbrella.\u00a0 In this episode of The New Stack Makers podcast, recorded on the show floor of<a href=\"https://events.linuxfoundation.org/kubecon-cloudnativecon-europe/\"> KubeCon + CloudNativeCon Europe 2022</a>, <a href=\"https://www.linkedin.com/in/hectaman\">Liam Randall</a>, CEO and co-founder, Cosmonic, and <a href=\"https://www.linkedin.com/in/colin-murphy-08b3601b/\">Colin Murphy,</a> senior software engineer, <a href=\"https://www.adobe.com\">Adobe</a>, discuss why Wasm\u2019s future looks bright.\u00a0</p><p>A quintessential feature of Wasm is that it functions on a CPU level, not unlike Java or Flash. This means, Randall said, that Wasm \u201ccan run anywhere.\u201d \u201cEverybody can start using Wasm, which functionally works like a tiny CPU. You can even put WebAssembly inside other applications.\u201d</p><p>The fact that Wasm has a binary format (with .wasm file format) and can be used to run on a CPU level like C or C++ does means it is highly portable. \u201cWebAssembly really is exciting because it gives us two fundamental things that are truly amazing: One is portability across a diverse set of CPUs and architectures, and even portability into other places, like into a web browser,\u201d said Randall. \u201cIt also gives us a security model that's portable, and works the same across all of those different landscape settings.\u201d</p><p>This portability makes wasm an excellent candidate for edge applications. Its inference capabilities for machine learning (ML) at the edge are particularly promising for applications distributed across many different applications, Murphy described. Wasm is also particularly apt for collaboration for ML edge and other applications. \u201cCollaborative experiences are what WebAssembly is really perfectly in position for,\" he continued.</p><p>In many ways, the name \u201cWebAssembly\u201d is not intuitively reflective of its meaning. \u201cWebAssembly is neither web nor assembly \u2014 so, it's a somewhat awkwardly named technology, but a technology that is worth looking into,\u201d Randall said. \u201cThere are incredible opportunities for your internal teams to transform the way they do business to save costs and be more secure by adopting this new standard.\u201d</p>\n",
    "EnclosureUrl": "https://afp-922713-injected.calisto.simplecastaudio.com/5672b58f-7201-4e0e-b0af-da702259d97f/episodes/ad9ff72c-5707-4c05-a3da-b1ba5c2d06df/audio/128/default.mp3?aid=rss_feed&awCollectionId=5672b58f-7201-4e0e-b0af-da702259d97f&awEpisodeId=ad9ff72c-5707-4c05-a3da-b1ba5c2d06df&feed=IgzWks06"
}