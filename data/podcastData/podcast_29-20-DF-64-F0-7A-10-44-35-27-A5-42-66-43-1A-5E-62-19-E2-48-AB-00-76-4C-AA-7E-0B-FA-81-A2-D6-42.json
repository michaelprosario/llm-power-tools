{
    "Id": "29-20-DF-64-F0-7A-10-44-35-27-A5-42-66-43-1A-5E-62-19-E2-48-AB-00-76-4C-AA-7E-0B-FA-81-A2-D6-42",
    "ContentSourceId": "ee3f8f9f-8c83-488e-aada-ce09bc743a17",
    "Title": "From bugs to performance to perfection: pushing code quality in mobile apps",
    "SourceUrl": "https://stackoverflow.blog/podcast/",
    "Description": "<p><a href=\"https://www.instabug.com/\">Instabug</a> helps developers monitor, prioritize, and debug performance and stability issues throughout the mobile app development lifecycle. Get started with their <a href=\"https://docs.instabug.com/\">docs</a>.</p><p>Connect with Kenny on <a href=\"https://www.linkedin.com/in/kencjohnston/\">LinkedIn</a>.\u00a0</p><p>Stack Overflow user <a href=\"https://stackoverflow.com/users/916491/itoctopus\">itoctopus</a> earned a <a href=\"https://stackoverflow.com/help/badges/62/populist\">Populist badge</a> by explaining how to <a href=\"https://stackoverflow.com/questions/7309115/break-huge-urls-so-they-dont-overflow\">Break huge URLs so they don't overflow</a>.</p><p>Some great excerpts from today\u2019s episode:\u00a0<br /><br />On why they built a lean, mean SDK: \u201cNowadays mobile developers spend a lot of time thinking about SDK bloat and how much they're taxing their app\u2019s performance just from the SDKs they\u2019re including. We spent a lot of time and a lot of effort making sure that our SDK has very minimal performance impact. You can't do this without any performance impact, but making sure that it has really minimal performance impact as an SDK itself. A lot of that has to do with the way in which, from years of experience, we capture the information and offload certain information to storage for when we have network connectivity bandwidth later so that we're not constantly eating network.\u201d</p><p>On the future of self-fixing code and mobile app development: \u201cOur belief is that the place where we're going to see this kind of auto fixing of code, auto healing of code, it's probably going to be mobile first. So we're invested heavily in seeing that reality. You can think of it as straightforward as crashes, for example. There's a known set of crash error codes. And so there's a known set of crash behaviors. So it's pretty easy for us. And that was what our smart resolve 1.0 was to get to, Hey, this is generally how you should solve these types of crashes. Our 1.0 version is not giving you code suggestions, but it's at least giving you known best practices from places like Stack Overflow and others that have content about how to solve these types of problems.\u201d</p><p>On using AI models to spot UI issues: \u201cWe think that there are a lot less deterministic ways to spot a frustration signal. So the thing we're working on is, on device models for your users\u2019 behavior that will allow our SDK to capture a frustration signal that nobody else has. Maybe today when I opened my banking app, I usually look at page one and then do a transfer, check out my balance, and now I'm doing this weird swiping behavior because something's not working well. A model could spot that. It wouldn't be reported as a bug, but a model could spot that.\u201d</p>\n",
    "EnclosureUrl": "https://pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/1f111c78-b31c-4105-8927-e61acc59941e/audio/128/default.mp3?aid=rss_feed&awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b&awEpisodeId=1f111c78-b31c-4105-8927-e61acc59941e&feed=XA_851k3"
}