{
    "Id": "27-81-1E-F3-8D-90-FF-4C-AE-FD-E5-8A-37-FF-A2-2A-B4-3A-A7-06-3E-B1-E9-04-C5-A4-94-50-3C-D4-2F-2E",
    "ContentSourceId": "425b36ab-3b93-42c9-8cbc-032e3bddb1d6",
    "Title": "Discussing Mojo & Improving Python Object-Oriented Programming",
    "SourceUrl": "https://realpython.com/podcasts/rpp/157/",
    "Description": "<p>Would you like to speed up your Python machine-learning code dramatically? What if you only had to change a few keywords and add a couple of type hints on portions of your code? This week on the show, Christopher Trudeau is here, bringing another batch of PyCoder&rsquo;s Weekly articles and projects.</p>\n<p>We discuss a new programming language named Mojo, which is a superset of Python. It aims to fix Python&rsquo;s performance and deployment problems. The project has many interesting ideas and a leader who has helped to shape modern compiler technology.</p>\n<p>We also share a pair of Real Python tutorials from Leodanis Pozo Ramos about object-oriented programming in Python. The first one is a deep dive into the creation of classes. It&rsquo;s an excellent refresher for anyone looking to hone their OOP skills in Python. </p>\n<p>The second tutorial covers the SOLID principles, which are five well-established standards for improving your object-oriented design. These principles guide you to create object-oriented code that is more maintainable, extensible, scalable, and testable.</p>\n<p>We cover several other articles and projects from the Python community, including a news update, showing warnings when running Django, tracking the progress of your Python program, and a Markdown browser for your terminal.</p>\n<p>This week&rsquo;s episode is brought to you by Koyeb.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Course Spotlight:</strong> <a href=\"https://realpython.com/courses/knn-python/\">Using k-Nearest Neighbors (kNN) in Python</a></p>\n<p>In this video course, you&rsquo;ll learn all about the k-nearest neighbors (kNN) algorithm in Python, including how to implement kNN from scratch. Once you understand how kNN works, you&rsquo;ll use scikit-learn to facilitate your coding process.</p>\n</div>\n<p>Topics:</p>\n<ul>\n<li>00:00:00 &ndash; Introduction</li>\n<li>00:02:39 &ndash; PEP 713: Callable Modules</li>\n<li>00:04:22 &ndash; PEP 712: &ldquo;Converter&rdquo; Parameter for <code>dataclasses.field</code></li>\n<li>00:06:49 &ndash; Python Classes: The Power of Object-Oriented Programming</li>\n<li>00:16:44 &ndash; Sponsor: Koyeb</li>\n<li>00:17:33 &ndash; SOLID Principles: Improve Object-Oriented Design in Python</li>\n<li>00:22:00 &ndash; Mojo, a Superset of Python</li>\n<li>00:34:31 &ndash; Mojo might be the biggest thing to happen in programming for decades</li>\n<li>00:41:48 &ndash; Mojo \u2013 a new programming language for AI developers </li>\n<li>00:44:03 &ndash; Video Course Spotlight</li>\n<li>00:45:23 &ndash; Have Python Show Warnings When Running Django</li>\n<li>00:47:52 &ndash; TQDM: Tracking the Progress of Your Python Program</li>\n<li>00:50:34 &ndash; frogmouth: A Markdown Browser for Your Terminal</li>\n<li>00:53:59 &ndash; Thanks and goodbye</li>\n</ul>\n<p>News:</p>\n<ul>\n<li><a href=\"https://peps.python.org/pep-0713/\">PEP 713: Callable Modules</a></li>\n<li><a href=\"https://peps.python.org/pep-0712/\">PEP 712: &ldquo;Converter&rdquo; Parameter for <code>dataclasses.field</code></a></li>\n</ul>\n<p>Show Links:</p>\n<ul>\n<li><a href=\"https://realpython.com/python-classes/\">Python Classes: The Power of Object-Oriented Programming</a> &ndash; In this tutorial, you&rsquo;ll learn how to create and use full-featured classes in your Python code. Classes provide a great way to solve complex programming problems by approaching them through models that represent real-world objects.</li>\n<li><a href=\"https://realpython.com/solid-principles-python/\">SOLID Principles: Improve Object-Oriented Design in Python</a> &ndash; In this tutorial, you&rsquo;ll learn about the SOLID principles, which are five well-established standards for improving your object-oriented design in Python. By applying these principles, you can create object-oriented code that is more maintainable, extensible, scalable, and testable.</li>\n<li><a href=\"https://www.fast.ai/posts/2023-05-03-mojo-launch.html\">Mojo, a Superset of Python</a> &ndash; <a href=\"https://docs.modular.com/mojo/\">Mojo</a> is a new programming language, which is a superset of Python. It aims to fix Python&rsquo;s performance and deployment problems.</li>\n<li><a href=\"https://www.untangled.dev/2023/04/26/py-django-warnings/\">Have Python Show Warnings When Running Django</a> &ndash; How to show warnings when running Python, and Django, during local development. The easy, yet not well-known, way.</li>\n</ul>\n<p>Discussion:</p>\n<ul>\n<li><a href=\"https://news.ycombinator.com/item?id=35809658\">Mojo might be the biggest thing to happen in programming for decades - Hacker News</a></li>\n<li><a href=\"https://news.ycombinator.com/item?id=35790367\">Mojo, a new programming language for AI developers - Hacker News</a></li>\n</ul>\n<p>Projects:</p>\n<ul>\n<li><a href=\"https://coderslegacy.com/tqdm-tracking-the-progress-of-your-python-program/\">TQDM: Tracking the Progress of Your Python Program</a></li>\n<li><a href=\"https://github.com/Textualize/frogmouth\">frogmouth: A Markdown Browser for Your Terminal</a></li>\n</ul>\n<p>Additional Links:</p>\n<ul>\n<li><a href=\"https://tqdm.github.io/presentation-%28pydata%29/video/\">Video - tqdm documentation</a></li>\n<li><a href=\"https://tqdm.github.io/\">tqdm documentation</a></li>\n<li><a href=\"https://pypa.github.io/pipx/\">pipx</a></li>\n<li><a href=\"https://realpython.com/podcasts/rpp/101/\">Episode #101: Tools for Setting Up Python on a New Machine \u2013 The Real Python Podcast</a></li>\n</ul>\n<p>Level up your Python skills with our expert-led courses:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/using-jupyter-notebooks/\">Using Jupyter Notebooks</a></li>\n<li><a href=\"https://realpython.com/courses/knn-python/\">Using k-Nearest Neighbors (kNN) in Python</a></li>\n<li><a href=\"https://realpython.com/courses/multiple-constructors-python/\">Using Multiple Constructors in Your Python Classes</a></li>\n</ul> <p><a rel=\"payment\" href=\"https://realpython.com/join\">Support the podcast &amp; join our community of Pythonistas</a></p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/files.realpython.com/podcasts/RPP_E157_03_Cx2.ac81ba1316ac.mp3"
}