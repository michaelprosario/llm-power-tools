{
    "Id": "60-26-84-97-81-FC-B1-12-71-66-90-34-17-22-1C-11-A4-DE-5F-37-91-31-6D-57-DE-73-54-A2-AD-DF-4A-94",
    "ContentSourceId": "7c098d5f-afc6-488d-b7ac-b49867303173",
    "Title": "Latest Enhancements to HashiCorp Terraform and Terraform Cloud",
    "SourceUrl": "https://thenewstack.simplecast.com/episodes/latest-enhancements-to-hashicorp-terraform-and-terraform-cloud-V_DZnBYS",
    "Description": "<p><h2><strong>What is Terraform?</strong></h2></p><p>Terraform is HashiCorp\u2019s flagship software. The open source tool provides a way to define IT resources \u2014 such as monitoring software or cloud services \u2014 in human-readable configuration files. These files, which serve as blueprints, can then be used to automatically provision the systems themselves. Kubernetes deployments, for instance, can be streamlined through Terraform.</p><p>\u00a0</p><p>\"Terraform basically translates what your configuration was codified in by your configuration, and provisions it to that desired end state,\" explained <a href=\"https://www.linkedin.com/in/meghanliese/\">Meghan Liese</a>, [sponsor_inline_mention slug=\"hashicorp\" ]HashiCorp[/sponsor_inline_mention] vice president of product and partner marketing in this podcast and video recording, recorded at the company's user conference, HashiConf 2022, held this month in Los Angeles.</p><p>\u00a0</p><p>For this interview, Liese\u00a0discusses the latest enhancements to Terraform, and Terraform Cloud, a managed service offering that is part of the HashiCorp Cloud Platform.</p><p>\u00a0</p><p>[Embed Podcast]</p><p><h2>Why Should Developers be Interested in Terraform?</h2></p><p>Typically, the DevOps teams, or system administrators, use Terraform to provision infrastructure, but there is also growing interest to allow developers to do it themselves, in a self-service fashion, Liese explained. Multicloud skills are in short supply, concluded the\u00a0<a class=\"ext-link\" href=\"https://www.hashicorp.com/state-of-the-cloud#skills-shortages-ranked-as-top-multi-cloud-barrier\" rel=\"external \">2022 HashiCorp State of Cloud Strategy Survey</a>, so making the provision process easier could help more developers, the company reckons.</p><p>\u00a0</p><p>A Terraform self-service model, which was introduced earlier this year, could \u201ccut down on the training an organization would need to do to get developers up to speed on using the infrastructure-as-code software,\u201d Liese said.</p><p>\u00a0</p><p>In this \u201cno code\u201d setup, developers can pick from a catalog of no-code-ready modules, which can be deployed directly to workspaces. No need to\u00a0<a class=\"ext-link\" href=\"https://learn.hashicorp.com/collections/terraform/configuration-language\" rel=\"external \">learn</a>\u00a0the\u00a0<a class=\"ext-link\" href=\"https://github.com/hashicorp/hcl\" rel=\"external \">HCL configuration language</a>. And the administrators will no longer have to answer the same \u201chow-do-I-do-this-in-HCL?\u201d queries.</p><p>\u00a0</p><p>The new console interface aims to greatly expand the use of Terraform. \u00a0The company has been offering self-service options for a while, by way of an architecture that allows for modules to be reused through the private registry for Terraform Cloud and Terraform Enterprise.</p><p><h2>What is the Make Code Block and Why is it Important?</h2></p><p>The\u00a0<a class=\"ext-link\" href=\"https://www.hashicorp.com/blog/terraform-1-3-improves-extensibility-and-maintainability-of-terraform-modules\" rel=\"external \">recent release</a>\u00a0of\u00a0<a class=\"ext-link\" href=\"https://www.terraform.io/downloads\" rel=\"external \">Terraform 1.3</a>\u00a0came with the promise to greatly reduce the amount of code HCL jockeys must manage, through the improvement of the\u00a0<code>make</code>\u00a0code block.</p><p>\u00a0</p><p>Actually,\u00a0<code>make</code>\u00a0has been available since Terraform 1.1, but some kinks were worked out for this latest release. What\u00a0<code>make</code>\u00a0does is provide the ability to refactor resources within a Terraform configuration file, moving large code blocks off as separate modules, where they can be discovered through a public or private registry.</p><p><h2>What is Continuous Validation?</h2></p><p>With the known state of a system captured on Terraform, it is a short step to check to ensure that the actual running system is identical to the desired state captured in HCL. Many times \u201cdrift\u201d can occur, as administrators, or even the apps themselves, make changes to the system. Especially in regulated environments, such as hospitals, it is essential that a system is in a correct state.</p><p>\u00a0</p><p>Earlier this year, HashiCorp added\u00a0<a class=\"ext-link\" href=\"https://www.hashicorp.com/campaign/drift-detection-for-terraform-cloud\" rel=\"external \">Drift Detection</a>\u00a0to Terraform Cloud to continuously check infrastructure state to detect changes and provide alerts and offer remediation if that option is chosen. Now, another update,\u00a0<a class=\"ext-link\" href=\"https://www.terraform.io/cloud-docs/workspaces/health\" rel=\"external \">Continuous validation</a>\u00a0expands these checks to include user assertions, or post-conditions, as well.</p><p>\u00a0</p><p>One post-condition may be something like ensuring that certificates haven\u2019t expired. If they do, the software can offer an alert to the admin to update the certs. Another condition might be to check for new container images, which may have been updated as a response to a security patch.</p><p>\u00a0</p><p>\u00a0</p><p>\u00a0</p><p>\u00a0</p>\n",
    "EnclosureUrl": "https://afp-922713-injected.calisto.simplecastaudio.com/5672b58f-7201-4e0e-b0af-da702259d97f/episodes/227890b6-3db1-4ab4-8715-8f94e635a649/audio/128/default.mp3?aid=rss_feed&awCollectionId=5672b58f-7201-4e0e-b0af-da702259d97f&awEpisodeId=227890b6-3db1-4ab4-8715-8f94e635a649&feed=IgzWks06"
}