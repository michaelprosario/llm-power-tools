{
    "Id": "48-26-BF-DF-0D-FD-E9-83-7C-6A-CC-A7-E7-DD-51-C9-A8-DE-26-F8-0E-E0-C0-41-F5-8A-D9-CB-45-DE-8D-63",
    "ContentSourceId": "6211f1c3-8dc3-4bf8-a824-be7c8b79d101",
    "Title": "150: Learning Kotlin - Returns, Jumps & Labels",
    "SourceUrl": "https://fragmentedpodcast.com/",
    "Description": "<h2>Shownotes</h2>\n<ul>\n<li><a href=\"https://kotlinlang.org/docs/reference/returns.html\">Kotlin Returns and Jumps Documentation</a></li>\n</ul>\n<h2>Code</h2>\n<pre><code>data class Customer(val isPlatinum: Boolean)\n\nfun main() {\n\n    val customer = Customer(false)\n\n    println(&quot;Number of points customer has: ${calculatePoints(customer)}&quot;)\n\n    // Break out of the loop once we're over 25\n    for (i in 1..100) {\n        if (i &gt; 25) {\n            break\n        } else {\n            println(i)\n        }\n    }\n\n\n    // Skip all even numbers\n    for (i in 1..100) {\n        if (i % 2 == 0) {\n            continue\n        } else {\n            println(i)\n        }\n    }\n\n\n    // Break out of the outer loop (which breaks out of the inner too) using a label\n    donn@ for (i in 1..100) {\n        for (j in 100..200) {\n            if (j &gt; 150) break@donn // This will break out of the inner loop and outer loop\n            else println(&quot;i: $i, j: $j&quot;)\n        }\n    }\n\n    // Continue processing the next outer loop value when a condition is met.\n    donn@ for (i in 1..100) {\n        for (j in 100..200) {\n            if (j &gt; 150) continue@donn // This will break out of the inner loop and outer loop\n            else println(&quot;i: $i, j: $j&quot;)\n        }\n    }\n\n    // returns with label\n    example1()\n    example2()\n\n    println(&quot;I'm done processing!&quot;)\n}\n\nfun calculatePoints(customer: Customer): Int {\n    if (customer.isPlatinum) {\n        return 100000\n    } else {\n        return 10\n    }\n}\n\n\nfun example1() {\n    listOf(1, 2, 3, 4, 5, 6, 7, 8, 9).forEach {\n        if (it &gt; 7) {\n            return\n        } else {\n            println(it)\n        }\n    }\n    println(&quot;This wont print :( because return exited the bar() function&quot;)\n}\n\nfun example2() {\n    listOf(1, 2, 3, 4, 5, 6, 7, 8, 9).forEach bin@ {\n        if (it &gt; 7) {\n            return@bin\n        } else {\n            println(it)\n        }\n    }\n    println(&quot;This will print! :) return exited the forEach!&quot;)\n}\n</code></pre>\n<h2>Sponsors \ud83d\ude4f</h2>\n<ul>\n<li>\n<p><a href=\"https://nevercode.io\">Nevercode</a></p>\n<ul>\n<li>Nevercode is taking Flutter revolution extremely serious and is prepared to offer kick-ass CI/CD for Flutter projects with <a href=\"https://codemagic.io/\">codemagic.io</a>. Check it out and get started at https://codemagic.io/</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://sentry.io/for/android/\">Sentry.io</a></p>\n<ul>\n<li>Sentry tells you about errors in your code before your customers have a chance to encounter them.<br />\nCheck them out at: https://sentry.io/for/android/</li>\n</ul>\n</li>\n</ul>\n<h2>Contact</h2>\n<ul>\n<li><a href=\"https://discord.gg/zBSfhwk\">Discord chat</a> or <a href=\"https://twitter.com/fragmentedcast\">@fragmentedcast</a> or <a href=\"https://www.youtube.com/channel/UC7fT84G-G25w7Bdd-e1rnyw/videos\">our Youtube channel</a></li>\n<li><a href=\"https://twitter.com/donnfelker\">@donnfelker</a> and <a href=\"https://www.instagram.com/donnfelker/\">donnfelker</a> (on Instagram)</li>\n<li><a href=\"https://twitter.com/kaushikgopal\">@kaushikgopal</a> and <a href=\"https://www.instagram.com/kaushikgopal/\">kaushikgopal</a> (on Instagram)</li>\n</ul>\n",
    "EnclosureUrl": "https://cdn.simplecast.com/audio/20f350/20f35050-e836-44cd-8f7f-fd13e8cb2e44/6ac744ed-2694-4cf5-963f-1b229cca833c/learning-kotlin-returns-jumps-and-labels_tc.mp3?aid=rss_feed&feed=LpAGSLnY"
}