{
    "Id": "3C-5F-A0-70-DE-8D-0D-F1-D7-64-99-34-6B-DE-A7-CF-BE-A3-37-2D-65-40-00-84-6B-D3-7D-74-FE-DE-D7-00",
    "ContentSourceId": "6211f1c3-8dc3-4bf8-a824-be7c8b79d101",
    "Title": "016: Effective Java for Android developers : Item 2",
    "SourceUrl": "https://fragmentedpodcast.com/",
    "Description": "<p>In our third Fragment installment, we introduce Josh's second Item:\u00a0Consider a builder when faced with many constructor parameters.</p>\n<p>Stay tuned for more items from our &quot;Effective Java for Android developers&quot; Fragment series.</p>\n<p>[audio src=&quot;http://traffic.libsyn.com/fragmented/ep_14_fragmented.mp3&quot; preload=&quot;none&quot; autoplay=&quot;false&quot;]</p>\n<p>[Download][1]</p>\n<h2>Show Notes</h2>\n<ul>\n<li><a href=\"http://www.amazon.com/Effective-Java-2nd-Joshua-Bloch/dp/0321356683/?tag=httpkaushco-20\">Effective Java (2nd Edition) - Joshua Bloch</a></li>\n</ul>\n<h2>Consider a builder when faced with many constructor parameters</h2>\n<h3>Patterns available for constructing object with parameters:</h3>\n<ul>\n<li><em>Telescoping Constructor Pattern</em>\u00a0- Provideconstructor with only required parameters, another with a single optional param, a third with 2 optional params... and so on.\n<ul>\n<li>Advantage: Works well for small number of parameters</li>\n<li>Disadvantage: Does NOT scale well</li>\n</ul>\n</li>\n<li><em>JavaBeans Pattern</em>\u00a0- Callparameterless constructor to create the object; then call setter methods to set required parameter and each optional param of interest.\n<ul>\n<li>Advantage: Scales well, easy (but wordy) to read resulting code</li>\n<li>Disadvantage: Allows inconsistency (if all required params not called); impossible to make classes immutable if using this pattern.</li>\n</ul>\n</li>\n<li><em>Builder pattern</em>\u00a0- winner!\n<ul>\n<li>Advantage: Simulates named optional parameters; allows immutable objects to be constructed; flexible</li>\n<li>Disadvantage: more ceremony to actually construct the Builder Class and finally use.</li>\n</ul>\n</li>\n</ul>\n<h3>Example usage from Android source:</h3>\n<ul>\n<li><a href=\"http://androidxref.com/5.1.1_r6/xref/frameworks/base/core/java/android/app/AlertDialog.java#371\">AlertDialog Builder</a>\u00a0[androidxref.com]</li>\n</ul>\n<h3>Tip:</h3>\n<ul>\n<li><a href=\"https://www.jetbrains.com/idea/help/replace-constructor-with-builder.html\">Use IntelliJ to generate your Builders easily</a></li>\n</ul>\n<h2>Contact us:</h2>\n<ul>\n<li><a href=\"https://twitter.com/fragmentedcast\">@fragmentedcast</a>\u00a0[twitter.com]</li>\n<li><a href=\"https://twitter.com/donnfelker\">@donnfelker</a>\u00a0[twitter.com]</li>\n<li><a href=\"https://twitter.com/kaushikgopal/\">@kaushikgopal</a>\u00a0[twitter.com]</li>\n</ul>\n",
    "EnclosureUrl": "https://cdn.simplecast.com/audio/20f350/20f35050-e836-44cd-8f7f-fd13e8cb2e44/de1e4007-b48b-4eff-8e5e-6d469f6a92bd/ep-16-fragmented_tc.mp3?aid=rss_feed&feed=LpAGSLnY"
}