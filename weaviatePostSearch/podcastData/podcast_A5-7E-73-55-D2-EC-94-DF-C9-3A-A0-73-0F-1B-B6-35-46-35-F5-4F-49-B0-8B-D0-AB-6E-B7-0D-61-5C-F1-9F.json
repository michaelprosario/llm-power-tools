{
    "Id": "A5-7E-73-55-D2-EC-94-DF-C9-3A-A0-73-0F-1B-B6-35-46-35-F5-4F-49-B0-8B-D0-AB-6E-B7-0D-61-5C-F1-9F",
    "ContentSourceId": "7c098d5f-afc6-488d-b7ac-b49867303173",
    "Title": "Is Java Ready for Cloud Native Computing?",
    "SourceUrl": "https://thenewstack.simplecast.com/episodes/is-java-ready-for-cloud-native-computing-VRaVxsn1",
    "Description": "<p>First released in 1995, Java\u2019s programming language has been a leading developer platform that has become a workhorse for hundreds of enterprise applications. With each new technology evolution, Java has successfully adapted to change. But even while a recent Java ecosystem <a href=\"https://newrelic.com/resources/report/2022-state-of-java-ecosystem\">study</a> found that more than 70% of Java applications in production environments are running inside a container, there continues to be hurdles the language must overcome to adapt to the cloud-native world.</p><p>In this episode of The New Stack Makers podcast, <a href=\"https://www.linkedin.com/in/siritter/?originalSubdomain=uk\">Simon Ritter</a>, deputy CTO of Azul Systems and <a href=\"https://daliashea.com/about/\">Dalia Abo Sheasha</a>, Java developer advocate of JetBrains discuss some of the challenges the language is working to overcome, and share some insight into the new features that developers are requesting. <a href=\"https://thenewstack.io/author/darryl-taft/\">Darryl Taft</a>, news editor of The New Stack hosted this podcast.</p><p>The\u00a0complexity of modern applications\u00a0requires developers to master a growing array of skills, technologies, and concepts to develop in the cloud. And \u201cwhat I've seen is that there is a gap in skills, and what it would take to get existing Java applications into the cloud,\u201d said Abo Sheasha.</p><p>\u201cWhat developers really want is to focus on the idea of developing the Java code,\u201d said Ritter. \u201cHaving the ability to plug in to different cloud providers, but also the ability to integrate with things like your CI/CD tooling so that you've got continuous integration, continuous deployment built in,\u201d he added.</p><p>\u00a0</p><p>Getting Java ready for the cloud is a \u201cdistributed responsibility across the people \u2013 from cloud providers to tooling providers,\u201d said Ritter. \u201cEveryone recognizes that the more folks we have on it, the more minds we have on it, the better outcome we're going to have for the developer\u2019s language,\u201d Abo Sheasha said.</p><p>\u00a0</p><p>Making developers more efficient and productive is coming into the fold with the introduction of JEP, or JDK Enhancement Proposals - a lightweight approach to add new features in the development of the Java platform itself. \u201cBut there's some bigger projects like Project Amber which is all about small changes to the language syntax of Java with the idea of making it more productive by taking some of the boilerplate code out,\u201d Ritter said.</p><p>\u00a0</p><p>The journey to the next chapter of Java is multi-dimensional. While \u201cmost developers are focused on getting the job done, picking up skills for new things is a challenge because it takes time. Many still have the issue of using whichever Java version their company is stuck on,\u201d said Ritter. \u201cIt's not because the developers don't want to do it; it\u2019s that they need to convince management that it's worth investing in,\u201d added Abo Sheasha.</p>\n",
    "EnclosureUrl": "https://afp-922713-injected.calisto.simplecastaudio.com/5672b58f-7201-4e0e-b0af-da702259d97f/episodes/1eff397d-9a93-43ca-9613-47d6f238fb3d/audio/128/default.mp3?aid=rss_feed&awCollectionId=5672b58f-7201-4e0e-b0af-da702259d97f&awEpisodeId=1eff397d-9a93-43ca-9613-47d6f238fb3d&feed=IgzWks06"
}