{
    "Id": "E2-36-9B-5B-89-74-11-5A-7A-EE-3B-B6-1B-AC-5B-64-BA-93-A5-84-35-19-58-8C-1F-8F-9A-6F-C4-61-C4-9C",
    "ContentSourceId": "ee3f8f9f-8c83-488e-aada-ce09bc743a17",
    "Title": "Who owns this outage? Building intelligent, automated escalation chains",
    "SourceUrl": "https://stackoverflow.blog/podcast/",
    "Description": "<p>Maxwell, a solution architect at xMatters, took a winding road to get to where he is. After a computer engineering education, he held jobs as field support engineer, product manager, SRE, and finally his current role as a solutions architect, where he serves as something of an SRE for SREs, helping them solve incident management problems with the help of xMatters.\u00a0</p><p>When he moved to the SRE role, Maxwell wanted to get back to doing technical work. It was a lateral move within his company, which was migrating an on-prem solution into the cloud. It\u2019s a journey that plenty of companies are making now: breaking an application into microservices, running processes in containers, and using Kubernetes to orchestrate the whole thing. Non-production environments would go down and waste SRE time, making it harder to address problems in the production pipeline.\u00a0</p><p>At the heart of their issues was the incident response process. They had several bottlenecks that prevented them from delivering value to their customers quickly. Incidents would send emails to the relevant engineers, sometimes 20 on a single email, which made it easy for any one engineer to ignore the problem\u2014someone else has got this. They had a bad silo problem, where escalating to the right person across groups became an issue of its own. And of course, most of this was manual. Their MTTR\u2014mean time to resolve\u2014was lagging.\u00a0</p><p>Maxwell moved over to xMatters because they managed to solve these problems through clever automation. Their product automates the scheduling and notification process so that the right person knows about the incident as soon as possible. At the core of this process was a different MTTR\u2014mean time to respond. Once an engineer started working to resolve a problem, it was all down to runbooks and skill. But the lag between the initial incident and that start was the real slowdown.\u00a0</p><p>It\u2019s not just the response from the first SRE on call. It\u2019s the other escalations down the line\u2014to data engineers, for example\u2014that can eat away time. They\u2019ve worked hard to make\u00a0 escalation configuration easy. It not only handles who's responsible for specific services and metrics, but who\u2019s in the escalation chain from there. When the incident hits, the notifications go out through a series of configured channels; maybe it tries a chat program first, then email, then SMS.\u00a0</p><p>The on-call process is often a source of dread, but automating the escalation process can take some of the sting out of it. Check out the episode to learn more.\u00a0</p>\n",
    "EnclosureUrl": "https://pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/9d7ea3a7-701c-4a45-b78e-48ef6c4737bf/audio/128/default.mp3?aid=rss_feed&awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b&awEpisodeId=9d7ea3a7-701c-4a45-b78e-48ef6c4737bf&feed=XA_851k3"
}