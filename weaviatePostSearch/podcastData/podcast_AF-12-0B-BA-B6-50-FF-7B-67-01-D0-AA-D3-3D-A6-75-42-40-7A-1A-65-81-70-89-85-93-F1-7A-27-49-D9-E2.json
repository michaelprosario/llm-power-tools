{
    "Id": "AF-12-0B-BA-B6-50-FF-7B-67-01-D0-AA-D3-3D-A6-75-42-40-7A-1A-65-81-70-89-85-93-F1-7A-27-49-D9-E2",
    "ContentSourceId": "ee3f8f9f-8c83-488e-aada-ce09bc743a17",
    "Title": "25 Years of Java - the present to the future",
    "SourceUrl": "https://stackoverflow.blog/podcast/",
    "Description": "<p>For this episode we spoke again with Georges Saab, Vice President of Software Development at the Java Platform Group and Manish Gupta, Vice President of Global Marketing for Java and GraalVM.\u00a0</p><p>The very first feature that made a massive impact wasn\u2019t a change in the Java language at all. It was the <strong>vastly improved library support</strong> that happened in the early releases. Between 1.0 and 1.3, these libraries included the <a href=\"https://en.wikipedia.org/wiki/Swing_(Java)\">Swing</a> window toolkit, the <a href=\"https://en.wikipedia.org/wiki/Java_collections_framework\">Collections</a> framework, a <a href=\"https://en.wikipedia.org/wiki/Java_remote_method_invocation\">RPC-like API</a> for remote calls, <a href=\"https://en.wikipedia.org/wiki/Java_Database_Connectivity\">JDBC</a> for interacting with databases, and more. The standard libraries grew richer, more sophisticated, and allowed Java to become a real enterprise language.\u00a0</p><p>In 2004, Java added <strong>generics</strong>, which allowed types, methods, and interfaces to be specified with the associated data types to be specified when that item was instantiated without sacrificing type safety. \u201cAt the time, generics were a challenge and people had strong opinions about them,\u201d said Saab. Today, generics are one of the enduring features of the language.\u00a0</p><p>Java may have been designed as a completely object oriented language, but when Java SE 8 was released in 2014, it added <strong>Lamda expressions (</strong>aka <a href=\"https://en.wikipedia.org/wiki/Closure_(computer_programming)\">closures</a>), which added some functional programming elements. Not every problem is best served by OOP, and by adding Lambdas, Java became more flexible.\u00a0</p><p>Despite its prominence across numerous industries, Java isn\u2019t sitting still. Saab mentioned four big projects coming to Java that had him excited, all designated by codenames: Loom, Valhalla, Leyden, and ZGC. You can read all about them on our blog.</p><p><i>If you want to learn more, Oracle has </i><a href=\"https://www.oracle.com/java/moved-by-java/\"><i>put together a wealth of resources </i></a><i>to celebrate Java's 25th anniversary.</i></p>\n",
    "EnclosureUrl": "https://pdrl.fm/c28362/injector.simplecastaudio.com/6fa1d34c-502b-4abf-bd82-483804006e0b/episodes/7d510307-e192-4a88-bc3f-fc3308351a30/audio/128/default.mp3?aid=rss_feed&awCollectionId=6fa1d34c-502b-4abf-bd82-483804006e0b&awEpisodeId=7d510307-e192-4a88-bc3f-fc3308351a30&feed=XA_851k3"
}