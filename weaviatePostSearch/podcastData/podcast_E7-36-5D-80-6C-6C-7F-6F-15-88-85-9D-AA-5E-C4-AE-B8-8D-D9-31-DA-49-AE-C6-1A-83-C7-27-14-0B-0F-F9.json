{
    "Id": "E7-36-5D-80-6C-6C-7F-6F-15-88-85-9D-AA-5E-C4-AE-B8-8D-D9-31-DA-49-AE-C6-1A-83-C7-27-14-0B-0F-F9",
    "ContentSourceId": "7c098d5f-afc6-488d-b7ac-b49867303173",
    "Title": "Port: Platform Engineering Needs a Holistic Approach",
    "SourceUrl": "https://thenewstack.simplecast.com/episodes/port-platform-engineering-can-be-the-first-step-in-system-automation-4i2b5LVU",
    "Description": "<p>By now, almost everyone agreed <a href=\"https://thenewstack.io/whats-platform-engineering-and-how-does-it-support-devops/\">platform engineering</a> is <a href=\"https://thenewstack.io/cyberark-decreases-cognitive-load-with-platform-engineering/\">probably a good idea</a>, in which an organizations builds an <a href=\"https://thenewstack.io/internal-developer-portal-what-it-is-and-why-you-need-one/\">internal development platform</a> to empower coders and speed application releases. So, for this latest edition of <a href=\"https://thenewstack.io/podcasts/\">The New Stack podcast</a>, \u00a0we spoke with one of the pioneers in this space, \u00a0<a href=\"https://www.linkedin.com/in/zohar-einy-b6219612a/?originalSubdomain=il\">Zohar Einy</a>, CEO of Port, to see how platform engineering would work in your organization. TNS Editor Joab Jackson hosted this conversation.</p><p>\u00a0</p><p>Port offers what it claims is the world's first <a href=\"https://www.getport.io/company\">low code platform</a> for developers.</p><p>\u00a0</p><p><a href=\"https://thenewstack.simplecast.com/episodes/rethinking-web-application-firewalls\">Rethinking Web Application Firewalls</a></p><p>\u00a0</p><p>With Port, an organization can build a software catalogue of approved tools, import its own data model, and set up workflows. Developers can consume all the resources they need through a self-service catalogue, without needing the knowledge how to set up a complex application, like Kubernetes. The DevOps and platform teams themselves maintain the platform.</p><p>\u00a0</p><p>Application owners aren't \u00a0the only potential users of a self-service catalogues, Einy points out in our convo. DevOps and system administration teams can also use the platform. A DevOps teams can set up automations \"to make sure that [developers are] using the platform with the right mindset that fits with their organizational standards in terms of compliance, security, and performance aspects.\"</p><p>\u00a0</p><p>Even machines themselves could benefit from a self-service platform, for those who are looking to automate deployments as much as possible.</p><p>\u00a0</p><p>Einy offered an example: A CI/CD process could create a build process on its own. If it needs to check the maturity level of some tool, it can do so through an API call. If it's not adequately certified, the developer is notified, but if all the tools are sufficiently mature than the automated process can finish the build without further developer intervention.</p><p>\u00a0</p><p>Another possible process that could be automated would be the termination of permissions when their deadline has passed. Think about an early-warning system for expired digital certificates. \"So it's a big driver for both for cost reduction and security best practices,\" Einy said.</p><p>\u00a0</p><h2>Too Many Choices, Not Enough Code</h2><p>\u00a0</p><p>But what about developer choice? Won't developers feel frustrated when barred from using the tools they are most fond of?</p><p>\u00a0</p><p>But this freedom to use any tool available was what led us to the current state of overcomplexity in full-stack development, Einy responded. This is why the role of \"full-stack developer\" seems like an impossible, given all the possible permutations at each layer of the stack.</p><p>\u00a0</p><p>Like the artist who finds inspiration in a limited palette, the developer should be able to find everything they need in a well-curated platform.</p><p>\u00a0</p><p>\"In the past, when we talked about 'you-build-it-you-own-it', we thought that the developer needs to know everything about anything, and they have the full ownership to choose anything that they want. And they got sick of it, right, because they needed to know too much,\" Einy said. \"So I think we are getting into a transition where developers are OK with getting what they need with a click of a button because they have so much work on their own.\"</p><p>\u00a0</p><p>In this conversation, we also discussed measuring success, the role of access control in DevOps, and open source <a href=\"https://thenewstack.io/spotifys-backstage-a-strategic-guide/\">Backstage platform</a>, and its recent inclusion of paid plug-ins. Give it a listen!</p><p>\u00a0</p><p>\u00a0</p><p>\u00a0</p><p>\u00a0</p>\n",
    "EnclosureUrl": "https://afp-922713-injected.calisto.simplecastaudio.com/5672b58f-7201-4e0e-b0af-da702259d97f/episodes/c7762e76-e504-4950-9e0f-8a2754066583/audio/128/default.mp3?aid=rss_feed&awCollectionId=5672b58f-7201-4e0e-b0af-da702259d97f&awEpisodeId=c7762e76-e504-4950-9e0f-8a2754066583&feed=IgzWks06"
}