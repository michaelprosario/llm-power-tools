{
    "Id": "69-26-D7-79-CA-21-43-0C-CE-78-FD-12-E5-DD-D0-3E-8D-A9-8E-3F-BD-84-13-44-81-66-F8-E3-D1-46-62-E8",
    "ContentSourceId": "425b36ab-3b93-42c9-8cbc-032e3bddb1d6",
    "Title": "Using an Ellipsis in Python & Goals for CPython 3.12",
    "SourceUrl": "https://realpython.com/podcasts/rpp/129/",
    "Description": "<p>Where should you use an ellipsis in Python? How does it behave as a placeholder in a script, project, or stub file? What are the next goals for the Faster CPython project? This week on the show, Christopher Trudeau is here, bringing another batch of PyCoder&rsquo;s Weekly articles and projects.</p>\n<p>We talk about a Real Python article that covers when you should use an ellipsis in Python. We discuss the similarities with the <code>pass</code> keyword and how it&rsquo;s used for type hints within stub files. </p>\n<p>Christopher shares resources covering the goals of the Faster CPython project. We&rsquo;re on the cusp of the release of Python 3.11, but the project keeps moving forward as they look at ways to continue speeding up Python. </p>\n<p>We share several other articles and projects from the Python community, including a news roundup, alternatives for hosting Python-based applications, ways to create custom Python strings, a discussion about aging programmers, a structural diff that understands syntax, and a project for refurbishing and modernizing Python codebases.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Course Spotlight:</strong>  <a href=\"https://realpython.com/courses/multiple-constructors-python/\">Providing Multiple Constructors in Your Python Classes</a></p>\n<p>In this video course, you&rsquo;ll learn how to provide multiple constructors in your Python classes. To this end, you&rsquo;ll learn different techniques, such as checking argument types, using default argument values, writing class methods, and implementing single-dispatch methods.</p>\n</div>\n<p>Topics:</p>\n<ul>\n<li>00:00:00 &ndash; Introduction</li>\n<li>00:02:26 &ndash; Django security releases issued</li>\n<li>00:02:44 &ndash; PEP 698: Override Decorator for Static Typing</li>\n<li>00:03:37 &ndash; Heroku Alternatives for Python-Based Applications</li>\n<li>00:14:34 &ndash; Python 3.12 Goals: Faster-CPython Ideas Wiki</li>\n<li>00:20:29 &ndash; Sponsor: InfluxDB</li>\n<li>00:21:19 &ndash; When Do You Use an Ellipsis in Python?</li>\n<li>00:28:18 &ndash; Custom Python Strings: Inheriting From <code>str</code> vs <code>UserString</code></li>\n<li>00:32:52 &ndash; Aging Programmer</li>\n<li>00:46:32 &ndash; Video Course Spotlight</li>\n<li>00:47:48 &ndash; difftastic: A Structural Diff That Understands Syntax</li>\n<li>00:50:44 &ndash; refurb: Refurbish and Modernize Python Codebases</li>\n<li>00:55:44 &ndash; Thanks and goodbye</li>\n</ul>\n<p>News:</p>\n<ul>\n<li><a href=\"https://www.djangoproject.com/weblog/2022/oct/04/security-releases/\">Django security releases issued: 4.1.2, 4.0.8, and 3.2.16 | Weblog | Django</a></li>\n<li><a href=\"https://peps.python.org/pep-0698/\">PEP 698: Override Decorator for Static Typing</a> &ndash; This Python Enhancement Proposal describes the use of a new decorator, <code>@override</code>, which would be used as a type hint for methods in a subclass that override a parent&rsquo;s method. This type hint would introduce a level of safety if the parent method is refactored without corresponding changes to the child method.</li>\n</ul>\n<p>Show Links:</p>\n<ul>\n<li><a href=\"https://testdriven.io/blog/heroku-alternatives/\">Heroku Alternatives for Python-Based Applications</a> &ndash; Learn about alternatives to Heroku and their pros and cons. Platforms discussed include Digital Ocean, Google App Engine, AWS, Azure, PythonAnywhere, and half a dozen more.</li>\n<li><a href=\"https://github.com/faster-cpython/ideas/wiki/Python-3.12-Goals\">Python 3.12 Goals: Faster-CPython Ideas Wiki</a> &ndash; A summary of the goals for the Faster CPython initiative within the Python 3.12 release. Includes trace optimizations, shrinking object sizes, improving memory management overhead, and more. See also the associated <a href=\"https://github.com/faster-cpython/ideas/wiki/Workflow-for-3.12-cycle\">Workflow for 3.12 cycle</a> checklist.</li>\n<li><a href=\"https://realpython.com/python-ellipsis/\">When Do You Use an Ellipsis in Python?</a> &ndash; You may have seen three dots in Python scripts. Although this syntax may look odd, using an ellipsis is valid Python code. In this tutorial, you&rsquo;ll learn when Python&rsquo;s <code>Ellipsis</code> constant can come in handy for you.</li>\n<li><a href=\"https://realpython.com/inherit-python-str/\">Custom Python Strings: Inheriting From <code>str</code> vs <code>UserString</code></a> &ndash; In this tutorial, you&rsquo;ll learn how to create custom string-like classes in Python by inheriting from the built-in <code>str</code> class or by subclassing <code>UserString</code> from the <code>collections</code> module.</li>\n</ul>\n<p>Discussion:</p>\n<ul>\n<li><a href=\"https://news.ycombinator.com/item?id=32961933\">Aging Programmer</a></li>\n</ul>\n<p>Projects:</p>\n<ul>\n<li><a href=\"https://github.com/wilfred/difftastic\">difftastic: A Structural Diff That Understands Syntax</a></li>\n<li><a href=\"https://github.com/dosisod/refurb\">refurb: Refurbish and Modernize Python Codebases</a></li>\n</ul>\n<p>Additional Links:</p>\n<ul>\n<li><a href=\"https://www.opalstack.com/\">Opalstack</a></li>\n<li><a href=\"https://pypi.org/project/cookiecutter-python/\">cookiecutter-python \u00b7 PyPI</a></li>\n<li><a href=\"https://github.com/python/typeshed/tree/master/stubs\">typeshed/stubs at master \u00b7 python/typeshed</a></li>\n<li><a href=\"https://blog.codinghorror.com/why-cant-programmers-program/\">Why Can&rsquo;t Programmers.. Program?</a></li>\n</ul>\n<p>Level up your Python skills with our expert-led courses:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/rest-apis-with-django-ninja/\">Sneaky REST APIs With Django Ninja</a></li>\n<li><a href=\"https://realpython.com/courses/multiple-constructors-python/\">Using Multiple Constructors in Your Python Classes</a></li>\n<li><a href=\"https://realpython.com/courses/using-python-class-constructors/\">Using Python Class Constructors</a></li>\n</ul> <p><a rel=\"payment\" href=\"https://realpython.com/join\">Support the podcast &amp; join our community of Pythonistas</a></p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/files.realpython.com/podcasts/RPP_E129_03_Cx2.c3023c4ea4c2.mp3"
}