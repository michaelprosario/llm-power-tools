{
    "Id": "BF-60-65-09-2D-A4-31-4C-B5-EB-13-12-05-2B-12-A5-9E-C7-9F-16-71-67-78-FF-07-5E-83-31-5B-44-A0-3A",
    "ContentSourceId": "6211f1c3-8dc3-4bf8-a824-be7c8b79d101",
    "Title": "014: Effective Java for Android developers : Item 1",
    "SourceUrl": "https://fragmentedpodcast.com/",
    "Description": "<p>We've mentioned the book &quot;Effective Java&quot; by Joshua Bloch quite a few times on previous episodes. At this point, everyone knows they should have read this book (quadruple times). But it's a dense read and everyone could use a reading buddy. Also, what does Effective Java look like through the eyes of an Android developer?</p>\n<p>In this second installment of our Fragment (a.k.a mini-episode), we thought we'll do our listeners a favor and help with that reading. We introduce the very first of these venerable &quot;Items&quot;:\u00a0Consider providing static factory methods instead of constructors.</p>\n<p>Stay tuned for more items from our &quot;Effective Java for Android developers&quot; Fragment series.</p>\n<h2>Show Notes:</h2>\n<ul>\n<li><a href=\"http://www.amazon.com/Effective-Java-2nd-Joshua-Bloch/dp/0321356683/?tag=httpkaushco-20\">Effective Java (2nd Edition) - Joshua Bloch</a></li>\n</ul>\n<h3>Consider providing static factory methods instead of constructors</h3>\n<ul>\n<li><a href=\"http://androidxref.com/5.1.1_r6/xref/frameworks/base/core/java/android/widget/Toast.java#283\">static factory method\u00a0<code>makeText</code>\u00a0for Toast class</a>\u00a0[androidxref.com]</li>\n<li><a href=\"http://androidxref.com/5.1.1_r6/xref/frameworks/base/core/java/android/animation/ObjectAnimator.java\">ObjectAnimator</a>\u00a0[androidxref.com]:\n<ul>\n<li><a href=\"http://androidxref.com/5.1.1_r6/xref/frameworks/base/core/java/android/animation/ObjectAnimator.java#217\"><code>.ofInt</code></a>\u00a0[androidxref.com]</li>\n<li><a href=\"http://androidxref.com/5.1.1_r6/xref/frameworks/base/core/java/android/animation/ObjectAnimator.java#372\"><code>.ofArgb</code></a>\u00a0[androidxref.com]</li>\n<li><a href=\"http://androidxref.com/5.1.1_r6/xref/frameworks/base/core/java/android/animation/ObjectAnimator.java#411\"><code>.ofFloat</code></a>\u00a0[androidxref.com]</li>\n</ul>\n</li>\n</ul>\n<h3>Advantages:</h3>\n<ol>\n<li>You can control the name and thus give it much more meaningful names</li>\n<li>You are not required to create a &quot;new&quot; object each time they are invoked</li>\n<li>You can even return an object that's a subtype of the return type (unlike constructors which only return class type)</li>\n</ol>\n<ul>\n<li>e.g.\u00a0 <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/6-b14/java/util/Collections.java\">Java Collections framework</a>\u00a0[grepcode.com]</li>\n</ul>\n<h3>Disadvantages:</h3>\n<ol>\n<li>Classes without public or protected constructors cannot be subclassed</li>\n<li>Static factory methods are not readily distinguishable from other static methods</li>\n</ol>\n<h3>Takeaways</h3>\n<ol>\n<li>&quot;Consider&quot; using static factory methods (not always)</li>\n<li>Use\u00a0 <a href=\"http://www.androiddesignpatterns.com/2012/05/using-newinstance-to-instantiate.html\"><code>newInstance</code>\u00a0when creating Fragments</a>\u00a0[androiddesignpatterns.com]</li>\n<li>Use\u00a0<code>newIntent</code>\u00a0static factory method for creating intents inside the target activity.</li>\n</ol>\n<h2>Contact us:</h2>\n<ul>\n<li><a href=\"https://twitter.com/fragmentedcast\">@fragmentedcast</a>\u00a0[twitter.com]</li>\n<li><a href=\"https://twitter.com/donnfelker\">@donnfelker</a>\u00a0[twitter.com]</li>\n<li><a href=\"https://twitter.com/kaushikgopal/\">@kaushikgopal</a>\u00a0[twitter.com]</li>\n</ul>\n",
    "EnclosureUrl": "https://cdn.simplecast.com/audio/20f350/20f35050-e836-44cd-8f7f-fd13e8cb2e44/28e051eb-f914-476c-9827-fc86e37cbdd4/ep-14-fragmented_tc.mp3?aid=rss_feed&feed=LpAGSLnY"
}