{
    "Id": "72-24-06-16-3B-5F-70-2E-56-9F-CE-B6-76-DD-66-1D-E8-1C-56-BF-15-CC-A3-52-E0-36-7F-C5-8F-F5-24-DC",
    "ContentSourceId": "425b36ab-3b93-42c9-8cbc-032e3bddb1d6",
    "Title": "Exploring the Zen of Python & pandas Features for Finance",
    "SourceUrl": "https://realpython.com/podcasts/rpp/162/",
    "Description": "<p>What advice can you extract from the Zen of Python? How can these nineteen guiding principles help you write more idiomatic Python? This week on the show, Christopher Trudeau is here, bringing another batch of PyCoder&rsquo;s Weekly articles and projects.</p>\n<p>Christopher shares a Real Python tutorial by Bartosz Zaczy\u0144ski titled &ldquo;What&rsquo;s the Zen of Python?&rdquo; We talk about the poem&rsquo;s origin and ways to access the Zen within Python. We also discuss how different sections provide contradictory advice for what makes good Python code.</p>\n<p>We cover a recent post by previous guest Matt Harrison about using Python and pandas for finance. Matt&rsquo;s article covers methods in the pandas library for aggregation, resampling, and rolling averages.</p>\n<p>We cover several other articles and projects from the Python community, including staying up-to-date with news, solving a Legend of Zelda puzzle with Python, avoiding &ldquo;simply&rdquo; providing advice, displaying better stack traces, and creating files with fake data.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Course Spotlight:</strong> <a href=\"https://realpython.com/courses/speed-python-concurrency/\">Speed Up Python With Concurrency</a> </p>\n<p>Learn what concurrency means in Python and why you might want to use it. You&rsquo;ll see a simple, non-concurrent approach and then look into why you&rsquo;d want threading, asyncio, or multiprocessing.</p>\n</div>\n<p>Topics:</p>\n<ul>\n<li>00:00:00 &ndash; Introduction</li>\n<li>00:01:49 &ndash; Python 3.11.4, 3.10.12, 3.9.17, 3.8.17, 3.7.17, and Python 3.12.0 beta 3 released</li>\n<li>00:02:24 &ndash; Enforcement of 2FA for PyPI Began June 1st</li>\n<li>00:02:54 &ndash; Faster Python 3.13 Plan</li>\n<li>00:03:14 &ndash; PyPy v7.3.12 Released</li>\n<li>00:03:28 &ndash; Migrate to <code>.readthedocs.yaml</code> Configuration</li>\n<li>00:05:14 &ndash; PyCon US 2023 and PyCascades 2023 Videos Are Up</li>\n<li>00:05:37 &ndash; What&rsquo;s the Zen of Python?</li>\n<li>00:09:22 &ndash; Python for Finance: Pandas Resample, Groupby, and Rolling</li>\n<li>00:15:24 &ndash; Python and the Legend of Zelda</li>\n<li>00:17:47 &ndash; Don&rsquo;t Say &ldquo;Simply&rdquo; Use Pyenv, Poetry or Anaconda</li>\n<li>00:28:54 &ndash; Is Parallel Programming Hard?</li>\n<li>00:40:54 &ndash; Video Course Spotlight</li>\n<li>00:42:20 &ndash; pymg: A Better Display for Stack Traces</li>\n<li>00:44:58 &ndash; faker-file: Create Files With Fake Data</li>\n<li>00:49:14 &ndash; Thanks and goodbye</li>\n</ul>\n<p>News:</p>\n<ul>\n<li><a href=\"https://pythoninsider.blogspot.com/2023/06/python-3114-31012-3917-3817-3717-and.html\">Python 3.11.4, 3.10.12, 3.9.17, 3.8.17, 3.7.17, and 3.12.0 Beta 2 Released</a></li>\n<li><a href=\"https://pythoninsider.blogspot.com/2023/06/python-3120-beta-3-released.html\">Python Insider: Python 3.12.0 beta 3 released</a></li>\n<li><a href=\"https://blog.pypi.org/posts/2023-06-01-2fa-enforcement-for-upload/\">Enforcement of 2FA for PyPI Began June 1st</a> &ndash; For those accounts that have two-factor authentication turned on for PyPI uploads, the use of 2FA is now required. Users with 2FA who were only using a password in the past will now have to perform 2FA as well. This is all part of the PyPI transition to 2FA across the board.</li>\n<li><a href=\"https://github.com/faster-cpython/ideas/blob/main/3.13/README.md\">Faster Python 3.13 Plan</a> &ndash; This brief outline highlights the plan for the faster CPython project for the 3.13 release. It includes <a href=\"https://peps.python.org/pep-0669/\">PEP 669</a>, <a href=\"https://peps.python.org/pep-0554/\">PEP 554</a>, improved memory management, and more. Here&rsquo;s the associated <a href=\"https://news.ycombinator.com/item?id=36339777\">Hacker News discussion</a>.</li>\n<li><a href=\"https://www.pypy.org/posts/2023/06/pypy-v7312-release.html\">PyPy v7.3.12 Released</a></li>\n<li><a href=\"https://blog.readthedocs.com/migrate-configuration-v2/\">Migrate to <code>.readthedocs.yaml</code> Configuration</a> &ndash; The Read the Docs site has announced the new requirement that all builds must move to using a <code>.readthedocs.yaml</code> configuration file, version 2. There are some test windows where they&rsquo;ll be temporarily enforcing the change, but the final release date is September 25, 2023. Read on for details on how to migrate your project.</li>\n<li><a href=\"https://www.youtube.com/playlist?list=PLcNrB7gPa-NedACvFYa9iVUIhnku_EBSz\">PyCascades 2023 Videos Are Up</a></li>\n<li><a href=\"https://www.youtube.com/c/pyconus\">PyCon US 2023 Videos Are Up</a></li>\n</ul>\n<p>Topic Links:</p>\n<ul>\n<li><a href=\"https://realpython.com/zen-of-python/\">What&rsquo;s the Zen of Python?</a> &ndash; In this tutorial, you&rsquo;ll be exploring the Zen of Python, a collection of nineteen guiding principles for writing idiomatic Python. You&rsquo;ll find out how they originated and whether you should follow them. Along the way, you&rsquo;ll uncover several inside jokes associated with this humorous poem.</li>\n<li><a href=\"https://ponder.io/python-for-finance-pandas-resample-groupby-and-rolling/\">Python for Finance: Pandas Resample, Groupby, and Rolling</a> &ndash; When working with time series data such as financial information, the resample, grouping, and rolling features of pandas can make your life easier.</li>\n<li><a href=\"https://gazj.substack.com/p/python-and-the-legend-of-zelda\">Python and the Legend of Zelda</a> &ndash; The Game Boy Color version of Legend of Zelda: Oracle of Ages contains a grid-based puzzle. Gaz writes about creating a brute-force program to solve the challenge using Python.</li>\n<li><a href=\"https://www.bitecode.dev/p/why-not-tell-people-to-simply-use\">Don&rsquo;t Say &ldquo;Simply&rdquo; Use Pyenv, Poetry or Anaconda</a> &ndash; This article talks about the issues that newer Python coders might encounter by adopting more complicated package management mechanisms and explains why sticking with <code>pip</code> is often the better choice.</li>\n</ul>\n<p>Discussion:</p>\n<ul>\n<li><a href=\"https://news.ycombinator.com/item?id=36318280\">Is Parallel Programming Hard?</a></li>\n<li><a href=\"https://charlesleifer.com/blog/asyncio/\">AsyncIO: Why I Hate It</a> &ndash; Charles is the creator of <a href=\"https://docs.peewee-orm.com/en/latest/\">Peewee ORM</a> and often gets the question <em>when will it support <code>asyncio</code>?</em> In this opinion piece, he talks about why he doesn&rsquo;t like <code>asyncio</code> and which alternatives he prefers.</li>\n</ul>\n<p>Projects:</p>\n<ul>\n<li><a href=\"https://github.com/mimseyedi/pymg\">pymg: A Better Display for Stack Traces</a></li>\n<li><a href=\"https://github.com/barseghyanartur/faker-file\">faker-file: Create Files With Fake Data</a></li>\n</ul>\n<p>Additional Links:</p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=LA1Ir0s4icw\">Practicality Beats Purity: The Zen of Python&rsquo;s Escape Hatch - Chris Neugebauer - YouTube</a></li>\n<li><a href=\"https://bitecode.substack.com/p/relieving-your-python-packaging-pain\">Relieving your Python packaging pain</a></li>\n<li><a href=\"https://mirrors.edge.kernel.org/pub/linux/kernel/people/paulmck/perfbook/perfbook.html\">Is Parallel Programming Hard, And, If So, What Can You Do About It? - Book Download</a></li>\n</ul>\n<p>Level up your Python skills with our expert-led courses:</p>\n<ul>\n<li><a href=\"https://realpython.com/courses/threading-python/\">Threading in Python</a></li>\n<li><a href=\"https://realpython.com/courses/python-3-concurrency-asyncio-module/\">Hands-On Python 3 Concurrency With the asyncio Module</a></li>\n<li><a href=\"https://realpython.com/courses/speed-python-concurrency/\">Speed Up Python With Concurrency</a></li>\n</ul> <p><a rel=\"payment\" href=\"https://realpython.com/join\">Support the podcast &amp; join our community of Pythonistas</a></p>",
    "EnclosureUrl": "https://dts.podtrac.com/redirect.mp3/files.realpython.com/podcasts/RPP_E162_02_Cx2.363436affb2f.mp3"
}